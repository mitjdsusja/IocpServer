syntax = "proto3";  // proto2 -> proto3·Î º¯°æ

package msgTest;

message PacketFrame{
    int32 messageId = 1;
    int32 totalFrameCount = 2;
    int32 frameIndex = 3;
    bytes payload = 4;
}

message Vector {  
    sint32 x = 1;  
    sint32 y = 2;  
    sint32 z = 3;  
}

message MoveState{
    int32 roomId = 1;
    string playerName = 2;
    Vector position = 3; 
    Vector velocity = 4; 
    Vector rotation = 5;
    int64 timestamp = 6; 
}

enum SkillType{
    SKILL_TYPE_UNKNOWN = 0;
    SKILL_TYPE_PROJECTILE = 1;
    SKILL_TYPE_AOE = 2;
    SKILL_TYPE_TARGET = 3;
}
enum SkillFailType{
    SKILL_FAIL_TYPE_UNKNOWN = 0;
}

message Player{
    string name = 1;
    int32 level = 2;
    Vector position = 3;
}

message Room{
    int32 roomId = 1;
    string roomName = 2;  
    int32 maxPlayerCount = 3;
    int32 playerCount = 4;
    string hostName = 5;
}

message CS_Ping{
    int64 timestamp = 1;
}
message SC_Pong{
    int64 timestamp = 1;
    int64 serverTimestamp = 2;
}

message CS_Login_Request{
    string id = 1;
    string password = 2;
}
message SC_Login_Response{
    bool success = 1;
    string errorMessage = 2;
    uint64 sessionId = 3;
}

message CS_My_Player_Info_Request{
    uint64 sessionId = 1;
}
message SC_My_Player_Info_Response{
    Player playerInfo = 1;
}

message CS_Room_Player_List_Request{
    int32 roomId = 1;
}
message SC_Room_Player_List_Response{
    repeated Player playerList = 1;
}

message CS_Create_Room_Request{
    string roomName = 1;
    string hostName = 2;
}
message SC_Create_Room_Response{
    bool success = 1;
    string errorMessage = 2;
    Room room = 3;
}

message CS_Room_List_Request{

}
message SC_Room_List_Response{
    repeated Room roomList = 1;
}

message CS_Enter_Room_Request{
    int32 roomId = 1;
}
message SC_Enter_Room_Response{
    bool success = 1;
    string errorMessage = 2;
    Room room = 3;
    repeated Player playerListInGrid = 4;
}
message CS_Enter_Room_Complete{
    
}

message SC_Player_Enter_Room_Notification{
    Player player = 1;
}

message CS_Player_Move_Request{
    MoveState moveState = 1;
}

message SC_Player_Move_Notification{
    repeated MoveState moveStates = 1;
}

message SC_Player_List_In_Grid{
    repeated string playerNameList = 1;
}

message CS_Skill_Use{
    int32 skillId = 1;
    SkillType skillType = 2;
    Vector direction = 3;
    Vector targetPos = 4;
    int32 targetId = 5;
}

message SC_Skill_Result{
    bool success = 1;
    SkillFailType skillFailType = 2;
    int32 skillId = 3;
    Vector direction = 4;
    Vector targetPos = 5;
    int32 targetId = 6;
    int64 timestamp = 7;
}

message SC_Skill_Cast{
    int32 casterId = 1;
    int32 skillId = 2;
    SkillType skillType = 3;
    Vector startPos = 4;
    Vector direction = 5;
    Vector targetPos = 6;
    int32 targetId = 7;
    int64 timestamp = 8;
}