// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: messageTest.proto
// Protobuf C++ Version: 5.30.0-dev

#include "messageTest.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace msgTest {

inline constexpr UserInfo_Vel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vecx_{0},
        vecy_{0},
        vecz_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserInfo_Vel::UserInfo_Vel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UserInfo_Vel_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserInfo_VelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserInfo_VelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserInfo_VelDefaultTypeInternal() {}
  union {
    UserInfo_Vel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserInfo_VelDefaultTypeInternal _UserInfo_Vel_default_instance_;

inline constexpr UserInfo_Pos::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        posx_{0},
        posy_{0},
        posz_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserInfo_Pos::UserInfo_Pos(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UserInfo_Pos_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserInfo_PosDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserInfo_PosDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserInfo_PosDefaultTypeInternal() {}
  union {
    UserInfo_Pos _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserInfo_PosDefaultTypeInternal _UserInfo_Pos_default_instance_;

inline constexpr UserInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pos_{nullptr},
        vec_{nullptr},
        id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserInfo::UserInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UserInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserInfoDefaultTypeInternal() {}
  union {
    UserInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserInfoDefaultTypeInternal _UserInfo_default_instance_;

inline constexpr SC_Response_User_Info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        userinfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Response_User_Info::SC_Response_User_Info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SC_Response_User_Info_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Response_User_InfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Response_User_InfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Response_User_InfoDefaultTypeInternal() {}
  union {
    SC_Response_User_Info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Response_User_InfoDefaultTypeInternal _SC_Response_User_Info_default_instance_;

inline constexpr SC_Broadcast_User_Info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : usersinfo_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Broadcast_User_Info::SC_Broadcast_User_Info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SC_Broadcast_User_Info_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Broadcast_User_InfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Broadcast_User_InfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Broadcast_User_InfoDefaultTypeInternal() {}
  union {
    SC_Broadcast_User_Info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Broadcast_User_InfoDefaultTypeInternal _SC_Broadcast_User_Info_default_instance_;

inline constexpr SC_Add_User::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        usersinfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Add_User::SC_Add_User(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SC_Add_User_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Add_UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Add_UserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Add_UserDefaultTypeInternal() {}
  union {
    SC_Add_User _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Add_UserDefaultTypeInternal _SC_Add_User_default_instance_;

inline constexpr CS_Send_User_Info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        userinfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CS_Send_User_Info::CS_Send_User_Info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CS_Send_User_Info_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CS_Send_User_InfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CS_Send_User_InfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CS_Send_User_InfoDefaultTypeInternal() {}
  union {
    CS_Send_User_Info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CS_Send_User_InfoDefaultTypeInternal _CS_Send_User_Info_default_instance_;
}  // namespace msgTest
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_messageTest_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_messageTest_2eproto = nullptr;
const ::uint32_t
    TableStruct_messageTest_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo_Pos, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo_Pos, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo_Pos, _impl_.posx_),
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo_Pos, _impl_.posy_),
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo_Pos, _impl_.posz_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo_Vel, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo_Vel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo_Vel, _impl_.vecx_),
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo_Vel, _impl_.vecy_),
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo_Vel, _impl_.vecz_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::msgTest::UserInfo, _impl_.vec_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Send_User_Info, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Send_User_Info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Send_User_Info, _impl_.userinfo_),
        0,
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Response_User_Info, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Response_User_Info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Response_User_Info, _impl_.userinfo_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Broadcast_User_Info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Broadcast_User_Info, _impl_.usersinfo_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Add_User, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Add_User, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Add_User, _impl_.usersinfo_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::msgTest::UserInfo_Pos)},
        {14, 25, -1, sizeof(::msgTest::UserInfo_Vel)},
        {28, 39, -1, sizeof(::msgTest::UserInfo)},
        {42, 51, -1, sizeof(::msgTest::CS_Send_User_Info)},
        {52, 61, -1, sizeof(::msgTest::SC_Response_User_Info)},
        {62, -1, -1, sizeof(::msgTest::SC_Broadcast_User_Info)},
        {71, 80, -1, sizeof(::msgTest::SC_Add_User)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::msgTest::_UserInfo_Pos_default_instance_._instance,
    &::msgTest::_UserInfo_Vel_default_instance_._instance,
    &::msgTest::_UserInfo_default_instance_._instance,
    &::msgTest::_CS_Send_User_Info_default_instance_._instance,
    &::msgTest::_SC_Response_User_Info_default_instance_._instance,
    &::msgTest::_SC_Broadcast_User_Info_default_instance_._instance,
    &::msgTest::_SC_Add_User_default_instance_._instance,
};
const char descriptor_table_protodef_messageTest_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021messageTest.proto\022\007msgTest\"\322\001\n\010UserInf"
    "o\022\n\n\002id\030\001 \002(\005\022\"\n\003pos\030\002 \002(\0132\025.msgTest.Use"
    "rInfo.Pos\022\"\n\003vec\030\003 \002(\0132\025.msgTest.UserInf"
    "o.Vel\0328\n\003Pos\022\017\n\004posX\030\001 \001(\005:\0010\022\017\n\004posY\030\002 "
    "\001(\005:\0010\022\017\n\004posZ\030\003 \001(\005:\0010\0328\n\003Vel\022\017\n\004vecX\030\001"
    " \001(\005:\0010\022\017\n\004vecY\030\002 \001(\005:\0010\022\017\n\004vecZ\030\003 \001(\005:\001"
    "0\"8\n\021CS_Send_User_Info\022#\n\010userInfo\030\001 \002(\013"
    "2\021.msgTest.UserInfo\"<\n\025SC_Response_User_"
    "Info\022#\n\010userInfo\030\001 \002(\0132\021.msgTest.UserInf"
    "o\">\n\026SC_Broadcast_User_Info\022$\n\tusersInfo"
    "\030\001 \003(\0132\021.msgTest.UserInfo\"3\n\013SC_Add_User"
    "\022$\n\tusersInfo\030\001 \002(\0132\021.msgTest.UserInfo"
};
static ::absl::once_flag descriptor_table_messageTest_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_messageTest_2eproto = {
    false,
    false,
    478,
    descriptor_table_protodef_messageTest_2eproto,
    "messageTest.proto",
    &descriptor_table_messageTest_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_messageTest_2eproto::offsets,
    file_level_enum_descriptors_messageTest_2eproto,
    file_level_service_descriptors_messageTest_2eproto,
};
namespace msgTest {
// ===================================================================

class UserInfo_Pos::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UserInfo_Pos>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UserInfo_Pos, _impl_._has_bits_);
};

UserInfo_Pos::UserInfo_Pos(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UserInfo_Pos_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.UserInfo.Pos)
}
UserInfo_Pos::UserInfo_Pos(
    ::google::protobuf::Arena* arena, const UserInfo_Pos& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UserInfo_Pos_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE UserInfo_Pos::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UserInfo_Pos::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, posx_),
           0,
           offsetof(Impl_, posz_) -
               offsetof(Impl_, posx_) +
               sizeof(Impl_::posz_));
}
UserInfo_Pos::~UserInfo_Pos() {
  // @@protoc_insertion_point(destructor:msgTest.UserInfo.Pos)
  SharedDtor(*this);
}
inline void UserInfo_Pos::SharedDtor(MessageLite& self) {
  UserInfo_Pos& this_ = static_cast<UserInfo_Pos&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* UserInfo_Pos::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UserInfo_Pos(arena);
}
constexpr auto UserInfo_Pos::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UserInfo_Pos),
                                            alignof(UserInfo_Pos));
}
constexpr auto UserInfo_Pos::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UserInfo_Pos_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UserInfo_Pos::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UserInfo_Pos>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UserInfo_Pos::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UserInfo_Pos>(), &UserInfo_Pos::ByteSizeLong,
              &UserInfo_Pos::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UserInfo_Pos, _impl_._cached_size_),
          false,
      },
      &UserInfo_Pos::kDescriptorMethods,
      &descriptor_table_messageTest_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        UserInfo_Pos_class_data_ =
            UserInfo_Pos::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* UserInfo_Pos::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UserInfo_Pos_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UserInfo_Pos_class_data_.tc_table);
  return UserInfo_Pos_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> UserInfo_Pos::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserInfo_Pos, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UserInfo_Pos_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::UserInfo_Pos>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 posX = 1 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserInfo_Pos, _impl_.posx_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(UserInfo_Pos, _impl_.posx_)}},
    // optional int32 posY = 2 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserInfo_Pos, _impl_.posy_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UserInfo_Pos, _impl_.posy_)}},
    // optional int32 posZ = 3 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserInfo_Pos, _impl_.posz_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(UserInfo_Pos, _impl_.posz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 posX = 1 [default = 0];
    {PROTOBUF_FIELD_OFFSET(UserInfo_Pos, _impl_.posx_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 posY = 2 [default = 0];
    {PROTOBUF_FIELD_OFFSET(UserInfo_Pos, _impl_.posy_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 posZ = 3 [default = 0];
    {PROTOBUF_FIELD_OFFSET(UserInfo_Pos, _impl_.posz_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void UserInfo_Pos::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.UserInfo.Pos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.posx_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.posz_) -
        reinterpret_cast<char*>(&_impl_.posx_)) + sizeof(_impl_.posz_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UserInfo_Pos::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UserInfo_Pos& this_ = static_cast<const UserInfo_Pos&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UserInfo_Pos::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UserInfo_Pos& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.UserInfo.Pos)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 posX = 1 [default = 0];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_posx(), target);
          }

          // optional int32 posY = 2 [default = 0];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_posy(), target);
          }

          // optional int32 posZ = 3 [default = 0];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_posz(), target);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.UserInfo.Pos)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UserInfo_Pos::ByteSizeLong(const MessageLite& base) {
          const UserInfo_Pos& this_ = static_cast<const UserInfo_Pos&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UserInfo_Pos::ByteSizeLong() const {
          const UserInfo_Pos& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.UserInfo.Pos)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional int32 posX = 1 [default = 0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_posx());
            }
            // optional int32 posY = 2 [default = 0];
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_posy());
            }
            // optional int32 posZ = 3 [default = 0];
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_posz());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UserInfo_Pos::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserInfo_Pos*>(&to_msg);
  auto& from = static_cast<const UserInfo_Pos&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.UserInfo.Pos)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.posx_ = from._impl_.posx_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.posy_ = from._impl_.posy_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.posz_ = from._impl_.posz_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserInfo_Pos::CopyFrom(const UserInfo_Pos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.UserInfo.Pos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UserInfo_Pos::InternalSwap(UserInfo_Pos* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserInfo_Pos, _impl_.posz_)
      + sizeof(UserInfo_Pos::_impl_.posz_)
      - PROTOBUF_FIELD_OFFSET(UserInfo_Pos, _impl_.posx_)>(
          reinterpret_cast<char*>(&_impl_.posx_),
          reinterpret_cast<char*>(&other->_impl_.posx_));
}

::google::protobuf::Metadata UserInfo_Pos::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UserInfo_Vel::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UserInfo_Vel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UserInfo_Vel, _impl_._has_bits_);
};

UserInfo_Vel::UserInfo_Vel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UserInfo_Vel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.UserInfo.Vel)
}
UserInfo_Vel::UserInfo_Vel(
    ::google::protobuf::Arena* arena, const UserInfo_Vel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UserInfo_Vel_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE UserInfo_Vel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UserInfo_Vel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, vecx_),
           0,
           offsetof(Impl_, vecz_) -
               offsetof(Impl_, vecx_) +
               sizeof(Impl_::vecz_));
}
UserInfo_Vel::~UserInfo_Vel() {
  // @@protoc_insertion_point(destructor:msgTest.UserInfo.Vel)
  SharedDtor(*this);
}
inline void UserInfo_Vel::SharedDtor(MessageLite& self) {
  UserInfo_Vel& this_ = static_cast<UserInfo_Vel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* UserInfo_Vel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UserInfo_Vel(arena);
}
constexpr auto UserInfo_Vel::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UserInfo_Vel),
                                            alignof(UserInfo_Vel));
}
constexpr auto UserInfo_Vel::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UserInfo_Vel_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UserInfo_Vel::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UserInfo_Vel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UserInfo_Vel::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UserInfo_Vel>(), &UserInfo_Vel::ByteSizeLong,
              &UserInfo_Vel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UserInfo_Vel, _impl_._cached_size_),
          false,
      },
      &UserInfo_Vel::kDescriptorMethods,
      &descriptor_table_messageTest_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        UserInfo_Vel_class_data_ =
            UserInfo_Vel::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* UserInfo_Vel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UserInfo_Vel_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UserInfo_Vel_class_data_.tc_table);
  return UserInfo_Vel_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> UserInfo_Vel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserInfo_Vel, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UserInfo_Vel_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::UserInfo_Vel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 vecX = 1 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserInfo_Vel, _impl_.vecx_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(UserInfo_Vel, _impl_.vecx_)}},
    // optional int32 vecY = 2 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserInfo_Vel, _impl_.vecy_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UserInfo_Vel, _impl_.vecy_)}},
    // optional int32 vecZ = 3 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserInfo_Vel, _impl_.vecz_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(UserInfo_Vel, _impl_.vecz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 vecX = 1 [default = 0];
    {PROTOBUF_FIELD_OFFSET(UserInfo_Vel, _impl_.vecx_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 vecY = 2 [default = 0];
    {PROTOBUF_FIELD_OFFSET(UserInfo_Vel, _impl_.vecy_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 vecZ = 3 [default = 0];
    {PROTOBUF_FIELD_OFFSET(UserInfo_Vel, _impl_.vecz_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void UserInfo_Vel::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.UserInfo.Vel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.vecx_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.vecz_) -
        reinterpret_cast<char*>(&_impl_.vecx_)) + sizeof(_impl_.vecz_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UserInfo_Vel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UserInfo_Vel& this_ = static_cast<const UserInfo_Vel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UserInfo_Vel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UserInfo_Vel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.UserInfo.Vel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 vecX = 1 [default = 0];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_vecx(), target);
          }

          // optional int32 vecY = 2 [default = 0];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_vecy(), target);
          }

          // optional int32 vecZ = 3 [default = 0];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_vecz(), target);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.UserInfo.Vel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UserInfo_Vel::ByteSizeLong(const MessageLite& base) {
          const UserInfo_Vel& this_ = static_cast<const UserInfo_Vel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UserInfo_Vel::ByteSizeLong() const {
          const UserInfo_Vel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.UserInfo.Vel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional int32 vecX = 1 [default = 0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_vecx());
            }
            // optional int32 vecY = 2 [default = 0];
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_vecy());
            }
            // optional int32 vecZ = 3 [default = 0];
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_vecz());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UserInfo_Vel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserInfo_Vel*>(&to_msg);
  auto& from = static_cast<const UserInfo_Vel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.UserInfo.Vel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.vecx_ = from._impl_.vecx_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.vecy_ = from._impl_.vecy_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.vecz_ = from._impl_.vecz_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserInfo_Vel::CopyFrom(const UserInfo_Vel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.UserInfo.Vel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UserInfo_Vel::InternalSwap(UserInfo_Vel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserInfo_Vel, _impl_.vecz_)
      + sizeof(UserInfo_Vel::_impl_.vecz_)
      - PROTOBUF_FIELD_OFFSET(UserInfo_Vel, _impl_.vecx_)>(
          reinterpret_cast<char*>(&_impl_.vecx_),
          reinterpret_cast<char*>(&other->_impl_.vecx_));
}

::google::protobuf::Metadata UserInfo_Vel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UserInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UserInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UserInfo, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

UserInfo::UserInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UserInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.UserInfo)
}
PROTOBUF_NDEBUG_INLINE UserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::UserInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UserInfo::UserInfo(
    ::google::protobuf::Arena* arena,
    const UserInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UserInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UserInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::UserInfo_Pos>(
                              arena, *from._impl_.pos_)
                        : nullptr;
  _impl_.vec_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::UserInfo_Vel>(
                              arena, *from._impl_.vec_)
                        : nullptr;
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:msgTest.UserInfo)
}
PROTOBUF_NDEBUG_INLINE UserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UserInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::id_));
}
UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:msgTest.UserInfo)
  SharedDtor(*this);
}
inline void UserInfo::SharedDtor(MessageLite& self) {
  UserInfo& this_ = static_cast<UserInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pos_;
  delete this_._impl_.vec_;
  this_._impl_.~Impl_();
}

inline void* UserInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UserInfo(arena);
}
constexpr auto UserInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UserInfo),
                                            alignof(UserInfo));
}
constexpr auto UserInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UserInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          UserInfo::IsInitializedImpl,
          &UserInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UserInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UserInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UserInfo>(), &UserInfo::ByteSizeLong,
              &UserInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UserInfo, _impl_._cached_size_),
          false,
      },
      &UserInfo::kDescriptorMethods,
      &descriptor_table_messageTest_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        UserInfo_class_data_ =
            UserInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* UserInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UserInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UserInfo_class_data_.tc_table);
  return UserInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> UserInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserInfo, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UserInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::UserInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserInfo, _impl_.id_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.id_)}},
    // required .msgTest.UserInfo.Pos pos = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.pos_)}},
    // required .msgTest.UserInfo.Vel vec = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.vec_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required .msgTest.UserInfo.Pos pos = 2;
    {PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .msgTest.UserInfo.Vel vec = 3;
    {PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.vec_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::UserInfo_Pos>()},
    {::_pbi::TcParser::GetTable<::msgTest::UserInfo_Vel>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.UserInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.vec_ != nullptr);
      _impl_.vec_->Clear();
    }
  }
  _impl_.id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UserInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UserInfo& this_ = static_cast<const UserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UserInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.UserInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required int32 id = 1;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_id(), target);
          }

          // required .msgTest.UserInfo.Pos pos = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pos_, this_._impl_.pos_->GetCachedSize(), target,
                stream);
          }

          // required .msgTest.UserInfo.Vel vec = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.vec_, this_._impl_.vec_->GetCachedSize(), target,
                stream);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.UserInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UserInfo::ByteSizeLong(const MessageLite& base) {
          const UserInfo& this_ = static_cast<const UserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UserInfo::ByteSizeLong() const {
          const UserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.UserInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // required .msgTest.UserInfo.Pos pos = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_);
            }
            // required .msgTest.UserInfo.Vel vec = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.vec_);
            }
            // required int32 id = 1;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UserInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserInfo*>(&to_msg);
  auto& from = static_cast<const UserInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.UserInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::UserInfo_Pos>(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.vec_ != nullptr);
      if (_this->_impl_.vec_ == nullptr) {
        _this->_impl_.vec_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::UserInfo_Vel>(arena, *from._impl_.vec_);
      } else {
        _this->_impl_.vec_->MergeFrom(*from._impl_.vec_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserInfo::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const UserInfo&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void UserInfo::InternalSwap(UserInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.id_)
      + sizeof(UserInfo::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CS_Send_User_Info::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CS_Send_User_Info>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CS_Send_User_Info, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CS_Send_User_Info::CS_Send_User_Info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CS_Send_User_Info_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.CS_Send_User_Info)
}
PROTOBUF_NDEBUG_INLINE CS_Send_User_Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::CS_Send_User_Info& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CS_Send_User_Info::CS_Send_User_Info(
    ::google::protobuf::Arena* arena,
    const CS_Send_User_Info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CS_Send_User_Info_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CS_Send_User_Info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.userinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::UserInfo>(
                              arena, *from._impl_.userinfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:msgTest.CS_Send_User_Info)
}
PROTOBUF_NDEBUG_INLINE CS_Send_User_Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CS_Send_User_Info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.userinfo_ = {};
}
CS_Send_User_Info::~CS_Send_User_Info() {
  // @@protoc_insertion_point(destructor:msgTest.CS_Send_User_Info)
  SharedDtor(*this);
}
inline void CS_Send_User_Info::SharedDtor(MessageLite& self) {
  CS_Send_User_Info& this_ = static_cast<CS_Send_User_Info&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.userinfo_;
  this_._impl_.~Impl_();
}

inline void* CS_Send_User_Info::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CS_Send_User_Info(arena);
}
constexpr auto CS_Send_User_Info::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CS_Send_User_Info),
                                            alignof(CS_Send_User_Info));
}
constexpr auto CS_Send_User_Info::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CS_Send_User_Info_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          CS_Send_User_Info::IsInitializedImpl,
          &CS_Send_User_Info::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CS_Send_User_Info>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CS_Send_User_Info::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CS_Send_User_Info>(), &CS_Send_User_Info::ByteSizeLong,
              &CS_Send_User_Info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CS_Send_User_Info, _impl_._cached_size_),
          false,
      },
      &CS_Send_User_Info::kDescriptorMethods,
      &descriptor_table_messageTest_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CS_Send_User_Info_class_data_ =
            CS_Send_User_Info::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* CS_Send_User_Info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CS_Send_User_Info_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CS_Send_User_Info_class_data_.tc_table);
  return CS_Send_User_Info_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CS_Send_User_Info::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CS_Send_User_Info, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CS_Send_User_Info_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::CS_Send_User_Info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required .msgTest.UserInfo userInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CS_Send_User_Info, _impl_.userinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .msgTest.UserInfo userInfo = 1;
    {PROTOBUF_FIELD_OFFSET(CS_Send_User_Info, _impl_.userinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::UserInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CS_Send_User_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.CS_Send_User_Info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.userinfo_ != nullptr);
    _impl_.userinfo_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CS_Send_User_Info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CS_Send_User_Info& this_ = static_cast<const CS_Send_User_Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CS_Send_User_Info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CS_Send_User_Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.CS_Send_User_Info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .msgTest.UserInfo userInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.userinfo_, this_._impl_.userinfo_->GetCachedSize(), target,
                stream);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.CS_Send_User_Info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CS_Send_User_Info::ByteSizeLong(const MessageLite& base) {
          const CS_Send_User_Info& this_ = static_cast<const CS_Send_User_Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CS_Send_User_Info::ByteSizeLong() const {
          const CS_Send_User_Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.CS_Send_User_Info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // required .msgTest.UserInfo userInfo = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.userinfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CS_Send_User_Info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CS_Send_User_Info*>(&to_msg);
  auto& from = static_cast<const CS_Send_User_Info&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.CS_Send_User_Info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.userinfo_ != nullptr);
    if (_this->_impl_.userinfo_ == nullptr) {
      _this->_impl_.userinfo_ =
          ::google::protobuf::Message::CopyConstruct<::msgTest::UserInfo>(arena, *from._impl_.userinfo_);
    } else {
      _this->_impl_.userinfo_->MergeFrom(*from._impl_.userinfo_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CS_Send_User_Info::CopyFrom(const CS_Send_User_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.CS_Send_User_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CS_Send_User_Info::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const CS_Send_User_Info&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.userinfo_->IsInitialized()) return false;
  }
  return true;
}

void CS_Send_User_Info::InternalSwap(CS_Send_User_Info* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.userinfo_, other->_impl_.userinfo_);
}

::google::protobuf::Metadata CS_Send_User_Info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Response_User_Info::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC_Response_User_Info>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC_Response_User_Info, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SC_Response_User_Info::SC_Response_User_Info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SC_Response_User_Info_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Response_User_Info)
}
PROTOBUF_NDEBUG_INLINE SC_Response_User_Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Response_User_Info& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC_Response_User_Info::SC_Response_User_Info(
    ::google::protobuf::Arena* arena,
    const SC_Response_User_Info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SC_Response_User_Info_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Response_User_Info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.userinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::UserInfo>(
                              arena, *from._impl_.userinfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Response_User_Info)
}
PROTOBUF_NDEBUG_INLINE SC_Response_User_Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC_Response_User_Info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.userinfo_ = {};
}
SC_Response_User_Info::~SC_Response_User_Info() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Response_User_Info)
  SharedDtor(*this);
}
inline void SC_Response_User_Info::SharedDtor(MessageLite& self) {
  SC_Response_User_Info& this_ = static_cast<SC_Response_User_Info&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.userinfo_;
  this_._impl_.~Impl_();
}

inline void* SC_Response_User_Info::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Response_User_Info(arena);
}
constexpr auto SC_Response_User_Info::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SC_Response_User_Info),
                                            alignof(SC_Response_User_Info));
}
constexpr auto SC_Response_User_Info::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SC_Response_User_Info_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          SC_Response_User_Info::IsInitializedImpl,
          &SC_Response_User_Info::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SC_Response_User_Info>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SC_Response_User_Info::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SC_Response_User_Info>(), &SC_Response_User_Info::ByteSizeLong,
              &SC_Response_User_Info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SC_Response_User_Info, _impl_._cached_size_),
          false,
      },
      &SC_Response_User_Info::kDescriptorMethods,
      &descriptor_table_messageTest_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        SC_Response_User_Info_class_data_ =
            SC_Response_User_Info::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* SC_Response_User_Info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SC_Response_User_Info_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SC_Response_User_Info_class_data_.tc_table);
  return SC_Response_User_Info_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SC_Response_User_Info::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC_Response_User_Info, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SC_Response_User_Info_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Response_User_Info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required .msgTest.UserInfo userInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SC_Response_User_Info, _impl_.userinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .msgTest.UserInfo userInfo = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Response_User_Info, _impl_.userinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::UserInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC_Response_User_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Response_User_Info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.userinfo_ != nullptr);
    _impl_.userinfo_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Response_User_Info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Response_User_Info& this_ = static_cast<const SC_Response_User_Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Response_User_Info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Response_User_Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Response_User_Info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .msgTest.UserInfo userInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.userinfo_, this_._impl_.userinfo_->GetCachedSize(), target,
                stream);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Response_User_Info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Response_User_Info::ByteSizeLong(const MessageLite& base) {
          const SC_Response_User_Info& this_ = static_cast<const SC_Response_User_Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Response_User_Info::ByteSizeLong() const {
          const SC_Response_User_Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Response_User_Info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // required .msgTest.UserInfo userInfo = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.userinfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Response_User_Info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Response_User_Info*>(&to_msg);
  auto& from = static_cast<const SC_Response_User_Info&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Response_User_Info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.userinfo_ != nullptr);
    if (_this->_impl_.userinfo_ == nullptr) {
      _this->_impl_.userinfo_ =
          ::google::protobuf::Message::CopyConstruct<::msgTest::UserInfo>(arena, *from._impl_.userinfo_);
    } else {
      _this->_impl_.userinfo_->MergeFrom(*from._impl_.userinfo_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Response_User_Info::CopyFrom(const SC_Response_User_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Response_User_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SC_Response_User_Info::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const SC_Response_User_Info&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.userinfo_->IsInitialized()) return false;
  }
  return true;
}

void SC_Response_User_Info::InternalSwap(SC_Response_User_Info* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.userinfo_, other->_impl_.userinfo_);
}

::google::protobuf::Metadata SC_Response_User_Info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Broadcast_User_Info::_Internal {
 public:
};

SC_Broadcast_User_Info::SC_Broadcast_User_Info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SC_Broadcast_User_Info_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Broadcast_User_Info)
}
PROTOBUF_NDEBUG_INLINE SC_Broadcast_User_Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Broadcast_User_Info& from_msg)
      : usersinfo_{visibility, arena, from.usersinfo_},
        _cached_size_{0} {}

SC_Broadcast_User_Info::SC_Broadcast_User_Info(
    ::google::protobuf::Arena* arena,
    const SC_Broadcast_User_Info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SC_Broadcast_User_Info_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Broadcast_User_Info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Broadcast_User_Info)
}
PROTOBUF_NDEBUG_INLINE SC_Broadcast_User_Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : usersinfo_{visibility, arena},
        _cached_size_{0} {}

inline void SC_Broadcast_User_Info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SC_Broadcast_User_Info::~SC_Broadcast_User_Info() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Broadcast_User_Info)
  SharedDtor(*this);
}
inline void SC_Broadcast_User_Info::SharedDtor(MessageLite& self) {
  SC_Broadcast_User_Info& this_ = static_cast<SC_Broadcast_User_Info&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SC_Broadcast_User_Info::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Broadcast_User_Info(arena);
}
constexpr auto SC_Broadcast_User_Info::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SC_Broadcast_User_Info, _impl_.usersinfo_) +
          decltype(SC_Broadcast_User_Info::_impl_.usersinfo_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SC_Broadcast_User_Info), alignof(SC_Broadcast_User_Info), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SC_Broadcast_User_Info::PlacementNew_,
                                 sizeof(SC_Broadcast_User_Info),
                                 alignof(SC_Broadcast_User_Info));
  }
}
constexpr auto SC_Broadcast_User_Info::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SC_Broadcast_User_Info_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          SC_Broadcast_User_Info::IsInitializedImpl,
          &SC_Broadcast_User_Info::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SC_Broadcast_User_Info>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SC_Broadcast_User_Info::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SC_Broadcast_User_Info>(), &SC_Broadcast_User_Info::ByteSizeLong,
              &SC_Broadcast_User_Info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SC_Broadcast_User_Info, _impl_._cached_size_),
          false,
      },
      &SC_Broadcast_User_Info::kDescriptorMethods,
      &descriptor_table_messageTest_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        SC_Broadcast_User_Info_class_data_ =
            SC_Broadcast_User_Info::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* SC_Broadcast_User_Info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SC_Broadcast_User_Info_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SC_Broadcast_User_Info_class_data_.tc_table);
  return SC_Broadcast_User_Info_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SC_Broadcast_User_Info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SC_Broadcast_User_Info_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Broadcast_User_Info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .msgTest.UserInfo usersInfo = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Broadcast_User_Info, _impl_.usersinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .msgTest.UserInfo usersInfo = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Broadcast_User_Info, _impl_.usersinfo_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::UserInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC_Broadcast_User_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Broadcast_User_Info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.usersinfo_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Broadcast_User_Info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Broadcast_User_Info& this_ = static_cast<const SC_Broadcast_User_Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Broadcast_User_Info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Broadcast_User_Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Broadcast_User_Info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .msgTest.UserInfo usersInfo = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_usersinfo_size());
               i < n; i++) {
            const auto& repfield = this_._internal_usersinfo().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Broadcast_User_Info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Broadcast_User_Info::ByteSizeLong(const MessageLite& base) {
          const SC_Broadcast_User_Info& this_ = static_cast<const SC_Broadcast_User_Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Broadcast_User_Info::ByteSizeLong() const {
          const SC_Broadcast_User_Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Broadcast_User_Info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .msgTest.UserInfo usersInfo = 1;
            {
              total_size += 1UL * this_._internal_usersinfo_size();
              for (const auto& msg : this_._internal_usersinfo()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Broadcast_User_Info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Broadcast_User_Info*>(&to_msg);
  auto& from = static_cast<const SC_Broadcast_User_Info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Broadcast_User_Info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_usersinfo()->MergeFrom(
      from._internal_usersinfo());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Broadcast_User_Info::CopyFrom(const SC_Broadcast_User_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Broadcast_User_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SC_Broadcast_User_Info::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const SC_Broadcast_User_Info&>(msg);
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_usersinfo()))
    return false;
  return true;
}

void SC_Broadcast_User_Info::InternalSwap(SC_Broadcast_User_Info* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.usersinfo_.InternalSwap(&other->_impl_.usersinfo_);
}

::google::protobuf::Metadata SC_Broadcast_User_Info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Add_User::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC_Add_User>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC_Add_User, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SC_Add_User::SC_Add_User(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SC_Add_User_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Add_User)
}
PROTOBUF_NDEBUG_INLINE SC_Add_User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Add_User& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC_Add_User::SC_Add_User(
    ::google::protobuf::Arena* arena,
    const SC_Add_User& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SC_Add_User_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Add_User* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.usersinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::UserInfo>(
                              arena, *from._impl_.usersinfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Add_User)
}
PROTOBUF_NDEBUG_INLINE SC_Add_User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC_Add_User::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.usersinfo_ = {};
}
SC_Add_User::~SC_Add_User() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Add_User)
  SharedDtor(*this);
}
inline void SC_Add_User::SharedDtor(MessageLite& self) {
  SC_Add_User& this_ = static_cast<SC_Add_User&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.usersinfo_;
  this_._impl_.~Impl_();
}

inline void* SC_Add_User::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Add_User(arena);
}
constexpr auto SC_Add_User::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SC_Add_User),
                                            alignof(SC_Add_User));
}
constexpr auto SC_Add_User::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SC_Add_User_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          SC_Add_User::IsInitializedImpl,
          &SC_Add_User::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SC_Add_User>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SC_Add_User::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SC_Add_User>(), &SC_Add_User::ByteSizeLong,
              &SC_Add_User::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SC_Add_User, _impl_._cached_size_),
          false,
      },
      &SC_Add_User::kDescriptorMethods,
      &descriptor_table_messageTest_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        SC_Add_User_class_data_ =
            SC_Add_User::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* SC_Add_User::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SC_Add_User_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SC_Add_User_class_data_.tc_table);
  return SC_Add_User_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SC_Add_User::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC_Add_User, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SC_Add_User_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Add_User>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required .msgTest.UserInfo usersInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SC_Add_User, _impl_.usersinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .msgTest.UserInfo usersInfo = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Add_User, _impl_.usersinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::UserInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC_Add_User::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Add_User)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.usersinfo_ != nullptr);
    _impl_.usersinfo_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Add_User::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Add_User& this_ = static_cast<const SC_Add_User&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Add_User::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Add_User& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Add_User)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .msgTest.UserInfo usersInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.usersinfo_, this_._impl_.usersinfo_->GetCachedSize(), target,
                stream);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Add_User)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Add_User::ByteSizeLong(const MessageLite& base) {
          const SC_Add_User& this_ = static_cast<const SC_Add_User&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Add_User::ByteSizeLong() const {
          const SC_Add_User& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Add_User)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // required .msgTest.UserInfo usersInfo = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.usersinfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Add_User::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Add_User*>(&to_msg);
  auto& from = static_cast<const SC_Add_User&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Add_User)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.usersinfo_ != nullptr);
    if (_this->_impl_.usersinfo_ == nullptr) {
      _this->_impl_.usersinfo_ =
          ::google::protobuf::Message::CopyConstruct<::msgTest::UserInfo>(arena, *from._impl_.usersinfo_);
    } else {
      _this->_impl_.usersinfo_->MergeFrom(*from._impl_.usersinfo_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Add_User::CopyFrom(const SC_Add_User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Add_User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SC_Add_User::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const SC_Add_User&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.usersinfo_->IsInitialized()) return false;
  }
  return true;
}

void SC_Add_User::InternalSwap(SC_Add_User* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.usersinfo_, other->_impl_.usersinfo_);
}

::google::protobuf::Metadata SC_Add_User::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace msgTest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_messageTest_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
