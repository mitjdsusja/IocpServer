// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: messageTest.proto
// Protobuf C++ Version: 5.29.2

#ifndef messageTest_2eproto_2epb_2eh
#define messageTest_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_messageTest_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_messageTest_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_messageTest_2eproto;
namespace msgTest {
class CS_Enter_Room;
struct CS_Enter_RoomDefaultTypeInternal;
extern CS_Enter_RoomDefaultTypeInternal _CS_Enter_Room_default_instance_;
class CS_Login;
struct CS_LoginDefaultTypeInternal;
extern CS_LoginDefaultTypeInternal _CS_Login_default_instance_;
class CS_Request_Room_List;
struct CS_Request_Room_ListDefaultTypeInternal;
extern CS_Request_Room_ListDefaultTypeInternal _CS_Request_Room_List_default_instance_;
class CS_Request_User_Info;
struct CS_Request_User_InfoDefaultTypeInternal;
extern CS_Request_User_InfoDefaultTypeInternal _CS_Request_User_Info_default_instance_;
class CS_Request_User_List;
struct CS_Request_User_ListDefaultTypeInternal;
extern CS_Request_User_ListDefaultTypeInternal _CS_Request_User_List_default_instance_;
class MoveState;
struct MoveStateDefaultTypeInternal;
extern MoveStateDefaultTypeInternal _MoveState_default_instance_;
class Player;
struct PlayerDefaultTypeInternal;
extern PlayerDefaultTypeInternal _Player_default_instance_;
class Position;
struct PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class Room;
struct RoomDefaultTypeInternal;
extern RoomDefaultTypeInternal _Room_default_instance_;
class SC_Enter_Room_Fail;
struct SC_Enter_Room_FailDefaultTypeInternal;
extern SC_Enter_Room_FailDefaultTypeInternal _SC_Enter_Room_Fail_default_instance_;
class SC_Enter_Room_Success;
struct SC_Enter_Room_SuccessDefaultTypeInternal;
extern SC_Enter_Room_SuccessDefaultTypeInternal _SC_Enter_Room_Success_default_instance_;
class SC_Login_Fail;
struct SC_Login_FailDefaultTypeInternal;
extern SC_Login_FailDefaultTypeInternal _SC_Login_Fail_default_instance_;
class SC_Login_Success;
struct SC_Login_SuccessDefaultTypeInternal;
extern SC_Login_SuccessDefaultTypeInternal _SC_Login_Success_default_instance_;
class SC_Response_Room_List;
struct SC_Response_Room_ListDefaultTypeInternal;
extern SC_Response_Room_ListDefaultTypeInternal _SC_Response_Room_List_default_instance_;
class SC_Response_User_Info;
struct SC_Response_User_InfoDefaultTypeInternal;
extern SC_Response_User_InfoDefaultTypeInternal _SC_Response_User_Info_default_instance_;
class SC_Response_User_List;
struct SC_Response_User_ListDefaultTypeInternal;
extern SC_Response_User_ListDefaultTypeInternal _SC_Response_User_List_default_instance_;
class UserInfo;
struct UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class Veloccity;
struct VeloccityDefaultTypeInternal;
extern VeloccityDefaultTypeInternal _Veloccity_default_instance_;
}  // namespace msgTest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace msgTest {

// ===================================================================


// -------------------------------------------------------------------

class Veloccity final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.Veloccity) */ {
 public:
  inline Veloccity() : Veloccity(nullptr) {}
  ~Veloccity() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Veloccity* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Veloccity));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Veloccity(
      ::google::protobuf::internal::ConstantInitialized);

  inline Veloccity(const Veloccity& from) : Veloccity(nullptr, from) {}
  inline Veloccity(Veloccity&& from) noexcept
      : Veloccity(nullptr, std::move(from)) {}
  inline Veloccity& operator=(const Veloccity& from) {
    CopyFrom(from);
    return *this;
  }
  inline Veloccity& operator=(Veloccity&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Veloccity& default_instance() {
    return *internal_default_instance();
  }
  static inline const Veloccity* internal_default_instance() {
    return reinterpret_cast<const Veloccity*>(
        &_Veloccity_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Veloccity& a, Veloccity& b) { a.Swap(&b); }
  inline void Swap(Veloccity* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Veloccity* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Veloccity* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Veloccity>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Veloccity& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Veloccity& from) { Veloccity::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Veloccity* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.Veloccity"; }

 protected:
  explicit Veloccity(::google::protobuf::Arena* arena);
  Veloccity(::google::protobuf::Arena* arena, const Veloccity& from);
  Veloccity(::google::protobuf::Arena* arena, Veloccity&& from) noexcept
      : Veloccity(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 3;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.Veloccity)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Veloccity& from_msg);
    float x_;
    float y_;
    float z_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class SC_Login_Success final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.SC_Login_Success) */ {
 public:
  inline SC_Login_Success() : SC_Login_Success(nullptr) {}
  ~SC_Login_Success() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SC_Login_Success* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SC_Login_Success));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC_Login_Success(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC_Login_Success(const SC_Login_Success& from) : SC_Login_Success(nullptr, from) {}
  inline SC_Login_Success(SC_Login_Success&& from) noexcept
      : SC_Login_Success(nullptr, std::move(from)) {}
  inline SC_Login_Success& operator=(const SC_Login_Success& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_Login_Success& operator=(SC_Login_Success&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_Login_Success& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_Login_Success* internal_default_instance() {
    return reinterpret_cast<const SC_Login_Success*>(
        &_SC_Login_Success_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SC_Login_Success& a, SC_Login_Success& b) { a.Swap(&b); }
  inline void Swap(SC_Login_Success* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_Login_Success* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_Login_Success* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SC_Login_Success>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_Login_Success& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC_Login_Success& from) { SC_Login_Success::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SC_Login_Success* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.SC_Login_Success"; }

 protected:
  explicit SC_Login_Success(::google::protobuf::Arena* arena);
  SC_Login_Success(::google::protobuf::Arena* arena, const SC_Login_Success& from);
  SC_Login_Success(::google::protobuf::Arena* arena, SC_Login_Success&& from) noexcept
      : SC_Login_Success(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSessionIdFieldNumber = 1,
  };
  // uint64 sessionId = 1;
  void clear_sessionid() ;
  ::uint64_t sessionid() const;
  void set_sessionid(::uint64_t value);

  private:
  ::uint64_t _internal_sessionid() const;
  void _internal_set_sessionid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.SC_Login_Success)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC_Login_Success& from_msg);
    ::uint64_t sessionid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class SC_Login_Fail final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.SC_Login_Fail) */ {
 public:
  inline SC_Login_Fail() : SC_Login_Fail(nullptr) {}
  ~SC_Login_Fail() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SC_Login_Fail* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SC_Login_Fail));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC_Login_Fail(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC_Login_Fail(const SC_Login_Fail& from) : SC_Login_Fail(nullptr, from) {}
  inline SC_Login_Fail(SC_Login_Fail&& from) noexcept
      : SC_Login_Fail(nullptr, std::move(from)) {}
  inline SC_Login_Fail& operator=(const SC_Login_Fail& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_Login_Fail& operator=(SC_Login_Fail&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_Login_Fail& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_Login_Fail* internal_default_instance() {
    return reinterpret_cast<const SC_Login_Fail*>(
        &_SC_Login_Fail_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SC_Login_Fail& a, SC_Login_Fail& b) { a.Swap(&b); }
  inline void Swap(SC_Login_Fail* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_Login_Fail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_Login_Fail* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SC_Login_Fail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_Login_Fail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC_Login_Fail& from) { SC_Login_Fail::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SC_Login_Fail* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.SC_Login_Fail"; }

 protected:
  explicit SC_Login_Fail(::google::protobuf::Arena* arena);
  SC_Login_Fail(::google::protobuf::Arena* arena, const SC_Login_Fail& from);
  SC_Login_Fail(::google::protobuf::Arena* arena, SC_Login_Fail&& from) noexcept
      : SC_Login_Fail(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // int32 errorCode = 1;
  void clear_errorcode() ;
  ::int32_t errorcode() const;
  void set_errorcode(::int32_t value);

  private:
  ::int32_t _internal_errorcode() const;
  void _internal_set_errorcode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.SC_Login_Fail)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC_Login_Fail& from_msg);
    ::int32_t errorcode_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class SC_Enter_Room_Success final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:msgTest.SC_Enter_Room_Success) */ {
 public:
  inline SC_Enter_Room_Success() : SC_Enter_Room_Success(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SC_Enter_Room_Success* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SC_Enter_Room_Success));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC_Enter_Room_Success(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC_Enter_Room_Success(const SC_Enter_Room_Success& from) : SC_Enter_Room_Success(nullptr, from) {}
  inline SC_Enter_Room_Success(SC_Enter_Room_Success&& from) noexcept
      : SC_Enter_Room_Success(nullptr, std::move(from)) {}
  inline SC_Enter_Room_Success& operator=(const SC_Enter_Room_Success& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_Enter_Room_Success& operator=(SC_Enter_Room_Success&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_Enter_Room_Success& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_Enter_Room_Success* internal_default_instance() {
    return reinterpret_cast<const SC_Enter_Room_Success*>(
        &_SC_Enter_Room_Success_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SC_Enter_Room_Success& a, SC_Enter_Room_Success& b) { a.Swap(&b); }
  inline void Swap(SC_Enter_Room_Success* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_Enter_Room_Success* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_Enter_Room_Success* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC_Enter_Room_Success>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC_Enter_Room_Success& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC_Enter_Room_Success& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.SC_Enter_Room_Success"; }

 protected:
  explicit SC_Enter_Room_Success(::google::protobuf::Arena* arena);
  SC_Enter_Room_Success(::google::protobuf::Arena* arena, const SC_Enter_Room_Success& from);
  SC_Enter_Room_Success(::google::protobuf::Arena* arena, SC_Enter_Room_Success&& from) noexcept
      : SC_Enter_Room_Success(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:msgTest.SC_Enter_Room_Success)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC_Enter_Room_Success& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class SC_Enter_Room_Fail final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:msgTest.SC_Enter_Room_Fail) */ {
 public:
  inline SC_Enter_Room_Fail() : SC_Enter_Room_Fail(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SC_Enter_Room_Fail* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SC_Enter_Room_Fail));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC_Enter_Room_Fail(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC_Enter_Room_Fail(const SC_Enter_Room_Fail& from) : SC_Enter_Room_Fail(nullptr, from) {}
  inline SC_Enter_Room_Fail(SC_Enter_Room_Fail&& from) noexcept
      : SC_Enter_Room_Fail(nullptr, std::move(from)) {}
  inline SC_Enter_Room_Fail& operator=(const SC_Enter_Room_Fail& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_Enter_Room_Fail& operator=(SC_Enter_Room_Fail&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_Enter_Room_Fail& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_Enter_Room_Fail* internal_default_instance() {
    return reinterpret_cast<const SC_Enter_Room_Fail*>(
        &_SC_Enter_Room_Fail_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SC_Enter_Room_Fail& a, SC_Enter_Room_Fail& b) { a.Swap(&b); }
  inline void Swap(SC_Enter_Room_Fail* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_Enter_Room_Fail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_Enter_Room_Fail* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC_Enter_Room_Fail>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC_Enter_Room_Fail& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC_Enter_Room_Fail& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.SC_Enter_Room_Fail"; }

 protected:
  explicit SC_Enter_Room_Fail(::google::protobuf::Arena* arena);
  SC_Enter_Room_Fail(::google::protobuf::Arena* arena, const SC_Enter_Room_Fail& from);
  SC_Enter_Room_Fail(::google::protobuf::Arena* arena, SC_Enter_Room_Fail&& from) noexcept
      : SC_Enter_Room_Fail(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:msgTest.SC_Enter_Room_Fail)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC_Enter_Room_Fail& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class Room final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.Room) */ {
 public:
  inline Room() : Room(nullptr) {}
  ~Room() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Room* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Room));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Room(
      ::google::protobuf::internal::ConstantInitialized);

  inline Room(const Room& from) : Room(nullptr, from) {}
  inline Room(Room&& from) noexcept
      : Room(nullptr, std::move(from)) {}
  inline Room& operator=(const Room& from) {
    CopyFrom(from);
    return *this;
  }
  inline Room& operator=(Room&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Room& default_instance() {
    return *internal_default_instance();
  }
  static inline const Room* internal_default_instance() {
    return reinterpret_cast<const Room*>(
        &_Room_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Room& a, Room& b) { a.Swap(&b); }
  inline void Swap(Room* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Room* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Room* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Room>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Room& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Room& from) { Room::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Room* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.Room"; }

 protected:
  explicit Room(::google::protobuf::Arena* arena);
  Room(::google::protobuf::Arena* arena, const Room& from);
  Room(::google::protobuf::Arena* arena, Room&& from) noexcept
      : Room(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomNameFieldNumber = 2,
    kRoomIdFieldNumber = 1,
    kMaxPlayerCountFieldNumber = 3,
    kPlayerCountFieldNumber = 4,
  };
  // string roomName = 2;
  void clear_roomname() ;
  const std::string& roomname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_roomname(Arg_&& arg, Args_... args);
  std::string* mutable_roomname();
  PROTOBUF_NODISCARD std::string* release_roomname();
  void set_allocated_roomname(std::string* value);

  private:
  const std::string& _internal_roomname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_roomname(
      const std::string& value);
  std::string* _internal_mutable_roomname();

  public:
  // int32 roomId = 1;
  void clear_roomid() ;
  ::int32_t roomid() const;
  void set_roomid(::int32_t value);

  private:
  ::int32_t _internal_roomid() const;
  void _internal_set_roomid(::int32_t value);

  public:
  // int32 maxPlayerCount = 3;
  void clear_maxplayercount() ;
  ::int32_t maxplayercount() const;
  void set_maxplayercount(::int32_t value);

  private:
  ::int32_t _internal_maxplayercount() const;
  void _internal_set_maxplayercount(::int32_t value);

  public:
  // int32 playerCount = 4;
  void clear_playercount() ;
  ::int32_t playercount() const;
  void set_playercount(::int32_t value);

  private:
  ::int32_t _internal_playercount() const;
  void _internal_set_playercount(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.Room)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      29, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Room& from_msg);
    ::google::protobuf::internal::ArenaStringPtr roomname_;
    ::int32_t roomid_;
    ::int32_t maxplayercount_;
    ::int32_t playercount_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class Position final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.Position) */ {
 public:
  inline Position() : Position(nullptr) {}
  ~Position() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Position* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Position));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Position(
      ::google::protobuf::internal::ConstantInitialized);

  inline Position(const Position& from) : Position(nullptr, from) {}
  inline Position(Position&& from) noexcept
      : Position(nullptr, std::move(from)) {}
  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  inline Position& operator=(Position&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Position& default_instance() {
    return *internal_default_instance();
  }
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
        &_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Position& a, Position& b) { a.Swap(&b); }
  inline void Swap(Position* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Position* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Position* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Position>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Position& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Position& from) { Position::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Position* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.Position"; }

 protected:
  explicit Position(::google::protobuf::Arena* arena);
  Position(::google::protobuf::Arena* arena, const Position& from);
  Position(::google::protobuf::Arena* arena, Position&& from) noexcept
      : Position(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 3;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.Position)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Position& from_msg);
    float x_;
    float y_;
    float z_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class CS_Request_User_List final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:msgTest.CS_Request_User_List) */ {
 public:
  inline CS_Request_User_List() : CS_Request_User_List(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CS_Request_User_List* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CS_Request_User_List));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CS_Request_User_List(
      ::google::protobuf::internal::ConstantInitialized);

  inline CS_Request_User_List(const CS_Request_User_List& from) : CS_Request_User_List(nullptr, from) {}
  inline CS_Request_User_List(CS_Request_User_List&& from) noexcept
      : CS_Request_User_List(nullptr, std::move(from)) {}
  inline CS_Request_User_List& operator=(const CS_Request_User_List& from) {
    CopyFrom(from);
    return *this;
  }
  inline CS_Request_User_List& operator=(CS_Request_User_List&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CS_Request_User_List& default_instance() {
    return *internal_default_instance();
  }
  static inline const CS_Request_User_List* internal_default_instance() {
    return reinterpret_cast<const CS_Request_User_List*>(
        &_CS_Request_User_List_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(CS_Request_User_List& a, CS_Request_User_List& b) { a.Swap(&b); }
  inline void Swap(CS_Request_User_List* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CS_Request_User_List* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CS_Request_User_List* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CS_Request_User_List>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CS_Request_User_List& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CS_Request_User_List& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.CS_Request_User_List"; }

 protected:
  explicit CS_Request_User_List(::google::protobuf::Arena* arena);
  CS_Request_User_List(::google::protobuf::Arena* arena, const CS_Request_User_List& from);
  CS_Request_User_List(::google::protobuf::Arena* arena, CS_Request_User_List&& from) noexcept
      : CS_Request_User_List(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:msgTest.CS_Request_User_List)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CS_Request_User_List& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class CS_Request_User_Info final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.CS_Request_User_Info) */ {
 public:
  inline CS_Request_User_Info() : CS_Request_User_Info(nullptr) {}
  ~CS_Request_User_Info() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CS_Request_User_Info* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CS_Request_User_Info));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CS_Request_User_Info(
      ::google::protobuf::internal::ConstantInitialized);

  inline CS_Request_User_Info(const CS_Request_User_Info& from) : CS_Request_User_Info(nullptr, from) {}
  inline CS_Request_User_Info(CS_Request_User_Info&& from) noexcept
      : CS_Request_User_Info(nullptr, std::move(from)) {}
  inline CS_Request_User_Info& operator=(const CS_Request_User_Info& from) {
    CopyFrom(from);
    return *this;
  }
  inline CS_Request_User_Info& operator=(CS_Request_User_Info&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CS_Request_User_Info& default_instance() {
    return *internal_default_instance();
  }
  static inline const CS_Request_User_Info* internal_default_instance() {
    return reinterpret_cast<const CS_Request_User_Info*>(
        &_CS_Request_User_Info_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CS_Request_User_Info& a, CS_Request_User_Info& b) { a.Swap(&b); }
  inline void Swap(CS_Request_User_Info* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CS_Request_User_Info* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CS_Request_User_Info* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CS_Request_User_Info>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CS_Request_User_Info& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CS_Request_User_Info& from) { CS_Request_User_Info::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CS_Request_User_Info* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.CS_Request_User_Info"; }

 protected:
  explicit CS_Request_User_Info(::google::protobuf::Arena* arena);
  CS_Request_User_Info(::google::protobuf::Arena* arena, const CS_Request_User_Info& from);
  CS_Request_User_Info(::google::protobuf::Arena* arena, CS_Request_User_Info&& from) noexcept
      : CS_Request_User_Info(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // int32 playerId = 1;
  void clear_playerid() ;
  ::int32_t playerid() const;
  void set_playerid(::int32_t value);

  private:
  ::int32_t _internal_playerid() const;
  void _internal_set_playerid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.CS_Request_User_Info)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CS_Request_User_Info& from_msg);
    ::int32_t playerid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class CS_Request_Room_List final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:msgTest.CS_Request_Room_List) */ {
 public:
  inline CS_Request_Room_List() : CS_Request_Room_List(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CS_Request_Room_List* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CS_Request_Room_List));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CS_Request_Room_List(
      ::google::protobuf::internal::ConstantInitialized);

  inline CS_Request_Room_List(const CS_Request_Room_List& from) : CS_Request_Room_List(nullptr, from) {}
  inline CS_Request_Room_List(CS_Request_Room_List&& from) noexcept
      : CS_Request_Room_List(nullptr, std::move(from)) {}
  inline CS_Request_Room_List& operator=(const CS_Request_Room_List& from) {
    CopyFrom(from);
    return *this;
  }
  inline CS_Request_Room_List& operator=(CS_Request_Room_List&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CS_Request_Room_List& default_instance() {
    return *internal_default_instance();
  }
  static inline const CS_Request_Room_List* internal_default_instance() {
    return reinterpret_cast<const CS_Request_Room_List*>(
        &_CS_Request_Room_List_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(CS_Request_Room_List& a, CS_Request_Room_List& b) { a.Swap(&b); }
  inline void Swap(CS_Request_Room_List* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CS_Request_Room_List* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CS_Request_Room_List* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CS_Request_Room_List>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CS_Request_Room_List& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CS_Request_Room_List& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.CS_Request_Room_List"; }

 protected:
  explicit CS_Request_Room_List(::google::protobuf::Arena* arena);
  CS_Request_Room_List(::google::protobuf::Arena* arena, const CS_Request_Room_List& from);
  CS_Request_Room_List(::google::protobuf::Arena* arena, CS_Request_Room_List&& from) noexcept
      : CS_Request_Room_List(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:msgTest.CS_Request_Room_List)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CS_Request_Room_List& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class CS_Login final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.CS_Login) */ {
 public:
  inline CS_Login() : CS_Login(nullptr) {}
  ~CS_Login() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CS_Login* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CS_Login));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CS_Login(
      ::google::protobuf::internal::ConstantInitialized);

  inline CS_Login(const CS_Login& from) : CS_Login(nullptr, from) {}
  inline CS_Login(CS_Login&& from) noexcept
      : CS_Login(nullptr, std::move(from)) {}
  inline CS_Login& operator=(const CS_Login& from) {
    CopyFrom(from);
    return *this;
  }
  inline CS_Login& operator=(CS_Login&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CS_Login& default_instance() {
    return *internal_default_instance();
  }
  static inline const CS_Login* internal_default_instance() {
    return reinterpret_cast<const CS_Login*>(
        &_CS_Login_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CS_Login& a, CS_Login& b) { a.Swap(&b); }
  inline void Swap(CS_Login* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CS_Login* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CS_Login* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CS_Login>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CS_Login& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CS_Login& from) { CS_Login::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CS_Login* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.CS_Login"; }

 protected:
  explicit CS_Login(::google::protobuf::Arena* arena);
  CS_Login(::google::protobuf::Arena* arena, const CS_Login& from);
  CS_Login(::google::protobuf::Arena* arena, CS_Login&& from) noexcept
      : CS_Login(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kPasswdFieldNumber = 2,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string passwd = 2;
  void clear_passwd() ;
  const std::string& passwd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_passwd(Arg_&& arg, Args_... args);
  std::string* mutable_passwd();
  PROTOBUF_NODISCARD std::string* release_passwd();
  void set_allocated_passwd(std::string* value);

  private:
  const std::string& _internal_passwd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_passwd(
      const std::string& value);
  std::string* _internal_mutable_passwd();

  public:
  // @@protoc_insertion_point(class_scope:msgTest.CS_Login)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      33, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CS_Login& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr passwd_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class CS_Enter_Room final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.CS_Enter_Room) */ {
 public:
  inline CS_Enter_Room() : CS_Enter_Room(nullptr) {}
  ~CS_Enter_Room() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CS_Enter_Room* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CS_Enter_Room));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CS_Enter_Room(
      ::google::protobuf::internal::ConstantInitialized);

  inline CS_Enter_Room(const CS_Enter_Room& from) : CS_Enter_Room(nullptr, from) {}
  inline CS_Enter_Room(CS_Enter_Room&& from) noexcept
      : CS_Enter_Room(nullptr, std::move(from)) {}
  inline CS_Enter_Room& operator=(const CS_Enter_Room& from) {
    CopyFrom(from);
    return *this;
  }
  inline CS_Enter_Room& operator=(CS_Enter_Room&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CS_Enter_Room& default_instance() {
    return *internal_default_instance();
  }
  static inline const CS_Enter_Room* internal_default_instance() {
    return reinterpret_cast<const CS_Enter_Room*>(
        &_CS_Enter_Room_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(CS_Enter_Room& a, CS_Enter_Room& b) { a.Swap(&b); }
  inline void Swap(CS_Enter_Room* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CS_Enter_Room* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CS_Enter_Room* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CS_Enter_Room>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CS_Enter_Room& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CS_Enter_Room& from) { CS_Enter_Room::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CS_Enter_Room* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.CS_Enter_Room"; }

 protected:
  explicit CS_Enter_Room(::google::protobuf::Arena* arena);
  CS_Enter_Room(::google::protobuf::Arena* arena, const CS_Enter_Room& from);
  CS_Enter_Room(::google::protobuf::Arena* arena, CS_Enter_Room&& from) noexcept
      : CS_Enter_Room(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomIdFieldNumber = 1,
  };
  // int32 roomId = 1;
  void clear_roomid() ;
  ::int32_t roomid() const;
  void set_roomid(::int32_t value);

  private:
  ::int32_t _internal_roomid() const;
  void _internal_set_roomid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.CS_Enter_Room)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CS_Enter_Room& from_msg);
    ::int32_t roomid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class UserInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.UserInfo) */ {
 public:
  inline UserInfo() : UserInfo(nullptr) {}
  ~UserInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UserInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UserInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UserInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline UserInfo(const UserInfo& from) : UserInfo(nullptr, from) {}
  inline UserInfo(UserInfo&& from) noexcept
      : UserInfo(nullptr, std::move(from)) {}
  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserInfo& operator=(UserInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
        &_UserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(UserInfo& a, UserInfo& b) { a.Swap(&b); }
  inline void Swap(UserInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UserInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UserInfo& from) { UserInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UserInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.UserInfo"; }

 protected:
  explicit UserInfo(::google::protobuf::Arena* arena);
  UserInfo(::google::protobuf::Arena* arena, const UserInfo& from);
  UserInfo(::google::protobuf::Arena* arena, UserInfo&& from) noexcept
      : UserInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // .msgTest.Position position = 2;
  bool has_position() const;
  void clear_position() ;
  const ::msgTest::Position& position() const;
  PROTOBUF_NODISCARD ::msgTest::Position* release_position();
  ::msgTest::Position* mutable_position();
  void set_allocated_position(::msgTest::Position* value);
  void unsafe_arena_set_allocated_position(::msgTest::Position* value);
  ::msgTest::Position* unsafe_arena_release_position();

  private:
  const ::msgTest::Position& _internal_position() const;
  ::msgTest::Position* _internal_mutable_position();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.UserInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UserInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::msgTest::Position* position_;
    ::int32_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class SC_Response_Room_List final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.SC_Response_Room_List) */ {
 public:
  inline SC_Response_Room_List() : SC_Response_Room_List(nullptr) {}
  ~SC_Response_Room_List() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SC_Response_Room_List* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SC_Response_Room_List));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC_Response_Room_List(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC_Response_Room_List(const SC_Response_Room_List& from) : SC_Response_Room_List(nullptr, from) {}
  inline SC_Response_Room_List(SC_Response_Room_List&& from) noexcept
      : SC_Response_Room_List(nullptr, std::move(from)) {}
  inline SC_Response_Room_List& operator=(const SC_Response_Room_List& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_Response_Room_List& operator=(SC_Response_Room_List&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_Response_Room_List& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_Response_Room_List* internal_default_instance() {
    return reinterpret_cast<const SC_Response_Room_List*>(
        &_SC_Response_Room_List_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(SC_Response_Room_List& a, SC_Response_Room_List& b) { a.Swap(&b); }
  inline void Swap(SC_Response_Room_List* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_Response_Room_List* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_Response_Room_List* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SC_Response_Room_List>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_Response_Room_List& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC_Response_Room_List& from) { SC_Response_Room_List::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SC_Response_Room_List* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.SC_Response_Room_List"; }

 protected:
  explicit SC_Response_Room_List(::google::protobuf::Arena* arena);
  SC_Response_Room_List(::google::protobuf::Arena* arena, const SC_Response_Room_List& from);
  SC_Response_Room_List(::google::protobuf::Arena* arena, SC_Response_Room_List&& from) noexcept
      : SC_Response_Room_List(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomListFieldNumber = 2,
    kRoomCountFieldNumber = 1,
  };
  // repeated .msgTest.Room roomList = 2;
  int roomlist_size() const;
  private:
  int _internal_roomlist_size() const;

  public:
  void clear_roomlist() ;
  ::msgTest::Room* mutable_roomlist(int index);
  ::google::protobuf::RepeatedPtrField<::msgTest::Room>* mutable_roomlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::msgTest::Room>& _internal_roomlist() const;
  ::google::protobuf::RepeatedPtrField<::msgTest::Room>* _internal_mutable_roomlist();
  public:
  const ::msgTest::Room& roomlist(int index) const;
  ::msgTest::Room* add_roomlist();
  const ::google::protobuf::RepeatedPtrField<::msgTest::Room>& roomlist() const;
  // int32 roomCount = 1;
  void clear_roomcount() ;
  ::int32_t roomcount() const;
  void set_roomcount(::int32_t value);

  private:
  ::int32_t _internal_roomcount() const;
  void _internal_set_roomcount(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.SC_Response_Room_List)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC_Response_Room_List& from_msg);
    ::google::protobuf::RepeatedPtrField< ::msgTest::Room > roomlist_;
    ::int32_t roomcount_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class Player final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.Player) */ {
 public:
  inline Player() : Player(nullptr) {}
  ~Player() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Player* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Player));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Player(
      ::google::protobuf::internal::ConstantInitialized);

  inline Player(const Player& from) : Player(nullptr, from) {}
  inline Player(Player&& from) noexcept
      : Player(nullptr, std::move(from)) {}
  inline Player& operator=(const Player& from) {
    CopyFrom(from);
    return *this;
  }
  inline Player& operator=(Player&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Player& default_instance() {
    return *internal_default_instance();
  }
  static inline const Player* internal_default_instance() {
    return reinterpret_cast<const Player*>(
        &_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Player& a, Player& b) { a.Swap(&b); }
  inline void Swap(Player* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Player* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Player* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Player>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Player& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Player& from) { Player::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Player* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.Player"; }

 protected:
  explicit Player(::google::protobuf::Arena* arena);
  Player(::google::protobuf::Arena* arena, const Player& from);
  Player(::google::protobuf::Arena* arena, Player&& from) noexcept
      : Player(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 3,
    kIdFieldNumber = 1,
    kLevelFieldNumber = 2,
  };
  // .msgTest.Position position = 3;
  bool has_position() const;
  void clear_position() ;
  const ::msgTest::Position& position() const;
  PROTOBUF_NODISCARD ::msgTest::Position* release_position();
  ::msgTest::Position* mutable_position();
  void set_allocated_position(::msgTest::Position* value);
  void unsafe_arena_set_allocated_position(::msgTest::Position* value);
  ::msgTest::Position* unsafe_arena_release_position();

  private:
  const ::msgTest::Position& _internal_position() const;
  ::msgTest::Position* _internal_mutable_position();

  public:
  // int32 Id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // int32 level = 2;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.Player)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Player& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::msgTest::Position* position_;
    ::int32_t id_;
    ::int32_t level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class MoveState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.MoveState) */ {
 public:
  inline MoveState() : MoveState(nullptr) {}
  ~MoveState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MoveState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MoveState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MoveState(
      ::google::protobuf::internal::ConstantInitialized);

  inline MoveState(const MoveState& from) : MoveState(nullptr, from) {}
  inline MoveState(MoveState&& from) noexcept
      : MoveState(nullptr, std::move(from)) {}
  inline MoveState& operator=(const MoveState& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoveState& operator=(MoveState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MoveState& default_instance() {
    return *internal_default_instance();
  }
  static inline const MoveState* internal_default_instance() {
    return reinterpret_cast<const MoveState*>(
        &_MoveState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MoveState& a, MoveState& b) { a.Swap(&b); }
  inline void Swap(MoveState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MoveState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MoveState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MoveState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MoveState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MoveState& from) { MoveState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MoveState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.MoveState"; }

 protected:
  explicit MoveState(::google::protobuf::Arena* arena);
  MoveState(::google::protobuf::Arena* arena, const MoveState& from);
  MoveState(::google::protobuf::Arena* arena, MoveState&& from) noexcept
      : MoveState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 2,
    kVelocityFieldNumber = 3,
    kTimestampFieldNumber = 5,
    kUserIdFieldNumber = 1,
  };
  // .msgTest.Position position = 2;
  bool has_position() const;
  void clear_position() ;
  const ::msgTest::Position& position() const;
  PROTOBUF_NODISCARD ::msgTest::Position* release_position();
  ::msgTest::Position* mutable_position();
  void set_allocated_position(::msgTest::Position* value);
  void unsafe_arena_set_allocated_position(::msgTest::Position* value);
  ::msgTest::Position* unsafe_arena_release_position();

  private:
  const ::msgTest::Position& _internal_position() const;
  ::msgTest::Position* _internal_mutable_position();

  public:
  // .msgTest.Veloccity velocity = 3;
  bool has_velocity() const;
  void clear_velocity() ;
  const ::msgTest::Veloccity& velocity() const;
  PROTOBUF_NODISCARD ::msgTest::Veloccity* release_velocity();
  ::msgTest::Veloccity* mutable_velocity();
  void set_allocated_velocity(::msgTest::Veloccity* value);
  void unsafe_arena_set_allocated_velocity(::msgTest::Veloccity* value);
  ::msgTest::Veloccity* unsafe_arena_release_velocity();

  private:
  const ::msgTest::Veloccity& _internal_velocity() const;
  ::msgTest::Veloccity* _internal_mutable_velocity();

  public:
  // int64 timestamp = 5;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // int32 userId = 1;
  void clear_userid() ;
  ::int32_t userid() const;
  void set_userid(::int32_t value);

  private:
  ::int32_t _internal_userid() const;
  void _internal_set_userid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.MoveState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MoveState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::msgTest::Position* position_;
    ::msgTest::Veloccity* velocity_;
    ::int64_t timestamp_;
    ::int32_t userid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class SC_Response_User_List final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.SC_Response_User_List) */ {
 public:
  inline SC_Response_User_List() : SC_Response_User_List(nullptr) {}
  ~SC_Response_User_List() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SC_Response_User_List* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SC_Response_User_List));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC_Response_User_List(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC_Response_User_List(const SC_Response_User_List& from) : SC_Response_User_List(nullptr, from) {}
  inline SC_Response_User_List(SC_Response_User_List&& from) noexcept
      : SC_Response_User_List(nullptr, std::move(from)) {}
  inline SC_Response_User_List& operator=(const SC_Response_User_List& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_Response_User_List& operator=(SC_Response_User_List&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_Response_User_List& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_Response_User_List* internal_default_instance() {
    return reinterpret_cast<const SC_Response_User_List*>(
        &_SC_Response_User_List_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(SC_Response_User_List& a, SC_Response_User_List& b) { a.Swap(&b); }
  inline void Swap(SC_Response_User_List* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_Response_User_List* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_Response_User_List* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SC_Response_User_List>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_Response_User_List& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC_Response_User_List& from) { SC_Response_User_List::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SC_Response_User_List* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.SC_Response_User_List"; }

 protected:
  explicit SC_Response_User_List(::google::protobuf::Arena* arena);
  SC_Response_User_List(::google::protobuf::Arena* arena, const SC_Response_User_List& from);
  SC_Response_User_List(::google::protobuf::Arena* arena, SC_Response_User_List&& from) noexcept
      : SC_Response_User_List(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerListFieldNumber = 2,
    kPlayerCountFieldNumber = 1,
  };
  // repeated .msgTest.Player playerList = 2;
  int playerlist_size() const;
  private:
  int _internal_playerlist_size() const;

  public:
  void clear_playerlist() ;
  ::msgTest::Player* mutable_playerlist(int index);
  ::google::protobuf::RepeatedPtrField<::msgTest::Player>* mutable_playerlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::msgTest::Player>& _internal_playerlist() const;
  ::google::protobuf::RepeatedPtrField<::msgTest::Player>* _internal_mutable_playerlist();
  public:
  const ::msgTest::Player& playerlist(int index) const;
  ::msgTest::Player* add_playerlist();
  const ::google::protobuf::RepeatedPtrField<::msgTest::Player>& playerlist() const;
  // int32 playerCount = 1;
  void clear_playercount() ;
  ::int32_t playercount() const;
  void set_playercount(::int32_t value);

  private:
  ::int32_t _internal_playercount() const;
  void _internal_set_playercount(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:msgTest.SC_Response_User_List)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC_Response_User_List& from_msg);
    ::google::protobuf::RepeatedPtrField< ::msgTest::Player > playerlist_;
    ::int32_t playercount_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};
// -------------------------------------------------------------------

class SC_Response_User_Info final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:msgTest.SC_Response_User_Info) */ {
 public:
  inline SC_Response_User_Info() : SC_Response_User_Info(nullptr) {}
  ~SC_Response_User_Info() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SC_Response_User_Info* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SC_Response_User_Info));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC_Response_User_Info(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC_Response_User_Info(const SC_Response_User_Info& from) : SC_Response_User_Info(nullptr, from) {}
  inline SC_Response_User_Info(SC_Response_User_Info&& from) noexcept
      : SC_Response_User_Info(nullptr, std::move(from)) {}
  inline SC_Response_User_Info& operator=(const SC_Response_User_Info& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_Response_User_Info& operator=(SC_Response_User_Info&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_Response_User_Info& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_Response_User_Info* internal_default_instance() {
    return reinterpret_cast<const SC_Response_User_Info*>(
        &_SC_Response_User_Info_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SC_Response_User_Info& a, SC_Response_User_Info& b) { a.Swap(&b); }
  inline void Swap(SC_Response_User_Info* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_Response_User_Info* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_Response_User_Info* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SC_Response_User_Info>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_Response_User_Info& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC_Response_User_Info& from) { SC_Response_User_Info::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SC_Response_User_Info* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "msgTest.SC_Response_User_Info"; }

 protected:
  explicit SC_Response_User_Info(::google::protobuf::Arena* arena);
  SC_Response_User_Info(::google::protobuf::Arena* arena, const SC_Response_User_Info& from);
  SC_Response_User_Info(::google::protobuf::Arena* arena, SC_Response_User_Info&& from) noexcept
      : SC_Response_User_Info(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerInfoFieldNumber = 1,
  };
  // .msgTest.Player playerInfo = 1;
  bool has_playerinfo() const;
  void clear_playerinfo() ;
  const ::msgTest::Player& playerinfo() const;
  PROTOBUF_NODISCARD ::msgTest::Player* release_playerinfo();
  ::msgTest::Player* mutable_playerinfo();
  void set_allocated_playerinfo(::msgTest::Player* value);
  void unsafe_arena_set_allocated_playerinfo(::msgTest::Player* value);
  ::msgTest::Player* unsafe_arena_release_playerinfo();

  private:
  const ::msgTest::Player& _internal_playerinfo() const;
  ::msgTest::Player* _internal_mutable_playerinfo();

  public:
  // @@protoc_insertion_point(class_scope:msgTest.SC_Response_User_Info)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC_Response_User_Info& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::msgTest::Player* playerinfo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messageTest_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Position

// float x = 1;
inline void Position::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float Position::x() const {
  // @@protoc_insertion_point(field_get:msgTest.Position.x)
  return _internal_x();
}
inline void Position::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:msgTest.Position.x)
}
inline float Position::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Position::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 2;
inline void Position::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float Position::y() const {
  // @@protoc_insertion_point(field_get:msgTest.Position.y)
  return _internal_y();
}
inline void Position::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:msgTest.Position.y)
}
inline float Position::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Position::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// float z = 3;
inline void Position::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline float Position::z() const {
  // @@protoc_insertion_point(field_get:msgTest.Position.z)
  return _internal_z();
}
inline void Position::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:msgTest.Position.z)
}
inline float Position::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Position::_internal_set_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Veloccity

// float x = 1;
inline void Veloccity::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float Veloccity::x() const {
  // @@protoc_insertion_point(field_get:msgTest.Veloccity.x)
  return _internal_x();
}
inline void Veloccity::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:msgTest.Veloccity.x)
}
inline float Veloccity::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Veloccity::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 2;
inline void Veloccity::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float Veloccity::y() const {
  // @@protoc_insertion_point(field_get:msgTest.Veloccity.y)
  return _internal_y();
}
inline void Veloccity::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:msgTest.Veloccity.y)
}
inline float Veloccity::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Veloccity::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// float z = 3;
inline void Veloccity::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline float Veloccity::z() const {
  // @@protoc_insertion_point(field_get:msgTest.Veloccity.z)
  return _internal_z();
}
inline void Veloccity::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:msgTest.Veloccity.z)
}
inline float Veloccity::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Veloccity::_internal_set_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// UserInfo

// int32 id = 1;
inline void UserInfo::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t UserInfo::id() const {
  // @@protoc_insertion_point(field_get:msgTest.UserInfo.id)
  return _internal_id();
}
inline void UserInfo::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:msgTest.UserInfo.id)
}
inline ::int32_t UserInfo::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void UserInfo::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .msgTest.Position position = 2;
inline bool UserInfo::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline void UserInfo::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::msgTest::Position& UserInfo::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::msgTest::Position* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::msgTest::Position&>(::msgTest::_Position_default_instance_);
}
inline const ::msgTest::Position& UserInfo::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:msgTest.UserInfo.position)
  return _internal_position();
}
inline void UserInfo::unsafe_arena_set_allocated_position(::msgTest::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::msgTest::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:msgTest.UserInfo.position)
}
inline ::msgTest::Position* UserInfo::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::msgTest::Position* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::msgTest::Position* UserInfo::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:msgTest.UserInfo.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::msgTest::Position* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::msgTest::Position* UserInfo::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::msgTest::Position>(GetArena());
    _impl_.position_ = reinterpret_cast<::msgTest::Position*>(p);
  }
  return _impl_.position_;
}
inline ::msgTest::Position* UserInfo::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::msgTest::Position* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:msgTest.UserInfo.position)
  return _msg;
}
inline void UserInfo::set_allocated_position(::msgTest::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::msgTest::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:msgTest.UserInfo.position)
}

// -------------------------------------------------------------------

// MoveState

// int32 userId = 1;
inline void MoveState::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = 0;
}
inline ::int32_t MoveState::userid() const {
  // @@protoc_insertion_point(field_get:msgTest.MoveState.userId)
  return _internal_userid();
}
inline void MoveState::set_userid(::int32_t value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:msgTest.MoveState.userId)
}
inline ::int32_t MoveState::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void MoveState::_internal_set_userid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// .msgTest.Position position = 2;
inline bool MoveState::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline void MoveState::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::msgTest::Position& MoveState::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::msgTest::Position* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::msgTest::Position&>(::msgTest::_Position_default_instance_);
}
inline const ::msgTest::Position& MoveState::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:msgTest.MoveState.position)
  return _internal_position();
}
inline void MoveState::unsafe_arena_set_allocated_position(::msgTest::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::msgTest::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:msgTest.MoveState.position)
}
inline ::msgTest::Position* MoveState::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::msgTest::Position* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::msgTest::Position* MoveState::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:msgTest.MoveState.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::msgTest::Position* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::msgTest::Position* MoveState::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::msgTest::Position>(GetArena());
    _impl_.position_ = reinterpret_cast<::msgTest::Position*>(p);
  }
  return _impl_.position_;
}
inline ::msgTest::Position* MoveState::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::msgTest::Position* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:msgTest.MoveState.position)
  return _msg;
}
inline void MoveState::set_allocated_position(::msgTest::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::msgTest::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:msgTest.MoveState.position)
}

// .msgTest.Veloccity velocity = 3;
inline bool MoveState::has_velocity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.velocity_ != nullptr);
  return value;
}
inline void MoveState::clear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.velocity_ != nullptr) _impl_.velocity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::msgTest::Veloccity& MoveState::_internal_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::msgTest::Veloccity* p = _impl_.velocity_;
  return p != nullptr ? *p : reinterpret_cast<const ::msgTest::Veloccity&>(::msgTest::_Veloccity_default_instance_);
}
inline const ::msgTest::Veloccity& MoveState::velocity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:msgTest.MoveState.velocity)
  return _internal_velocity();
}
inline void MoveState::unsafe_arena_set_allocated_velocity(::msgTest::Veloccity* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.velocity_);
  }
  _impl_.velocity_ = reinterpret_cast<::msgTest::Veloccity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:msgTest.MoveState.velocity)
}
inline ::msgTest::Veloccity* MoveState::release_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::msgTest::Veloccity* released = _impl_.velocity_;
  _impl_.velocity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::msgTest::Veloccity* MoveState::unsafe_arena_release_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:msgTest.MoveState.velocity)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::msgTest::Veloccity* temp = _impl_.velocity_;
  _impl_.velocity_ = nullptr;
  return temp;
}
inline ::msgTest::Veloccity* MoveState::_internal_mutable_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.velocity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::msgTest::Veloccity>(GetArena());
    _impl_.velocity_ = reinterpret_cast<::msgTest::Veloccity*>(p);
  }
  return _impl_.velocity_;
}
inline ::msgTest::Veloccity* MoveState::mutable_velocity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::msgTest::Veloccity* _msg = _internal_mutable_velocity();
  // @@protoc_insertion_point(field_mutable:msgTest.MoveState.velocity)
  return _msg;
}
inline void MoveState::set_allocated_velocity(::msgTest::Veloccity* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.velocity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.velocity_ = reinterpret_cast<::msgTest::Veloccity*>(value);
  // @@protoc_insertion_point(field_set_allocated:msgTest.MoveState.velocity)
}

// int64 timestamp = 5;
inline void MoveState::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
}
inline ::int64_t MoveState::timestamp() const {
  // @@protoc_insertion_point(field_get:msgTest.MoveState.timestamp)
  return _internal_timestamp();
}
inline void MoveState::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:msgTest.MoveState.timestamp)
}
inline ::int64_t MoveState::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void MoveState::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// Player

// int32 Id = 1;
inline void Player::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t Player::id() const {
  // @@protoc_insertion_point(field_get:msgTest.Player.Id)
  return _internal_id();
}
inline void Player::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:msgTest.Player.Id)
}
inline ::int32_t Player::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Player::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int32 level = 2;
inline void Player::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
}
inline ::int32_t Player::level() const {
  // @@protoc_insertion_point(field_get:msgTest.Player.level)
  return _internal_level();
}
inline void Player::set_level(::int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:msgTest.Player.level)
}
inline ::int32_t Player::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void Player::_internal_set_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// .msgTest.Position position = 3;
inline bool Player::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline void Player::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::msgTest::Position& Player::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::msgTest::Position* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::msgTest::Position&>(::msgTest::_Position_default_instance_);
}
inline const ::msgTest::Position& Player::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:msgTest.Player.position)
  return _internal_position();
}
inline void Player::unsafe_arena_set_allocated_position(::msgTest::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::msgTest::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:msgTest.Player.position)
}
inline ::msgTest::Position* Player::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::msgTest::Position* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::msgTest::Position* Player::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:msgTest.Player.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::msgTest::Position* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::msgTest::Position* Player::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::msgTest::Position>(GetArena());
    _impl_.position_ = reinterpret_cast<::msgTest::Position*>(p);
  }
  return _impl_.position_;
}
inline ::msgTest::Position* Player::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::msgTest::Position* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:msgTest.Player.position)
  return _msg;
}
inline void Player::set_allocated_position(::msgTest::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::msgTest::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:msgTest.Player.position)
}

// -------------------------------------------------------------------

// Room

// int32 roomId = 1;
inline void Room::clear_roomid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomid_ = 0;
}
inline ::int32_t Room::roomid() const {
  // @@protoc_insertion_point(field_get:msgTest.Room.roomId)
  return _internal_roomid();
}
inline void Room::set_roomid(::int32_t value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:msgTest.Room.roomId)
}
inline ::int32_t Room::_internal_roomid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roomid_;
}
inline void Room::_internal_set_roomid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomid_ = value;
}

// string roomName = 2;
inline void Room::clear_roomname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomname_.ClearToEmpty();
}
inline const std::string& Room::roomname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:msgTest.Room.roomName)
  return _internal_roomname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Room::set_roomname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:msgTest.Room.roomName)
}
inline std::string* Room::mutable_roomname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_roomname();
  // @@protoc_insertion_point(field_mutable:msgTest.Room.roomName)
  return _s;
}
inline const std::string& Room::_internal_roomname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roomname_.Get();
}
inline void Room::_internal_set_roomname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomname_.Set(value, GetArena());
}
inline std::string* Room::_internal_mutable_roomname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.roomname_.Mutable( GetArena());
}
inline std::string* Room::release_roomname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:msgTest.Room.roomName)
  return _impl_.roomname_.Release();
}
inline void Room::set_allocated_roomname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.roomname_.IsDefault()) {
    _impl_.roomname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:msgTest.Room.roomName)
}

// int32 maxPlayerCount = 3;
inline void Room::clear_maxplayercount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxplayercount_ = 0;
}
inline ::int32_t Room::maxplayercount() const {
  // @@protoc_insertion_point(field_get:msgTest.Room.maxPlayerCount)
  return _internal_maxplayercount();
}
inline void Room::set_maxplayercount(::int32_t value) {
  _internal_set_maxplayercount(value);
  // @@protoc_insertion_point(field_set:msgTest.Room.maxPlayerCount)
}
inline ::int32_t Room::_internal_maxplayercount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxplayercount_;
}
inline void Room::_internal_set_maxplayercount(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxplayercount_ = value;
}

// int32 playerCount = 4;
inline void Room::clear_playercount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playercount_ = 0;
}
inline ::int32_t Room::playercount() const {
  // @@protoc_insertion_point(field_get:msgTest.Room.playerCount)
  return _internal_playercount();
}
inline void Room::set_playercount(::int32_t value) {
  _internal_set_playercount(value);
  // @@protoc_insertion_point(field_set:msgTest.Room.playerCount)
}
inline ::int32_t Room::_internal_playercount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playercount_;
}
inline void Room::_internal_set_playercount(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playercount_ = value;
}

// -------------------------------------------------------------------

// CS_Login

// string id = 1;
inline void CS_Login::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& CS_Login::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:msgTest.CS_Login.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CS_Login::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:msgTest.CS_Login.id)
}
inline std::string* CS_Login::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:msgTest.CS_Login.id)
  return _s;
}
inline const std::string& CS_Login::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void CS_Login::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* CS_Login::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* CS_Login::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:msgTest.CS_Login.id)
  return _impl_.id_.Release();
}
inline void CS_Login::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:msgTest.CS_Login.id)
}

// string passwd = 2;
inline void CS_Login::clear_passwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.passwd_.ClearToEmpty();
}
inline const std::string& CS_Login::passwd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:msgTest.CS_Login.passwd)
  return _internal_passwd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CS_Login::set_passwd(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.passwd_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:msgTest.CS_Login.passwd)
}
inline std::string* CS_Login::mutable_passwd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_passwd();
  // @@protoc_insertion_point(field_mutable:msgTest.CS_Login.passwd)
  return _s;
}
inline const std::string& CS_Login::_internal_passwd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.passwd_.Get();
}
inline void CS_Login::_internal_set_passwd(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.passwd_.Set(value, GetArena());
}
inline std::string* CS_Login::_internal_mutable_passwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.passwd_.Mutable( GetArena());
}
inline std::string* CS_Login::release_passwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:msgTest.CS_Login.passwd)
  return _impl_.passwd_.Release();
}
inline void CS_Login::set_allocated_passwd(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.passwd_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.passwd_.IsDefault()) {
    _impl_.passwd_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:msgTest.CS_Login.passwd)
}

// -------------------------------------------------------------------

// SC_Login_Success

// uint64 sessionId = 1;
inline void SC_Login_Success::clear_sessionid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sessionid_ = ::uint64_t{0u};
}
inline ::uint64_t SC_Login_Success::sessionid() const {
  // @@protoc_insertion_point(field_get:msgTest.SC_Login_Success.sessionId)
  return _internal_sessionid();
}
inline void SC_Login_Success::set_sessionid(::uint64_t value) {
  _internal_set_sessionid(value);
  // @@protoc_insertion_point(field_set:msgTest.SC_Login_Success.sessionId)
}
inline ::uint64_t SC_Login_Success::_internal_sessionid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sessionid_;
}
inline void SC_Login_Success::_internal_set_sessionid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sessionid_ = value;
}

// -------------------------------------------------------------------

// SC_Login_Fail

// int32 errorCode = 1;
inline void SC_Login_Fail::clear_errorcode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errorcode_ = 0;
}
inline ::int32_t SC_Login_Fail::errorcode() const {
  // @@protoc_insertion_point(field_get:msgTest.SC_Login_Fail.errorCode)
  return _internal_errorcode();
}
inline void SC_Login_Fail::set_errorcode(::int32_t value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:msgTest.SC_Login_Fail.errorCode)
}
inline ::int32_t SC_Login_Fail::_internal_errorcode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errorcode_;
}
inline void SC_Login_Fail::_internal_set_errorcode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errorcode_ = value;
}

// -------------------------------------------------------------------

// CS_Request_User_Info

// int32 playerId = 1;
inline void CS_Request_User_Info::clear_playerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playerid_ = 0;
}
inline ::int32_t CS_Request_User_Info::playerid() const {
  // @@protoc_insertion_point(field_get:msgTest.CS_Request_User_Info.playerId)
  return _internal_playerid();
}
inline void CS_Request_User_Info::set_playerid(::int32_t value) {
  _internal_set_playerid(value);
  // @@protoc_insertion_point(field_set:msgTest.CS_Request_User_Info.playerId)
}
inline ::int32_t CS_Request_User_Info::_internal_playerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playerid_;
}
inline void CS_Request_User_Info::_internal_set_playerid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playerid_ = value;
}

// -------------------------------------------------------------------

// SC_Response_User_Info

// .msgTest.Player playerInfo = 1;
inline bool SC_Response_User_Info::has_playerinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.playerinfo_ != nullptr);
  return value;
}
inline void SC_Response_User_Info::clear_playerinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.playerinfo_ != nullptr) _impl_.playerinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::msgTest::Player& SC_Response_User_Info::_internal_playerinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::msgTest::Player* p = _impl_.playerinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::msgTest::Player&>(::msgTest::_Player_default_instance_);
}
inline const ::msgTest::Player& SC_Response_User_Info::playerinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:msgTest.SC_Response_User_Info.playerInfo)
  return _internal_playerinfo();
}
inline void SC_Response_User_Info::unsafe_arena_set_allocated_playerinfo(::msgTest::Player* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.playerinfo_);
  }
  _impl_.playerinfo_ = reinterpret_cast<::msgTest::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:msgTest.SC_Response_User_Info.playerInfo)
}
inline ::msgTest::Player* SC_Response_User_Info::release_playerinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::msgTest::Player* released = _impl_.playerinfo_;
  _impl_.playerinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::msgTest::Player* SC_Response_User_Info::unsafe_arena_release_playerinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:msgTest.SC_Response_User_Info.playerInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::msgTest::Player* temp = _impl_.playerinfo_;
  _impl_.playerinfo_ = nullptr;
  return temp;
}
inline ::msgTest::Player* SC_Response_User_Info::_internal_mutable_playerinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.playerinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::msgTest::Player>(GetArena());
    _impl_.playerinfo_ = reinterpret_cast<::msgTest::Player*>(p);
  }
  return _impl_.playerinfo_;
}
inline ::msgTest::Player* SC_Response_User_Info::mutable_playerinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::msgTest::Player* _msg = _internal_mutable_playerinfo();
  // @@protoc_insertion_point(field_mutable:msgTest.SC_Response_User_Info.playerInfo)
  return _msg;
}
inline void SC_Response_User_Info::set_allocated_playerinfo(::msgTest::Player* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.playerinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.playerinfo_ = reinterpret_cast<::msgTest::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:msgTest.SC_Response_User_Info.playerInfo)
}

// -------------------------------------------------------------------

// CS_Request_Room_List

// -------------------------------------------------------------------

// SC_Response_Room_List

// int32 roomCount = 1;
inline void SC_Response_Room_List::clear_roomcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomcount_ = 0;
}
inline ::int32_t SC_Response_Room_List::roomcount() const {
  // @@protoc_insertion_point(field_get:msgTest.SC_Response_Room_List.roomCount)
  return _internal_roomcount();
}
inline void SC_Response_Room_List::set_roomcount(::int32_t value) {
  _internal_set_roomcount(value);
  // @@protoc_insertion_point(field_set:msgTest.SC_Response_Room_List.roomCount)
}
inline ::int32_t SC_Response_Room_List::_internal_roomcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roomcount_;
}
inline void SC_Response_Room_List::_internal_set_roomcount(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomcount_ = value;
}

// repeated .msgTest.Room roomList = 2;
inline int SC_Response_Room_List::_internal_roomlist_size() const {
  return _internal_roomlist().size();
}
inline int SC_Response_Room_List::roomlist_size() const {
  return _internal_roomlist_size();
}
inline void SC_Response_Room_List::clear_roomlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomlist_.Clear();
}
inline ::msgTest::Room* SC_Response_Room_List::mutable_roomlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:msgTest.SC_Response_Room_List.roomList)
  return _internal_mutable_roomlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::msgTest::Room>* SC_Response_Room_List::mutable_roomlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:msgTest.SC_Response_Room_List.roomList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_roomlist();
}
inline const ::msgTest::Room& SC_Response_Room_List::roomlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:msgTest.SC_Response_Room_List.roomList)
  return _internal_roomlist().Get(index);
}
inline ::msgTest::Room* SC_Response_Room_List::add_roomlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::msgTest::Room* _add = _internal_mutable_roomlist()->Add();
  // @@protoc_insertion_point(field_add:msgTest.SC_Response_Room_List.roomList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::msgTest::Room>& SC_Response_Room_List::roomlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:msgTest.SC_Response_Room_List.roomList)
  return _internal_roomlist();
}
inline const ::google::protobuf::RepeatedPtrField<::msgTest::Room>&
SC_Response_Room_List::_internal_roomlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roomlist_;
}
inline ::google::protobuf::RepeatedPtrField<::msgTest::Room>*
SC_Response_Room_List::_internal_mutable_roomlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.roomlist_;
}

// -------------------------------------------------------------------

// CS_Enter_Room

// int32 roomId = 1;
inline void CS_Enter_Room::clear_roomid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomid_ = 0;
}
inline ::int32_t CS_Enter_Room::roomid() const {
  // @@protoc_insertion_point(field_get:msgTest.CS_Enter_Room.roomId)
  return _internal_roomid();
}
inline void CS_Enter_Room::set_roomid(::int32_t value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:msgTest.CS_Enter_Room.roomId)
}
inline ::int32_t CS_Enter_Room::_internal_roomid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roomid_;
}
inline void CS_Enter_Room::_internal_set_roomid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomid_ = value;
}

// -------------------------------------------------------------------

// SC_Enter_Room_Success

// -------------------------------------------------------------------

// SC_Enter_Room_Fail

// -------------------------------------------------------------------

// CS_Request_User_List

// -------------------------------------------------------------------

// SC_Response_User_List

// int32 playerCount = 1;
inline void SC_Response_User_List::clear_playercount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playercount_ = 0;
}
inline ::int32_t SC_Response_User_List::playercount() const {
  // @@protoc_insertion_point(field_get:msgTest.SC_Response_User_List.playerCount)
  return _internal_playercount();
}
inline void SC_Response_User_List::set_playercount(::int32_t value) {
  _internal_set_playercount(value);
  // @@protoc_insertion_point(field_set:msgTest.SC_Response_User_List.playerCount)
}
inline ::int32_t SC_Response_User_List::_internal_playercount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playercount_;
}
inline void SC_Response_User_List::_internal_set_playercount(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playercount_ = value;
}

// repeated .msgTest.Player playerList = 2;
inline int SC_Response_User_List::_internal_playerlist_size() const {
  return _internal_playerlist().size();
}
inline int SC_Response_User_List::playerlist_size() const {
  return _internal_playerlist_size();
}
inline void SC_Response_User_List::clear_playerlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playerlist_.Clear();
}
inline ::msgTest::Player* SC_Response_User_List::mutable_playerlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:msgTest.SC_Response_User_List.playerList)
  return _internal_mutable_playerlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::msgTest::Player>* SC_Response_User_List::mutable_playerlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:msgTest.SC_Response_User_List.playerList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_playerlist();
}
inline const ::msgTest::Player& SC_Response_User_List::playerlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:msgTest.SC_Response_User_List.playerList)
  return _internal_playerlist().Get(index);
}
inline ::msgTest::Player* SC_Response_User_List::add_playerlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::msgTest::Player* _add = _internal_mutable_playerlist()->Add();
  // @@protoc_insertion_point(field_add:msgTest.SC_Response_User_List.playerList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::msgTest::Player>& SC_Response_User_List::playerlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:msgTest.SC_Response_User_List.playerList)
  return _internal_playerlist();
}
inline const ::google::protobuf::RepeatedPtrField<::msgTest::Player>&
SC_Response_User_List::_internal_playerlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playerlist_;
}
inline ::google::protobuf::RepeatedPtrField<::msgTest::Player>*
SC_Response_User_List::_internal_mutable_playerlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.playerlist_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace msgTest


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // messageTest_2eproto_2epb_2eh
