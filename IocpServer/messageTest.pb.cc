// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: messageTest.proto
// Protobuf C++ Version: 5.29.2

#include "messageTest.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace msgTest {

inline constexpr Vector::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector::Vector(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VectorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorDefaultTypeInternal() {}
  union {
    Vector _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorDefaultTypeInternal _Vector_default_instance_;

inline constexpr SC_Pong::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamp_{::int64_t{0}},
        servertimestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Pong::SC_Pong(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_PongDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_PongDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_PongDefaultTypeInternal() {}
  union {
    SC_Pong _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_PongDefaultTypeInternal _SC_Pong_default_instance_;

inline constexpr SC_Player_List_In_Grid::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : playernamelist_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Player_List_In_Grid::SC_Player_List_In_Grid(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Player_List_In_GridDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Player_List_In_GridDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Player_List_In_GridDefaultTypeInternal() {}
  union {
    SC_Player_List_In_Grid _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Player_List_In_GridDefaultTypeInternal _SC_Player_List_In_Grid_default_instance_;

inline constexpr SC_Login_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : errormessage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sessionid_{::uint64_t{0u}},
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Login_Response::SC_Login_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Login_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Login_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Login_ResponseDefaultTypeInternal() {}
  union {
    SC_Login_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Login_ResponseDefaultTypeInternal _SC_Login_Response_default_instance_;

inline constexpr Room::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roomname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hostname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        roomid_{0},
        maxplayercount_{0},
        playercount_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Room::Room(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomDefaultTypeInternal() {}
  union {
    Room _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomDefaultTypeInternal _Room_default_instance_;

inline constexpr PacketFrame::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        messageid_{0},
        totalframecount_{0},
        frameindex_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PacketFrame::PacketFrame(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketFrameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketFrameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketFrameDefaultTypeInternal() {}
  union {
    PacketFrame _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketFrameDefaultTypeInternal _PacketFrame_default_instance_;

inline constexpr CS_Room_Player_List_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roomid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CS_Room_Player_List_Request::CS_Room_Player_List_Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CS_Room_Player_List_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CS_Room_Player_List_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CS_Room_Player_List_RequestDefaultTypeInternal() {}
  union {
    CS_Room_Player_List_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CS_Room_Player_List_RequestDefaultTypeInternal _CS_Room_Player_List_Request_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CS_Room_List_Request::CS_Room_List_Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CS_Room_List_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CS_Room_List_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CS_Room_List_RequestDefaultTypeInternal() {}
  union {
    CS_Room_List_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CS_Room_List_RequestDefaultTypeInternal _CS_Room_List_Request_default_instance_;

inline constexpr CS_Ping::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CS_Ping::CS_Ping(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CS_PingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CS_PingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CS_PingDefaultTypeInternal() {}
  union {
    CS_Ping _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CS_PingDefaultTypeInternal _CS_Ping_default_instance_;

inline constexpr CS_My_Player_Info_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sessionid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CS_My_Player_Info_Request::CS_My_Player_Info_Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CS_My_Player_Info_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CS_My_Player_Info_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CS_My_Player_Info_RequestDefaultTypeInternal() {}
  union {
    CS_My_Player_Info_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CS_My_Player_Info_RequestDefaultTypeInternal _CS_My_Player_Info_Request_default_instance_;

inline constexpr CS_Login_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CS_Login_Request::CS_Login_Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CS_Login_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CS_Login_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CS_Login_RequestDefaultTypeInternal() {}
  union {
    CS_Login_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CS_Login_RequestDefaultTypeInternal _CS_Login_Request_default_instance_;

inline constexpr CS_Enter_Room_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roomid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CS_Enter_Room_Request::CS_Enter_Room_Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CS_Enter_Room_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CS_Enter_Room_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CS_Enter_Room_RequestDefaultTypeInternal() {}
  union {
    CS_Enter_Room_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CS_Enter_Room_RequestDefaultTypeInternal _CS_Enter_Room_Request_default_instance_;

inline constexpr CS_Create_Room_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roomname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hostname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CS_Create_Room_Request::CS_Create_Room_Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CS_Create_Room_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CS_Create_Room_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CS_Create_Room_RequestDefaultTypeInternal() {}
  union {
    CS_Create_Room_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CS_Create_Room_RequestDefaultTypeInternal _CS_Create_Room_Request_default_instance_;

inline constexpr SC_Skill_Result::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        direction_{nullptr},
        targetpos_{nullptr},
        success_{false},
        skillfailtype_{static_cast< ::msgTest::SkillFailType >(0)},
        skillid_{0},
        targetid_{0},
        timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Skill_Result::SC_Skill_Result(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Skill_ResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Skill_ResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Skill_ResultDefaultTypeInternal() {}
  union {
    SC_Skill_Result _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Skill_ResultDefaultTypeInternal _SC_Skill_Result_default_instance_;

inline constexpr SC_Skill_Cast::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        startpos_{nullptr},
        direction_{nullptr},
        targetpos_{nullptr},
        casterid_{0},
        skillid_{0},
        skilltype_{static_cast< ::msgTest::SkillType >(0)},
        targetid_{0},
        timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Skill_Cast::SC_Skill_Cast(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Skill_CastDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Skill_CastDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Skill_CastDefaultTypeInternal() {}
  union {
    SC_Skill_Cast _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Skill_CastDefaultTypeInternal _SC_Skill_Cast_default_instance_;

inline constexpr SC_Room_List_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roomlist_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Room_List_Response::SC_Room_List_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Room_List_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Room_List_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Room_List_ResponseDefaultTypeInternal() {}
  union {
    SC_Room_List_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Room_List_ResponseDefaultTypeInternal _SC_Room_List_Response_default_instance_;

inline constexpr SC_Create_Room_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        errormessage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Create_Room_Response::SC_Create_Room_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Create_Room_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Create_Room_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Create_Room_ResponseDefaultTypeInternal() {}
  union {
    SC_Create_Room_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Create_Room_ResponseDefaultTypeInternal _SC_Create_Room_Response_default_instance_;

inline constexpr Player::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        level_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Player::Player(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerDefaultTypeInternal() {}
  union {
    Player _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerDefaultTypeInternal _Player_default_instance_;

inline constexpr MoveState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        playername_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        velocity_{nullptr},
        rotation_{nullptr},
        timestamp_{::int64_t{0}},
        roomid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MoveState::MoveState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MoveStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveStateDefaultTypeInternal() {}
  union {
    MoveState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveStateDefaultTypeInternal _MoveState_default_instance_;

inline constexpr CS_Skill_Use::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        direction_{nullptr},
        targetpos_{nullptr},
        skillid_{0},
        skilltype_{static_cast< ::msgTest::SkillType >(0)},
        targetid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CS_Skill_Use::CS_Skill_Use(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CS_Skill_UseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CS_Skill_UseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CS_Skill_UseDefaultTypeInternal() {}
  union {
    CS_Skill_Use _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CS_Skill_UseDefaultTypeInternal _CS_Skill_Use_default_instance_;

inline constexpr SC_Room_Player_List_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : playerlist_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Room_Player_List_Response::SC_Room_Player_List_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Room_Player_List_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Room_Player_List_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Room_Player_List_ResponseDefaultTypeInternal() {}
  union {
    SC_Room_Player_List_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Room_Player_List_ResponseDefaultTypeInternal _SC_Room_Player_List_Response_default_instance_;

inline constexpr SC_Player_Move_Notification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : movestates_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Player_Move_Notification::SC_Player_Move_Notification(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Player_Move_NotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Player_Move_NotificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Player_Move_NotificationDefaultTypeInternal() {}
  union {
    SC_Player_Move_Notification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Player_Move_NotificationDefaultTypeInternal _SC_Player_Move_Notification_default_instance_;

inline constexpr SC_Player_Enter_Room_Notification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        player_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Player_Enter_Room_Notification::SC_Player_Enter_Room_Notification(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Player_Enter_Room_NotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Player_Enter_Room_NotificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Player_Enter_Room_NotificationDefaultTypeInternal() {}
  union {
    SC_Player_Enter_Room_Notification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Player_Enter_Room_NotificationDefaultTypeInternal _SC_Player_Enter_Room_Notification_default_instance_;

inline constexpr SC_My_Player_Info_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        playerinfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SC_My_Player_Info_Response::SC_My_Player_Info_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_My_Player_Info_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_My_Player_Info_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_My_Player_Info_ResponseDefaultTypeInternal() {}
  union {
    SC_My_Player_Info_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_My_Player_Info_ResponseDefaultTypeInternal _SC_My_Player_Info_Response_default_instance_;

inline constexpr SC_Enter_Room_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        playerlistingrid_{},
        errormessage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SC_Enter_Room_Response::SC_Enter_Room_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC_Enter_Room_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC_Enter_Room_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC_Enter_Room_ResponseDefaultTypeInternal() {}
  union {
    SC_Enter_Room_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC_Enter_Room_ResponseDefaultTypeInternal _SC_Enter_Room_Response_default_instance_;

inline constexpr CS_Player_Move_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        movestate_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CS_Player_Move_Request::CS_Player_Move_Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CS_Player_Move_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CS_Player_Move_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CS_Player_Move_RequestDefaultTypeInternal() {}
  union {
    CS_Player_Move_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CS_Player_Move_RequestDefaultTypeInternal _CS_Player_Move_Request_default_instance_;
}  // namespace msgTest
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_messageTest_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_messageTest_2eproto = nullptr;
const ::uint32_t
    TableStruct_messageTest_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::PacketFrame, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::PacketFrame, _impl_.messageid_),
        PROTOBUF_FIELD_OFFSET(::msgTest::PacketFrame, _impl_.totalframecount_),
        PROTOBUF_FIELD_OFFSET(::msgTest::PacketFrame, _impl_.frameindex_),
        PROTOBUF_FIELD_OFFSET(::msgTest::PacketFrame, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::Vector, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::Vector, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::msgTest::Vector, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::msgTest::Vector, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::msgTest::MoveState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::MoveState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::MoveState, _impl_.roomid_),
        PROTOBUF_FIELD_OFFSET(::msgTest::MoveState, _impl_.playername_),
        PROTOBUF_FIELD_OFFSET(::msgTest::MoveState, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::msgTest::MoveState, _impl_.velocity_),
        PROTOBUF_FIELD_OFFSET(::msgTest::MoveState, _impl_.rotation_),
        PROTOBUF_FIELD_OFFSET(::msgTest::MoveState, _impl_.timestamp_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::msgTest::Player, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::Player, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::Player, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::msgTest::Player, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::msgTest::Player, _impl_.position_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::Room, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::Room, _impl_.roomid_),
        PROTOBUF_FIELD_OFFSET(::msgTest::Room, _impl_.roomname_),
        PROTOBUF_FIELD_OFFSET(::msgTest::Room, _impl_.maxplayercount_),
        PROTOBUF_FIELD_OFFSET(::msgTest::Room, _impl_.playercount_),
        PROTOBUF_FIELD_OFFSET(::msgTest::Room, _impl_.hostname_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Ping, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Ping, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Pong, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Pong, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Pong, _impl_.servertimestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Login_Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Login_Request, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Login_Request, _impl_.password_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Login_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Login_Response, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Login_Response, _impl_.errormessage_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Login_Response, _impl_.sessionid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_My_Player_Info_Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_My_Player_Info_Request, _impl_.sessionid_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_My_Player_Info_Response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_My_Player_Info_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_My_Player_Info_Response, _impl_.playerinfo_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Room_Player_List_Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Room_Player_List_Request, _impl_.roomid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Room_Player_List_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Room_Player_List_Response, _impl_.playerlist_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Create_Room_Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Create_Room_Request, _impl_.roomname_),
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Create_Room_Request, _impl_.hostname_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Create_Room_Response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Create_Room_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Create_Room_Response, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Create_Room_Response, _impl_.errormessage_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Create_Room_Response, _impl_.room_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Room_List_Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Room_List_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Room_List_Response, _impl_.roomlist_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Enter_Room_Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Enter_Room_Request, _impl_.roomid_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Enter_Room_Response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Enter_Room_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Enter_Room_Response, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Enter_Room_Response, _impl_.errormessage_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Enter_Room_Response, _impl_.room_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Enter_Room_Response, _impl_.playerlistingrid_),
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Player_Enter_Room_Notification, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Player_Enter_Room_Notification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Player_Enter_Room_Notification, _impl_.player_),
        0,
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Player_Move_Request, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Player_Move_Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Player_Move_Request, _impl_.movestate_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Player_Move_Notification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Player_Move_Notification, _impl_.movestates_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Player_List_In_Grid, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Player_List_In_Grid, _impl_.playernamelist_),
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Skill_Use, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Skill_Use, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Skill_Use, _impl_.skillid_),
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Skill_Use, _impl_.skilltype_),
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Skill_Use, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Skill_Use, _impl_.targetpos_),
        PROTOBUF_FIELD_OFFSET(::msgTest::CS_Skill_Use, _impl_.targetid_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Result, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Result, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Result, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Result, _impl_.skillfailtype_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Result, _impl_.skillid_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Result, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Result, _impl_.targetpos_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Result, _impl_.targetid_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Result, _impl_.timestamp_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Cast, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Cast, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Cast, _impl_.casterid_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Cast, _impl_.skillid_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Cast, _impl_.skilltype_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Cast, _impl_.startpos_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Cast, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Cast, _impl_.targetpos_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Cast, _impl_.targetid_),
        PROTOBUF_FIELD_OFFSET(::msgTest::SC_Skill_Cast, _impl_.timestamp_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::msgTest::PacketFrame)},
        {12, -1, -1, sizeof(::msgTest::Vector)},
        {23, 37, -1, sizeof(::msgTest::MoveState)},
        {43, 54, -1, sizeof(::msgTest::Player)},
        {57, -1, -1, sizeof(::msgTest::Room)},
        {70, -1, -1, sizeof(::msgTest::CS_Ping)},
        {79, -1, -1, sizeof(::msgTest::SC_Pong)},
        {89, -1, -1, sizeof(::msgTest::CS_Login_Request)},
        {99, -1, -1, sizeof(::msgTest::SC_Login_Response)},
        {110, -1, -1, sizeof(::msgTest::CS_My_Player_Info_Request)},
        {119, 128, -1, sizeof(::msgTest::SC_My_Player_Info_Response)},
        {129, -1, -1, sizeof(::msgTest::CS_Room_Player_List_Request)},
        {138, -1, -1, sizeof(::msgTest::SC_Room_Player_List_Response)},
        {147, -1, -1, sizeof(::msgTest::CS_Create_Room_Request)},
        {157, 168, -1, sizeof(::msgTest::SC_Create_Room_Response)},
        {171, -1, -1, sizeof(::msgTest::CS_Room_List_Request)},
        {179, -1, -1, sizeof(::msgTest::SC_Room_List_Response)},
        {188, -1, -1, sizeof(::msgTest::CS_Enter_Room_Request)},
        {197, 209, -1, sizeof(::msgTest::SC_Enter_Room_Response)},
        {213, 222, -1, sizeof(::msgTest::SC_Player_Enter_Room_Notification)},
        {223, 232, -1, sizeof(::msgTest::CS_Player_Move_Request)},
        {233, -1, -1, sizeof(::msgTest::SC_Player_Move_Notification)},
        {242, -1, -1, sizeof(::msgTest::SC_Player_List_In_Grid)},
        {251, 264, -1, sizeof(::msgTest::CS_Skill_Use)},
        {269, 284, -1, sizeof(::msgTest::SC_Skill_Result)},
        {291, 307, -1, sizeof(::msgTest::SC_Skill_Cast)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::msgTest::_PacketFrame_default_instance_._instance,
    &::msgTest::_Vector_default_instance_._instance,
    &::msgTest::_MoveState_default_instance_._instance,
    &::msgTest::_Player_default_instance_._instance,
    &::msgTest::_Room_default_instance_._instance,
    &::msgTest::_CS_Ping_default_instance_._instance,
    &::msgTest::_SC_Pong_default_instance_._instance,
    &::msgTest::_CS_Login_Request_default_instance_._instance,
    &::msgTest::_SC_Login_Response_default_instance_._instance,
    &::msgTest::_CS_My_Player_Info_Request_default_instance_._instance,
    &::msgTest::_SC_My_Player_Info_Response_default_instance_._instance,
    &::msgTest::_CS_Room_Player_List_Request_default_instance_._instance,
    &::msgTest::_SC_Room_Player_List_Response_default_instance_._instance,
    &::msgTest::_CS_Create_Room_Request_default_instance_._instance,
    &::msgTest::_SC_Create_Room_Response_default_instance_._instance,
    &::msgTest::_CS_Room_List_Request_default_instance_._instance,
    &::msgTest::_SC_Room_List_Response_default_instance_._instance,
    &::msgTest::_CS_Enter_Room_Request_default_instance_._instance,
    &::msgTest::_SC_Enter_Room_Response_default_instance_._instance,
    &::msgTest::_SC_Player_Enter_Room_Notification_default_instance_._instance,
    &::msgTest::_CS_Player_Move_Request_default_instance_._instance,
    &::msgTest::_SC_Player_Move_Notification_default_instance_._instance,
    &::msgTest::_SC_Player_List_In_Grid_default_instance_._instance,
    &::msgTest::_CS_Skill_Use_default_instance_._instance,
    &::msgTest::_SC_Skill_Result_default_instance_._instance,
    &::msgTest::_SC_Skill_Cast_default_instance_._instance,
};
const char descriptor_table_protodef_messageTest_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021messageTest.proto\022\007msgTest\"^\n\013PacketFr"
    "ame\022\021\n\tmessageId\030\001 \001(\005\022\027\n\017totalFrameCoun"
    "t\030\002 \001(\005\022\022\n\nframeIndex\030\003 \001(\005\022\017\n\007payload\030\004"
    " \001(\014\")\n\006Vector\022\t\n\001x\030\001 \001(\021\022\t\n\001y\030\002 \001(\021\022\t\n\001"
    "z\030\003 \001(\021\"\253\001\n\tMoveState\022\016\n\006roomId\030\001 \001(\005\022\022\n"
    "\nplayerName\030\002 \001(\t\022!\n\010position\030\003 \001(\0132\017.ms"
    "gTest.Vector\022!\n\010velocity\030\004 \001(\0132\017.msgTest"
    ".Vector\022!\n\010rotation\030\005 \001(\0132\017.msgTest.Vect"
    "or\022\021\n\ttimestamp\030\006 \001(\003\"H\n\006Player\022\014\n\004name\030"
    "\001 \001(\t\022\r\n\005level\030\002 \001(\005\022!\n\010position\030\003 \001(\0132\017"
    ".msgTest.Vector\"g\n\004Room\022\016\n\006roomId\030\001 \001(\005\022"
    "\020\n\010roomName\030\002 \001(\t\022\026\n\016maxPlayerCount\030\003 \001("
    "\005\022\023\n\013playerCount\030\004 \001(\005\022\020\n\010hostName\030\005 \001(\t"
    "\"\034\n\007CS_Ping\022\021\n\ttimestamp\030\001 \001(\003\"5\n\007SC_Pon"
    "g\022\021\n\ttimestamp\030\001 \001(\003\022\027\n\017serverTimestamp\030"
    "\002 \001(\003\"0\n\020CS_Login_Request\022\n\n\002id\030\001 \001(\t\022\020\n"
    "\010password\030\002 \001(\t\"M\n\021SC_Login_Response\022\017\n\007"
    "success\030\001 \001(\010\022\024\n\014errorMessage\030\002 \001(\t\022\021\n\ts"
    "essionId\030\003 \001(\004\".\n\031CS_My_Player_Info_Requ"
    "est\022\021\n\tsessionId\030\001 \001(\004\"A\n\032SC_My_Player_I"
    "nfo_Response\022#\n\nplayerInfo\030\001 \001(\0132\017.msgTe"
    "st.Player\"-\n\033CS_Room_Player_List_Request"
    "\022\016\n\006roomId\030\001 \001(\005\"C\n\034SC_Room_Player_List_"
    "Response\022#\n\nplayerList\030\001 \003(\0132\017.msgTest.P"
    "layer\"<\n\026CS_Create_Room_Request\022\020\n\010roomN"
    "ame\030\001 \001(\t\022\020\n\010hostName\030\002 \001(\t\"]\n\027SC_Create"
    "_Room_Response\022\017\n\007success\030\001 \001(\010\022\024\n\014error"
    "Message\030\002 \001(\t\022\033\n\004room\030\003 \001(\0132\r.msgTest.Ro"
    "om\"\026\n\024CS_Room_List_Request\"8\n\025SC_Room_Li"
    "st_Response\022\037\n\010roomList\030\001 \003(\0132\r.msgTest."
    "Room\"\'\n\025CS_Enter_Room_Request\022\016\n\006roomId\030"
    "\001 \001(\005\"\207\001\n\026SC_Enter_Room_Response\022\017\n\007succ"
    "ess\030\001 \001(\010\022\024\n\014errorMessage\030\002 \001(\t\022\033\n\004room\030"
    "\003 \001(\0132\r.msgTest.Room\022)\n\020playerListInGrid"
    "\030\004 \003(\0132\017.msgTest.Player\"D\n!SC_Player_Ent"
    "er_Room_Notification\022\037\n\006player\030\001 \001(\0132\017.m"
    "sgTest.Player\"\?\n\026CS_Player_Move_Request\022"
    "%\n\tmoveState\030\001 \001(\0132\022.msgTest.MoveState\"E"
    "\n\033SC_Player_Move_Notification\022&\n\nmoveSta"
    "tes\030\001 \003(\0132\022.msgTest.MoveState\"0\n\026SC_Play"
    "er_List_In_Grid\022\026\n\016playerNameList\030\001 \003(\t\""
    "\240\001\n\014CS_Skill_Use\022\017\n\007skillId\030\001 \001(\005\022%\n\tski"
    "llType\030\002 \001(\0162\022.msgTest.SkillType\022\"\n\tdire"
    "ction\030\003 \001(\0132\017.msgTest.Vector\022\"\n\ttargetPo"
    "s\030\004 \001(\0132\017.msgTest.Vector\022\020\n\010targetId\030\005 \001"
    "(\005\"\317\001\n\017SC_Skill_Result\022\017\n\007success\030\001 \001(\010\022"
    "-\n\rskillFailType\030\002 \001(\0162\026.msgTest.SkillFa"
    "ilType\022\017\n\007skillId\030\003 \001(\005\022\"\n\tdirection\030\004 \001"
    "(\0132\017.msgTest.Vector\022\"\n\ttargetPos\030\005 \001(\0132\017"
    ".msgTest.Vector\022\020\n\010targetId\030\006 \001(\005\022\021\n\ttim"
    "estamp\030\007 \001(\003\"\351\001\n\rSC_Skill_Cast\022\020\n\010caster"
    "Id\030\001 \001(\005\022\017\n\007skillId\030\002 \001(\005\022%\n\tskillType\030\003"
    " \001(\0162\022.msgTest.SkillType\022!\n\010startPos\030\004 \001"
    "(\0132\017.msgTest.Vector\022\"\n\tdirection\030\005 \001(\0132\017"
    ".msgTest.Vector\022\"\n\ttargetPos\030\006 \001(\0132\017.msg"
    "Test.Vector\022\020\n\010targetId\030\007 \001(\005\022\021\n\ttimesta"
    "mp\030\010 \001(\003*i\n\tSkillType\022\026\n\022SKILL_TYPE_UNKN"
    "OWN\020\000\022\031\n\025SKILL_TYPE_PROJECTILE\020\001\022\022\n\016SKIL"
    "L_TYPE_AOE\020\002\022\025\n\021SKILL_TYPE_TARGET\020\003*,\n\rS"
    "killFailType\022\033\n\027SKILL_FAIL_TYPE_UNKNOWN\020"
    "\000b\006proto3"
};
static ::absl::once_flag descriptor_table_messageTest_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_messageTest_2eproto = {
    false,
    false,
    2409,
    descriptor_table_protodef_messageTest_2eproto,
    "messageTest.proto",
    &descriptor_table_messageTest_2eproto_once,
    nullptr,
    0,
    26,
    schemas,
    file_default_instances,
    TableStruct_messageTest_2eproto::offsets,
    file_level_enum_descriptors_messageTest_2eproto,
    file_level_service_descriptors_messageTest_2eproto,
};
namespace msgTest {
const ::google::protobuf::EnumDescriptor* SkillType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_messageTest_2eproto);
  return file_level_enum_descriptors_messageTest_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SkillType_internal_data_[] = {
    262144u, 0u, };
bool SkillType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* SkillFailType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_messageTest_2eproto);
  return file_level_enum_descriptors_messageTest_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t SkillFailType_internal_data_[] = {
    65536u, 0u, };
bool SkillFailType_IsValid(int value) {
  return 0 <= value && value <= 0;
}
// ===================================================================

class PacketFrame::_Internal {
 public:
};

PacketFrame::PacketFrame(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.PacketFrame)
}
inline PROTOBUF_NDEBUG_INLINE PacketFrame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::PacketFrame& from_msg)
      : payload_(arena, from.payload_),
        _cached_size_{0} {}

PacketFrame::PacketFrame(
    ::google::protobuf::Arena* arena,
    const PacketFrame& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PacketFrame* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, messageid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, messageid_),
           offsetof(Impl_, frameindex_) -
               offsetof(Impl_, messageid_) +
               sizeof(Impl_::frameindex_));

  // @@protoc_insertion_point(copy_constructor:msgTest.PacketFrame)
}
inline PROTOBUF_NDEBUG_INLINE PacketFrame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_(arena),
        _cached_size_{0} {}

inline void PacketFrame::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, messageid_),
           0,
           offsetof(Impl_, frameindex_) -
               offsetof(Impl_, messageid_) +
               sizeof(Impl_::frameindex_));
}
PacketFrame::~PacketFrame() {
  // @@protoc_insertion_point(destructor:msgTest.PacketFrame)
  SharedDtor(*this);
}
inline void PacketFrame::SharedDtor(MessageLite& self) {
  PacketFrame& this_ = static_cast<PacketFrame&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.payload_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PacketFrame::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PacketFrame(arena);
}
constexpr auto PacketFrame::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PacketFrame),
                                            alignof(PacketFrame));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PacketFrame::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PacketFrame_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PacketFrame::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PacketFrame>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PacketFrame::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PacketFrame>(), &PacketFrame::ByteSizeLong,
            &PacketFrame::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PacketFrame, _impl_._cached_size_),
        false,
    },
    &PacketFrame::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PacketFrame::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> PacketFrame::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::PacketFrame>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes payload = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PacketFrame, _impl_.payload_)}},
    // int32 messageId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PacketFrame, _impl_.messageid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PacketFrame, _impl_.messageid_)}},
    // int32 totalFrameCount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PacketFrame, _impl_.totalframecount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PacketFrame, _impl_.totalframecount_)}},
    // int32 frameIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PacketFrame, _impl_.frameindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PacketFrame, _impl_.frameindex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 messageId = 1;
    {PROTOBUF_FIELD_OFFSET(PacketFrame, _impl_.messageid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 totalFrameCount = 2;
    {PROTOBUF_FIELD_OFFSET(PacketFrame, _impl_.totalframecount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 frameIndex = 3;
    {PROTOBUF_FIELD_OFFSET(PacketFrame, _impl_.frameindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes payload = 4;
    {PROTOBUF_FIELD_OFFSET(PacketFrame, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PacketFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.PacketFrame)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  ::memset(&_impl_.messageid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.frameindex_) -
      reinterpret_cast<char*>(&_impl_.messageid_)) + sizeof(_impl_.frameindex_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PacketFrame::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PacketFrame& this_ = static_cast<const PacketFrame&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PacketFrame::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PacketFrame& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.PacketFrame)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 messageId = 1;
          if (this_._internal_messageid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_messageid(), target);
          }

          // int32 totalFrameCount = 2;
          if (this_._internal_totalframecount() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_totalframecount(), target);
          }

          // int32 frameIndex = 3;
          if (this_._internal_frameindex() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_frameindex(), target);
          }

          // bytes payload = 4;
          if (!this_._internal_payload().empty()) {
            const std::string& _s = this_._internal_payload();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.PacketFrame)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PacketFrame::ByteSizeLong(const MessageLite& base) {
          const PacketFrame& this_ = static_cast<const PacketFrame&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PacketFrame::ByteSizeLong() const {
          const PacketFrame& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.PacketFrame)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes payload = 4;
            if (!this_._internal_payload().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_payload());
            }
            // int32 messageId = 1;
            if (this_._internal_messageid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_messageid());
            }
            // int32 totalFrameCount = 2;
            if (this_._internal_totalframecount() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_totalframecount());
            }
            // int32 frameIndex = 3;
            if (this_._internal_frameindex() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_frameindex());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PacketFrame::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PacketFrame*>(&to_msg);
  auto& from = static_cast<const PacketFrame&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.PacketFrame)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_messageid() != 0) {
    _this->_impl_.messageid_ = from._impl_.messageid_;
  }
  if (from._internal_totalframecount() != 0) {
    _this->_impl_.totalframecount_ = from._impl_.totalframecount_;
  }
  if (from._internal_frameindex() != 0) {
    _this->_impl_.frameindex_ = from._impl_.frameindex_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PacketFrame::CopyFrom(const PacketFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.PacketFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PacketFrame::InternalSwap(PacketFrame* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PacketFrame, _impl_.frameindex_)
      + sizeof(PacketFrame::_impl_.frameindex_)
      - PROTOBUF_FIELD_OFFSET(PacketFrame, _impl_.messageid_)>(
          reinterpret_cast<char*>(&_impl_.messageid_),
          reinterpret_cast<char*>(&other->_impl_.messageid_));
}

::google::protobuf::Metadata PacketFrame::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vector::_Internal {
 public:
};

Vector::Vector(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.Vector)
}
Vector::Vector(
    ::google::protobuf::Arena* arena, const Vector& from)
    : Vector(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vector::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vector::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vector::~Vector() {
  // @@protoc_insertion_point(destructor:msgTest.Vector)
  SharedDtor(*this);
}
inline void Vector::SharedDtor(MessageLite& self) {
  Vector& this_ = static_cast<Vector&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Vector::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vector(arena);
}
constexpr auto Vector::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vector),
                                            alignof(Vector));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vector::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vector_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vector::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vector>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vector::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vector>(), &Vector::ByteSizeLong,
            &Vector::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vector, _impl_._cached_size_),
        false,
    },
    &Vector::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vector::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Vector::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::Vector>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // sint32 x = 1;
    {::_pbi::TcParser::FastZ32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Vector, _impl_.x_)}},
    // sint32 y = 2;
    {::_pbi::TcParser::FastZ32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Vector, _impl_.y_)}},
    // sint32 z = 3;
    {::_pbi::TcParser::FastZ32S1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Vector, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // sint32 x = 1;
    {PROTOBUF_FIELD_OFFSET(Vector, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 y = 2;
    {PROTOBUF_FIELD_OFFSET(Vector, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 z = 3;
    {PROTOBUF_FIELD_OFFSET(Vector, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.Vector)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vector::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vector& this_ = static_cast<const Vector&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vector::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vector& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.Vector)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // sint32 x = 1;
          if (this_._internal_x() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                1, this_._internal_x(), target);
          }

          // sint32 y = 2;
          if (this_._internal_y() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                2, this_._internal_y(), target);
          }

          // sint32 z = 3;
          if (this_._internal_z() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                3, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.Vector)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vector::ByteSizeLong(const MessageLite& base) {
          const Vector& this_ = static_cast<const Vector&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vector::ByteSizeLong() const {
          const Vector& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.Vector)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // sint32 x = 1;
            if (this_._internal_x() != 0) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_x());
            }
            // sint32 y = 2;
            if (this_._internal_y() != 0) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_y());
            }
            // sint32 z = 3;
            if (this_._internal_z() != 0) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_z());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vector::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vector*>(&to_msg);
  auto& from = static_cast<const Vector&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.Vector)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (from._internal_y() != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (from._internal_z() != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector::CopyFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vector::InternalSwap(Vector* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector, _impl_.z_)
      + sizeof(Vector::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vector, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vector::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MoveState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MoveState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MoveState, _impl_._has_bits_);
};

MoveState::MoveState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.MoveState)
}
inline PROTOBUF_NDEBUG_INLINE MoveState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::MoveState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        playername_(arena, from.playername_) {}

MoveState::MoveState(
    ::google::protobuf::Arena* arena,
    const MoveState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MoveState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.velocity_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(
                              arena, *from._impl_.velocity_)
                        : nullptr;
  _impl_.rotation_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(
                              arena, *from._impl_.rotation_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, roomid_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::roomid_));

  // @@protoc_insertion_point(copy_constructor:msgTest.MoveState)
}
inline PROTOBUF_NDEBUG_INLINE MoveState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        playername_(arena) {}

inline void MoveState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, roomid_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::roomid_));
}
MoveState::~MoveState() {
  // @@protoc_insertion_point(destructor:msgTest.MoveState)
  SharedDtor(*this);
}
inline void MoveState::SharedDtor(MessageLite& self) {
  MoveState& this_ = static_cast<MoveState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.playername_.Destroy();
  delete this_._impl_.position_;
  delete this_._impl_.velocity_;
  delete this_._impl_.rotation_;
  this_._impl_.~Impl_();
}

inline void* MoveState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MoveState(arena);
}
constexpr auto MoveState::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MoveState),
                                            alignof(MoveState));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MoveState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MoveState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MoveState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MoveState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MoveState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MoveState>(), &MoveState::ByteSizeLong,
            &MoveState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MoveState, _impl_._cached_size_),
        false,
    },
    &MoveState::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MoveState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 36, 2> MoveState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MoveState, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::MoveState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 roomId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MoveState, _impl_.roomid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MoveState, _impl_.roomid_)}},
    // string playerName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MoveState, _impl_.playername_)}},
    // .msgTest.Vector position = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(MoveState, _impl_.position_)}},
    // .msgTest.Vector velocity = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(MoveState, _impl_.velocity_)}},
    // .msgTest.Vector rotation = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(MoveState, _impl_.rotation_)}},
    // int64 timestamp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MoveState, _impl_.timestamp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MoveState, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 roomId = 1;
    {PROTOBUF_FIELD_OFFSET(MoveState, _impl_.roomid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string playerName = 2;
    {PROTOBUF_FIELD_OFFSET(MoveState, _impl_.playername_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .msgTest.Vector position = 3;
    {PROTOBUF_FIELD_OFFSET(MoveState, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msgTest.Vector velocity = 4;
    {PROTOBUF_FIELD_OFFSET(MoveState, _impl_.velocity_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msgTest.Vector rotation = 5;
    {PROTOBUF_FIELD_OFFSET(MoveState, _impl_.rotation_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(MoveState, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::Vector>()},
    {::_pbi::TcParser::GetTable<::msgTest::Vector>()},
    {::_pbi::TcParser::GetTable<::msgTest::Vector>()},
  }}, {{
    "\21\0\12\0\0\0\0\0"
    "msgTest.MoveState"
    "playerName"
  }},
};

PROTOBUF_NOINLINE void MoveState::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.MoveState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playername_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.velocity_ != nullptr);
      _impl_.velocity_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.rotation_ != nullptr);
      _impl_.rotation_->Clear();
    }
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.roomid_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.roomid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MoveState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MoveState& this_ = static_cast<const MoveState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MoveState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MoveState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.MoveState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 roomId = 1;
          if (this_._internal_roomid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_roomid(), target);
          }

          // string playerName = 2;
          if (!this_._internal_playername().empty()) {
            const std::string& _s = this_._internal_playername();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.MoveState.playerName");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .msgTest.Vector position = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
                stream);
          }

          // .msgTest.Vector velocity = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.velocity_, this_._impl_.velocity_->GetCachedSize(), target,
                stream);
          }

          // .msgTest.Vector rotation = 5;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.rotation_, this_._impl_.rotation_->GetCachedSize(), target,
                stream);
          }

          // int64 timestamp = 6;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.MoveState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MoveState::ByteSizeLong(const MessageLite& base) {
          const MoveState& this_ = static_cast<const MoveState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MoveState::ByteSizeLong() const {
          const MoveState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.MoveState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string playerName = 2;
            if (!this_._internal_playername().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_playername());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .msgTest.Vector position = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
            }
            // .msgTest.Vector velocity = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.velocity_);
            }
            // .msgTest.Vector rotation = 5;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotation_);
            }
          }
           {
            // int64 timestamp = 6;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
            // int32 roomId = 1;
            if (this_._internal_roomid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_roomid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MoveState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MoveState*>(&to_msg);
  auto& from = static_cast<const MoveState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.MoveState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_playername().empty()) {
    _this->_internal_set_playername(from._internal_playername());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.velocity_ != nullptr);
      if (_this->_impl_.velocity_ == nullptr) {
        _this->_impl_.velocity_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(arena, *from._impl_.velocity_);
      } else {
        _this->_impl_.velocity_->MergeFrom(*from._impl_.velocity_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.rotation_ != nullptr);
      if (_this->_impl_.rotation_ == nullptr) {
        _this->_impl_.rotation_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(arena, *from._impl_.rotation_);
      } else {
        _this->_impl_.rotation_->MergeFrom(*from._impl_.rotation_);
      }
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_roomid() != 0) {
    _this->_impl_.roomid_ = from._impl_.roomid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MoveState::CopyFrom(const MoveState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.MoveState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MoveState::InternalSwap(MoveState* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.playername_, &other->_impl_.playername_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MoveState, _impl_.roomid_)
      + sizeof(MoveState::_impl_.roomid_)
      - PROTOBUF_FIELD_OFFSET(MoveState, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata MoveState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Player::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Player>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Player, _impl_._has_bits_);
};

Player::Player(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.Player)
}
inline PROTOBUF_NDEBUG_INLINE Player::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::Player& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

Player::Player(
    ::google::protobuf::Arena* arena,
    const Player& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Player* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.level_ = from._impl_.level_;

  // @@protoc_insertion_point(copy_constructor:msgTest.Player)
}
inline PROTOBUF_NDEBUG_INLINE Player::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void Player::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::level_));
}
Player::~Player() {
  // @@protoc_insertion_point(destructor:msgTest.Player)
  SharedDtor(*this);
}
inline void Player::SharedDtor(MessageLite& self) {
  Player& this_ = static_cast<Player&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.position_;
  this_._impl_.~Impl_();
}

inline void* Player::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Player(arena);
}
constexpr auto Player::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Player),
                                            alignof(Player));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Player::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Player_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Player::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Player>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Player::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Player>(), &Player::ByteSizeLong,
            &Player::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Player, _impl_._cached_size_),
        false,
    },
    &Player::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Player::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 27, 2> Player::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Player, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::Player>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.name_)}},
    // int32 level = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player, _impl_.level_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.level_)}},
    // .msgTest.Vector position = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 level = 2;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .msgTest.Vector position = 3;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::Vector>()},
  }}, {{
    "\16\4\0\0\0\0\0\0"
    "msgTest.Player"
    "name"
  }},
};

PROTOBUF_NOINLINE void Player::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.Player)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.position_ != nullptr);
    _impl_.position_->Clear();
  }
  _impl_.level_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Player::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Player& this_ = static_cast<const Player&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Player::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Player& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.Player)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.Player.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 level = 2;
          if (this_._internal_level() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_level(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .msgTest.Vector position = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.Player)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Player::ByteSizeLong(const MessageLite& base) {
          const Player& this_ = static_cast<const Player&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Player::ByteSizeLong() const {
          const Player& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.Player)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
           {
            // .msgTest.Vector position = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
            }
          }
           {
            // int32 level = 2;
            if (this_._internal_level() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_level());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Player::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Player*>(&to_msg);
  auto& from = static_cast<const Player&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.Player)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.position_ != nullptr);
    if (_this->_impl_.position_ == nullptr) {
      _this->_impl_.position_ =
          ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(arena, *from._impl_.position_);
    } else {
      _this->_impl_.position_->MergeFrom(*from._impl_.position_);
    }
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Player::CopyFrom(const Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Player::InternalSwap(Player* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Player, _impl_.level_)
      + sizeof(Player::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(Player, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata Player::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Room::_Internal {
 public:
};

Room::Room(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.Room)
}
inline PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::Room& from_msg)
      : roomname_(arena, from.roomname_),
        hostname_(arena, from.hostname_),
        _cached_size_{0} {}

Room::Room(
    ::google::protobuf::Arena* arena,
    const Room& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Room* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roomid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, roomid_),
           offsetof(Impl_, playercount_) -
               offsetof(Impl_, roomid_) +
               sizeof(Impl_::playercount_));

  // @@protoc_insertion_point(copy_constructor:msgTest.Room)
}
inline PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : roomname_(arena),
        hostname_(arena),
        _cached_size_{0} {}

inline void Room::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roomid_),
           0,
           offsetof(Impl_, playercount_) -
               offsetof(Impl_, roomid_) +
               sizeof(Impl_::playercount_));
}
Room::~Room() {
  // @@protoc_insertion_point(destructor:msgTest.Room)
  SharedDtor(*this);
}
inline void Room::SharedDtor(MessageLite& self) {
  Room& this_ = static_cast<Room&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.roomname_.Destroy();
  this_._impl_.hostname_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Room::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Room(arena);
}
constexpr auto Room::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Room),
                                            alignof(Room));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Room::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Room_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Room::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Room>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Room::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Room>(), &Room::ByteSizeLong,
            &Room::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Room, _impl_._cached_size_),
        false,
    },
    &Room::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Room::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 37, 2> Room::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::Room>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 roomId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Room, _impl_.roomid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.roomid_)}},
    // string roomName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.roomname_)}},
    // int32 maxPlayerCount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Room, _impl_.maxplayercount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.maxplayercount_)}},
    // int32 playerCount = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Room, _impl_.playercount_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.playercount_)}},
    // string hostName = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.hostname_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 roomId = 1;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.roomid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string roomName = 2;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.roomname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 maxPlayerCount = 3;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.maxplayercount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 playerCount = 4;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.playercount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string hostName = 5;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.hostname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\0\10\0\0\10\0\0"
    "msgTest.Room"
    "roomName"
    "hostName"
  }},
};

PROTOBUF_NOINLINE void Room::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.Room)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roomname_.ClearToEmpty();
  _impl_.hostname_.ClearToEmpty();
  ::memset(&_impl_.roomid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.playercount_) -
      reinterpret_cast<char*>(&_impl_.roomid_)) + sizeof(_impl_.playercount_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Room::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Room::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.Room)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 roomId = 1;
          if (this_._internal_roomid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_roomid(), target);
          }

          // string roomName = 2;
          if (!this_._internal_roomname().empty()) {
            const std::string& _s = this_._internal_roomname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.Room.roomName");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 maxPlayerCount = 3;
          if (this_._internal_maxplayercount() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_maxplayercount(), target);
          }

          // int32 playerCount = 4;
          if (this_._internal_playercount() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_playercount(), target);
          }

          // string hostName = 5;
          if (!this_._internal_hostname().empty()) {
            const std::string& _s = this_._internal_hostname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.Room.hostName");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.Room)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Room::ByteSizeLong(const MessageLite& base) {
          const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Room::ByteSizeLong() const {
          const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.Room)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string roomName = 2;
            if (!this_._internal_roomname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_roomname());
            }
            // string hostName = 5;
            if (!this_._internal_hostname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hostname());
            }
            // int32 roomId = 1;
            if (this_._internal_roomid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_roomid());
            }
            // int32 maxPlayerCount = 3;
            if (this_._internal_maxplayercount() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_maxplayercount());
            }
            // int32 playerCount = 4;
            if (this_._internal_playercount() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_playercount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Room::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Room*>(&to_msg);
  auto& from = static_cast<const Room&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.Room)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_roomname().empty()) {
    _this->_internal_set_roomname(from._internal_roomname());
  }
  if (!from._internal_hostname().empty()) {
    _this->_internal_set_hostname(from._internal_hostname());
  }
  if (from._internal_roomid() != 0) {
    _this->_impl_.roomid_ = from._impl_.roomid_;
  }
  if (from._internal_maxplayercount() != 0) {
    _this->_impl_.maxplayercount_ = from._impl_.maxplayercount_;
  }
  if (from._internal_playercount() != 0) {
    _this->_impl_.playercount_ = from._impl_.playercount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Room::CopyFrom(const Room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.Room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Room::InternalSwap(Room* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.roomname_, &other->_impl_.roomname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hostname_, &other->_impl_.hostname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Room, _impl_.playercount_)
      + sizeof(Room::_impl_.playercount_)
      - PROTOBUF_FIELD_OFFSET(Room, _impl_.roomid_)>(
          reinterpret_cast<char*>(&_impl_.roomid_),
          reinterpret_cast<char*>(&other->_impl_.roomid_));
}

::google::protobuf::Metadata Room::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CS_Ping::_Internal {
 public:
};

CS_Ping::CS_Ping(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.CS_Ping)
}
CS_Ping::CS_Ping(
    ::google::protobuf::Arena* arena, const CS_Ping& from)
    : CS_Ping(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CS_Ping::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CS_Ping::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
CS_Ping::~CS_Ping() {
  // @@protoc_insertion_point(destructor:msgTest.CS_Ping)
  SharedDtor(*this);
}
inline void CS_Ping::SharedDtor(MessageLite& self) {
  CS_Ping& this_ = static_cast<CS_Ping&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CS_Ping::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CS_Ping(arena);
}
constexpr auto CS_Ping::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CS_Ping),
                                            alignof(CS_Ping));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CS_Ping::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CS_Ping_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CS_Ping::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CS_Ping>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CS_Ping::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CS_Ping>(), &CS_Ping::ByteSizeLong,
            &CS_Ping::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CS_Ping, _impl_._cached_size_),
        false,
    },
    &CS_Ping::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CS_Ping::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CS_Ping::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::CS_Ping>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CS_Ping, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CS_Ping, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(CS_Ping, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CS_Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.CS_Ping)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CS_Ping::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CS_Ping& this_ = static_cast<const CS_Ping&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CS_Ping::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CS_Ping& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.CS_Ping)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.CS_Ping)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CS_Ping::ByteSizeLong(const MessageLite& base) {
          const CS_Ping& this_ = static_cast<const CS_Ping&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CS_Ping::ByteSizeLong() const {
          const CS_Ping& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.CS_Ping)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CS_Ping::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CS_Ping*>(&to_msg);
  auto& from = static_cast<const CS_Ping&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.CS_Ping)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CS_Ping::CopyFrom(const CS_Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.CS_Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CS_Ping::InternalSwap(CS_Ping* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata CS_Ping::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Pong::_Internal {
 public:
};

SC_Pong::SC_Pong(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Pong)
}
SC_Pong::SC_Pong(
    ::google::protobuf::Arena* arena, const SC_Pong& from)
    : SC_Pong(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SC_Pong::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC_Pong::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, servertimestamp_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::servertimestamp_));
}
SC_Pong::~SC_Pong() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Pong)
  SharedDtor(*this);
}
inline void SC_Pong::SharedDtor(MessageLite& self) {
  SC_Pong& this_ = static_cast<SC_Pong&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SC_Pong::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Pong(arena);
}
constexpr auto SC_Pong::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SC_Pong),
                                            alignof(SC_Pong));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_Pong::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_Pong_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_Pong::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_Pong>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_Pong::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_Pong>(), &SC_Pong::ByteSizeLong,
            &SC_Pong::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_Pong, _impl_._cached_size_),
        false,
    },
    &SC_Pong::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_Pong::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SC_Pong::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Pong>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 serverTimestamp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SC_Pong, _impl_.servertimestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Pong, _impl_.servertimestamp_)}},
    // int64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SC_Pong, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Pong, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Pong, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 serverTimestamp = 2;
    {PROTOBUF_FIELD_OFFSET(SC_Pong, _impl_.servertimestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SC_Pong::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Pong)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.servertimestamp_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.servertimestamp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Pong::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Pong& this_ = static_cast<const SC_Pong&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Pong::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Pong& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Pong)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_timestamp(), target);
          }

          // int64 serverTimestamp = 2;
          if (this_._internal_servertimestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_servertimestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Pong)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Pong::ByteSizeLong(const MessageLite& base) {
          const SC_Pong& this_ = static_cast<const SC_Pong&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Pong::ByteSizeLong() const {
          const SC_Pong& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Pong)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
            // int64 serverTimestamp = 2;
            if (this_._internal_servertimestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_servertimestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Pong::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Pong*>(&to_msg);
  auto& from = static_cast<const SC_Pong&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Pong)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_servertimestamp() != 0) {
    _this->_impl_.servertimestamp_ = from._impl_.servertimestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Pong::CopyFrom(const SC_Pong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_Pong::InternalSwap(SC_Pong* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC_Pong, _impl_.servertimestamp_)
      + sizeof(SC_Pong::_impl_.servertimestamp_)
      - PROTOBUF_FIELD_OFFSET(SC_Pong, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata SC_Pong::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CS_Login_Request::_Internal {
 public:
};

CS_Login_Request::CS_Login_Request(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.CS_Login_Request)
}
inline PROTOBUF_NDEBUG_INLINE CS_Login_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::CS_Login_Request& from_msg)
      : id_(arena, from.id_),
        password_(arena, from.password_),
        _cached_size_{0} {}

CS_Login_Request::CS_Login_Request(
    ::google::protobuf::Arena* arena,
    const CS_Login_Request& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CS_Login_Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:msgTest.CS_Login_Request)
}
inline PROTOBUF_NDEBUG_INLINE CS_Login_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        password_(arena),
        _cached_size_{0} {}

inline void CS_Login_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CS_Login_Request::~CS_Login_Request() {
  // @@protoc_insertion_point(destructor:msgTest.CS_Login_Request)
  SharedDtor(*this);
}
inline void CS_Login_Request::SharedDtor(MessageLite& self) {
  CS_Login_Request& this_ = static_cast<CS_Login_Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.password_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CS_Login_Request::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CS_Login_Request(arena);
}
constexpr auto CS_Login_Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CS_Login_Request),
                                            alignof(CS_Login_Request));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CS_Login_Request::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CS_Login_Request_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CS_Login_Request::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CS_Login_Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CS_Login_Request::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CS_Login_Request>(), &CS_Login_Request::ByteSizeLong,
            &CS_Login_Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CS_Login_Request, _impl_._cached_size_),
        false,
    },
    &CS_Login_Request::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CS_Login_Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> CS_Login_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::CS_Login_Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CS_Login_Request, _impl_.password_)}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CS_Login_Request, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(CS_Login_Request, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(CS_Login_Request, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\2\10\0\0\0\0\0"
    "msgTest.CS_Login_Request"
    "id"
    "password"
  }},
};

PROTOBUF_NOINLINE void CS_Login_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.CS_Login_Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CS_Login_Request::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CS_Login_Request& this_ = static_cast<const CS_Login_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CS_Login_Request::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CS_Login_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.CS_Login_Request)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.CS_Login_Request.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string password = 2;
          if (!this_._internal_password().empty()) {
            const std::string& _s = this_._internal_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.CS_Login_Request.password");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.CS_Login_Request)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CS_Login_Request::ByteSizeLong(const MessageLite& base) {
          const CS_Login_Request& this_ = static_cast<const CS_Login_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CS_Login_Request::ByteSizeLong() const {
          const CS_Login_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.CS_Login_Request)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string password = 2;
            if (!this_._internal_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_password());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CS_Login_Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CS_Login_Request*>(&to_msg);
  auto& from = static_cast<const CS_Login_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.CS_Login_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CS_Login_Request::CopyFrom(const CS_Login_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.CS_Login_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CS_Login_Request::InternalSwap(CS_Login_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata CS_Login_Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Login_Response::_Internal {
 public:
};

SC_Login_Response::SC_Login_Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Login_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_Login_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Login_Response& from_msg)
      : errormessage_(arena, from.errormessage_),
        _cached_size_{0} {}

SC_Login_Response::SC_Login_Response(
    ::google::protobuf::Arena* arena,
    const SC_Login_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Login_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sessionid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sessionid_),
           offsetof(Impl_, success_) -
               offsetof(Impl_, sessionid_) +
               sizeof(Impl_::success_));

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Login_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_Login_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : errormessage_(arena),
        _cached_size_{0} {}

inline void SC_Login_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sessionid_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, sessionid_) +
               sizeof(Impl_::success_));
}
SC_Login_Response::~SC_Login_Response() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Login_Response)
  SharedDtor(*this);
}
inline void SC_Login_Response::SharedDtor(MessageLite& self) {
  SC_Login_Response& this_ = static_cast<SC_Login_Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.errormessage_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SC_Login_Response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Login_Response(arena);
}
constexpr auto SC_Login_Response::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SC_Login_Response),
                                            alignof(SC_Login_Response));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_Login_Response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_Login_Response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_Login_Response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_Login_Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_Login_Response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_Login_Response>(), &SC_Login_Response::ByteSizeLong,
            &SC_Login_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_Login_Response, _impl_._cached_size_),
        false,
    },
    &SC_Login_Response::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_Login_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 46, 2> SC_Login_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Login_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SC_Login_Response, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Login_Response, _impl_.success_)}},
    // string errorMessage = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Login_Response, _impl_.errormessage_)}},
    // uint64 sessionId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SC_Login_Response, _impl_.sessionid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Login_Response, _impl_.sessionid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Login_Response, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string errorMessage = 2;
    {PROTOBUF_FIELD_OFFSET(SC_Login_Response, _impl_.errormessage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 sessionId = 3;
    {PROTOBUF_FIELD_OFFSET(SC_Login_Response, _impl_.sessionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\31\0\14\0\0\0\0\0"
    "msgTest.SC_Login_Response"
    "errorMessage"
  }},
};

PROTOBUF_NOINLINE void SC_Login_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Login_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errormessage_.ClearToEmpty();
  ::memset(&_impl_.sessionid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.sessionid_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Login_Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Login_Response& this_ = static_cast<const SC_Login_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Login_Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Login_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Login_Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string errorMessage = 2;
          if (!this_._internal_errormessage().empty()) {
            const std::string& _s = this_._internal_errormessage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.SC_Login_Response.errorMessage");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 sessionId = 3;
          if (this_._internal_sessionid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_sessionid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Login_Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Login_Response::ByteSizeLong(const MessageLite& base) {
          const SC_Login_Response& this_ = static_cast<const SC_Login_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Login_Response::ByteSizeLong() const {
          const SC_Login_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Login_Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string errorMessage = 2;
            if (!this_._internal_errormessage().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_errormessage());
            }
            // uint64 sessionId = 3;
            if (this_._internal_sessionid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sessionid());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Login_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Login_Response*>(&to_msg);
  auto& from = static_cast<const SC_Login_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Login_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errormessage().empty()) {
    _this->_internal_set_errormessage(from._internal_errormessage());
  }
  if (from._internal_sessionid() != 0) {
    _this->_impl_.sessionid_ = from._impl_.sessionid_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Login_Response::CopyFrom(const SC_Login_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Login_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_Login_Response::InternalSwap(SC_Login_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errormessage_, &other->_impl_.errormessage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC_Login_Response, _impl_.success_)
      + sizeof(SC_Login_Response::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(SC_Login_Response, _impl_.sessionid_)>(
          reinterpret_cast<char*>(&_impl_.sessionid_),
          reinterpret_cast<char*>(&other->_impl_.sessionid_));
}

::google::protobuf::Metadata SC_Login_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CS_My_Player_Info_Request::_Internal {
 public:
};

CS_My_Player_Info_Request::CS_My_Player_Info_Request(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.CS_My_Player_Info_Request)
}
CS_My_Player_Info_Request::CS_My_Player_Info_Request(
    ::google::protobuf::Arena* arena, const CS_My_Player_Info_Request& from)
    : CS_My_Player_Info_Request(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CS_My_Player_Info_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CS_My_Player_Info_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sessionid_ = {};
}
CS_My_Player_Info_Request::~CS_My_Player_Info_Request() {
  // @@protoc_insertion_point(destructor:msgTest.CS_My_Player_Info_Request)
  SharedDtor(*this);
}
inline void CS_My_Player_Info_Request::SharedDtor(MessageLite& self) {
  CS_My_Player_Info_Request& this_ = static_cast<CS_My_Player_Info_Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CS_My_Player_Info_Request::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CS_My_Player_Info_Request(arena);
}
constexpr auto CS_My_Player_Info_Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CS_My_Player_Info_Request),
                                            alignof(CS_My_Player_Info_Request));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CS_My_Player_Info_Request::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CS_My_Player_Info_Request_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CS_My_Player_Info_Request::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CS_My_Player_Info_Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CS_My_Player_Info_Request::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CS_My_Player_Info_Request>(), &CS_My_Player_Info_Request::ByteSizeLong,
            &CS_My_Player_Info_Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CS_My_Player_Info_Request, _impl_._cached_size_),
        false,
    },
    &CS_My_Player_Info_Request::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CS_My_Player_Info_Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CS_My_Player_Info_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::CS_My_Player_Info_Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 sessionId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CS_My_Player_Info_Request, _impl_.sessionid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CS_My_Player_Info_Request, _impl_.sessionid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 sessionId = 1;
    {PROTOBUF_FIELD_OFFSET(CS_My_Player_Info_Request, _impl_.sessionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CS_My_Player_Info_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.CS_My_Player_Info_Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CS_My_Player_Info_Request::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CS_My_Player_Info_Request& this_ = static_cast<const CS_My_Player_Info_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CS_My_Player_Info_Request::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CS_My_Player_Info_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.CS_My_Player_Info_Request)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 sessionId = 1;
          if (this_._internal_sessionid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_sessionid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.CS_My_Player_Info_Request)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CS_My_Player_Info_Request::ByteSizeLong(const MessageLite& base) {
          const CS_My_Player_Info_Request& this_ = static_cast<const CS_My_Player_Info_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CS_My_Player_Info_Request::ByteSizeLong() const {
          const CS_My_Player_Info_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.CS_My_Player_Info_Request)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 sessionId = 1;
            if (this_._internal_sessionid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sessionid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CS_My_Player_Info_Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CS_My_Player_Info_Request*>(&to_msg);
  auto& from = static_cast<const CS_My_Player_Info_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.CS_My_Player_Info_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sessionid() != 0) {
    _this->_impl_.sessionid_ = from._impl_.sessionid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CS_My_Player_Info_Request::CopyFrom(const CS_My_Player_Info_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.CS_My_Player_Info_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CS_My_Player_Info_Request::InternalSwap(CS_My_Player_Info_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.sessionid_, other->_impl_.sessionid_);
}

::google::protobuf::Metadata CS_My_Player_Info_Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_My_Player_Info_Response::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC_My_Player_Info_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC_My_Player_Info_Response, _impl_._has_bits_);
};

SC_My_Player_Info_Response::SC_My_Player_Info_Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_My_Player_Info_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_My_Player_Info_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_My_Player_Info_Response& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC_My_Player_Info_Response::SC_My_Player_Info_Response(
    ::google::protobuf::Arena* arena,
    const SC_My_Player_Info_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_My_Player_Info_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.playerinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Player>(
                              arena, *from._impl_.playerinfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_My_Player_Info_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_My_Player_Info_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC_My_Player_Info_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.playerinfo_ = {};
}
SC_My_Player_Info_Response::~SC_My_Player_Info_Response() {
  // @@protoc_insertion_point(destructor:msgTest.SC_My_Player_Info_Response)
  SharedDtor(*this);
}
inline void SC_My_Player_Info_Response::SharedDtor(MessageLite& self) {
  SC_My_Player_Info_Response& this_ = static_cast<SC_My_Player_Info_Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.playerinfo_;
  this_._impl_.~Impl_();
}

inline void* SC_My_Player_Info_Response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_My_Player_Info_Response(arena);
}
constexpr auto SC_My_Player_Info_Response::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SC_My_Player_Info_Response),
                                            alignof(SC_My_Player_Info_Response));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_My_Player_Info_Response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_My_Player_Info_Response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_My_Player_Info_Response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_My_Player_Info_Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_My_Player_Info_Response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_My_Player_Info_Response>(), &SC_My_Player_Info_Response::ByteSizeLong,
            &SC_My_Player_Info_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_My_Player_Info_Response, _impl_._cached_size_),
        false,
    },
    &SC_My_Player_Info_Response::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_My_Player_Info_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SC_My_Player_Info_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC_My_Player_Info_Response, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_My_Player_Info_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .msgTest.Player playerInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SC_My_Player_Info_Response, _impl_.playerinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .msgTest.Player playerInfo = 1;
    {PROTOBUF_FIELD_OFFSET(SC_My_Player_Info_Response, _impl_.playerinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::Player>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC_My_Player_Info_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_My_Player_Info_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.playerinfo_ != nullptr);
    _impl_.playerinfo_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_My_Player_Info_Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_My_Player_Info_Response& this_ = static_cast<const SC_My_Player_Info_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_My_Player_Info_Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_My_Player_Info_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_My_Player_Info_Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .msgTest.Player playerInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.playerinfo_, this_._impl_.playerinfo_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_My_Player_Info_Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_My_Player_Info_Response::ByteSizeLong(const MessageLite& base) {
          const SC_My_Player_Info_Response& this_ = static_cast<const SC_My_Player_Info_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_My_Player_Info_Response::ByteSizeLong() const {
          const SC_My_Player_Info_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_My_Player_Info_Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .msgTest.Player playerInfo = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.playerinfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_My_Player_Info_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_My_Player_Info_Response*>(&to_msg);
  auto& from = static_cast<const SC_My_Player_Info_Response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_My_Player_Info_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.playerinfo_ != nullptr);
    if (_this->_impl_.playerinfo_ == nullptr) {
      _this->_impl_.playerinfo_ =
          ::google::protobuf::Message::CopyConstruct<::msgTest::Player>(arena, *from._impl_.playerinfo_);
    } else {
      _this->_impl_.playerinfo_->MergeFrom(*from._impl_.playerinfo_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_My_Player_Info_Response::CopyFrom(const SC_My_Player_Info_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_My_Player_Info_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_My_Player_Info_Response::InternalSwap(SC_My_Player_Info_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.playerinfo_, other->_impl_.playerinfo_);
}

::google::protobuf::Metadata SC_My_Player_Info_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CS_Room_Player_List_Request::_Internal {
 public:
};

CS_Room_Player_List_Request::CS_Room_Player_List_Request(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.CS_Room_Player_List_Request)
}
CS_Room_Player_List_Request::CS_Room_Player_List_Request(
    ::google::protobuf::Arena* arena, const CS_Room_Player_List_Request& from)
    : CS_Room_Player_List_Request(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CS_Room_Player_List_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CS_Room_Player_List_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.roomid_ = {};
}
CS_Room_Player_List_Request::~CS_Room_Player_List_Request() {
  // @@protoc_insertion_point(destructor:msgTest.CS_Room_Player_List_Request)
  SharedDtor(*this);
}
inline void CS_Room_Player_List_Request::SharedDtor(MessageLite& self) {
  CS_Room_Player_List_Request& this_ = static_cast<CS_Room_Player_List_Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CS_Room_Player_List_Request::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CS_Room_Player_List_Request(arena);
}
constexpr auto CS_Room_Player_List_Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CS_Room_Player_List_Request),
                                            alignof(CS_Room_Player_List_Request));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CS_Room_Player_List_Request::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CS_Room_Player_List_Request_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CS_Room_Player_List_Request::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CS_Room_Player_List_Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CS_Room_Player_List_Request::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CS_Room_Player_List_Request>(), &CS_Room_Player_List_Request::ByteSizeLong,
            &CS_Room_Player_List_Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CS_Room_Player_List_Request, _impl_._cached_size_),
        false,
    },
    &CS_Room_Player_List_Request::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CS_Room_Player_List_Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CS_Room_Player_List_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::CS_Room_Player_List_Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 roomId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CS_Room_Player_List_Request, _impl_.roomid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CS_Room_Player_List_Request, _impl_.roomid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 roomId = 1;
    {PROTOBUF_FIELD_OFFSET(CS_Room_Player_List_Request, _impl_.roomid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CS_Room_Player_List_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.CS_Room_Player_List_Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roomid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CS_Room_Player_List_Request::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CS_Room_Player_List_Request& this_ = static_cast<const CS_Room_Player_List_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CS_Room_Player_List_Request::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CS_Room_Player_List_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.CS_Room_Player_List_Request)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 roomId = 1;
          if (this_._internal_roomid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_roomid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.CS_Room_Player_List_Request)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CS_Room_Player_List_Request::ByteSizeLong(const MessageLite& base) {
          const CS_Room_Player_List_Request& this_ = static_cast<const CS_Room_Player_List_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CS_Room_Player_List_Request::ByteSizeLong() const {
          const CS_Room_Player_List_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.CS_Room_Player_List_Request)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 roomId = 1;
            if (this_._internal_roomid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_roomid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CS_Room_Player_List_Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CS_Room_Player_List_Request*>(&to_msg);
  auto& from = static_cast<const CS_Room_Player_List_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.CS_Room_Player_List_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roomid() != 0) {
    _this->_impl_.roomid_ = from._impl_.roomid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CS_Room_Player_List_Request::CopyFrom(const CS_Room_Player_List_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.CS_Room_Player_List_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CS_Room_Player_List_Request::InternalSwap(CS_Room_Player_List_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.roomid_, other->_impl_.roomid_);
}

::google::protobuf::Metadata CS_Room_Player_List_Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Room_Player_List_Response::_Internal {
 public:
};

SC_Room_Player_List_Response::SC_Room_Player_List_Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Room_Player_List_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_Room_Player_List_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Room_Player_List_Response& from_msg)
      : playerlist_{visibility, arena, from.playerlist_},
        _cached_size_{0} {}

SC_Room_Player_List_Response::SC_Room_Player_List_Response(
    ::google::protobuf::Arena* arena,
    const SC_Room_Player_List_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Room_Player_List_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Room_Player_List_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_Room_Player_List_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : playerlist_{visibility, arena},
        _cached_size_{0} {}

inline void SC_Room_Player_List_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SC_Room_Player_List_Response::~SC_Room_Player_List_Response() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Room_Player_List_Response)
  SharedDtor(*this);
}
inline void SC_Room_Player_List_Response::SharedDtor(MessageLite& self) {
  SC_Room_Player_List_Response& this_ = static_cast<SC_Room_Player_List_Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SC_Room_Player_List_Response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Room_Player_List_Response(arena);
}
constexpr auto SC_Room_Player_List_Response::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SC_Room_Player_List_Response, _impl_.playerlist_) +
          decltype(SC_Room_Player_List_Response::_impl_.playerlist_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SC_Room_Player_List_Response), alignof(SC_Room_Player_List_Response), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SC_Room_Player_List_Response::PlacementNew_,
                                 sizeof(SC_Room_Player_List_Response),
                                 alignof(SC_Room_Player_List_Response));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_Room_Player_List_Response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_Room_Player_List_Response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_Room_Player_List_Response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_Room_Player_List_Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_Room_Player_List_Response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_Room_Player_List_Response>(), &SC_Room_Player_List_Response::ByteSizeLong,
            &SC_Room_Player_List_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_Room_Player_List_Response, _impl_._cached_size_),
        false,
    },
    &SC_Room_Player_List_Response::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_Room_Player_List_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SC_Room_Player_List_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Room_Player_List_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .msgTest.Player playerList = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Room_Player_List_Response, _impl_.playerlist_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .msgTest.Player playerList = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Room_Player_List_Response, _impl_.playerlist_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::Player>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC_Room_Player_List_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Room_Player_List_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playerlist_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Room_Player_List_Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Room_Player_List_Response& this_ = static_cast<const SC_Room_Player_List_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Room_Player_List_Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Room_Player_List_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Room_Player_List_Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .msgTest.Player playerList = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_playerlist_size());
               i < n; i++) {
            const auto& repfield = this_._internal_playerlist().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Room_Player_List_Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Room_Player_List_Response::ByteSizeLong(const MessageLite& base) {
          const SC_Room_Player_List_Response& this_ = static_cast<const SC_Room_Player_List_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Room_Player_List_Response::ByteSizeLong() const {
          const SC_Room_Player_List_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Room_Player_List_Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .msgTest.Player playerList = 1;
            {
              total_size += 1UL * this_._internal_playerlist_size();
              for (const auto& msg : this_._internal_playerlist()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Room_Player_List_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Room_Player_List_Response*>(&to_msg);
  auto& from = static_cast<const SC_Room_Player_List_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Room_Player_List_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_playerlist()->MergeFrom(
      from._internal_playerlist());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Room_Player_List_Response::CopyFrom(const SC_Room_Player_List_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Room_Player_List_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_Room_Player_List_Response::InternalSwap(SC_Room_Player_List_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.playerlist_.InternalSwap(&other->_impl_.playerlist_);
}

::google::protobuf::Metadata SC_Room_Player_List_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CS_Create_Room_Request::_Internal {
 public:
};

CS_Create_Room_Request::CS_Create_Room_Request(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.CS_Create_Room_Request)
}
inline PROTOBUF_NDEBUG_INLINE CS_Create_Room_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::CS_Create_Room_Request& from_msg)
      : roomname_(arena, from.roomname_),
        hostname_(arena, from.hostname_),
        _cached_size_{0} {}

CS_Create_Room_Request::CS_Create_Room_Request(
    ::google::protobuf::Arena* arena,
    const CS_Create_Room_Request& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CS_Create_Room_Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:msgTest.CS_Create_Room_Request)
}
inline PROTOBUF_NDEBUG_INLINE CS_Create_Room_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : roomname_(arena),
        hostname_(arena),
        _cached_size_{0} {}

inline void CS_Create_Room_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CS_Create_Room_Request::~CS_Create_Room_Request() {
  // @@protoc_insertion_point(destructor:msgTest.CS_Create_Room_Request)
  SharedDtor(*this);
}
inline void CS_Create_Room_Request::SharedDtor(MessageLite& self) {
  CS_Create_Room_Request& this_ = static_cast<CS_Create_Room_Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.roomname_.Destroy();
  this_._impl_.hostname_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CS_Create_Room_Request::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CS_Create_Room_Request(arena);
}
constexpr auto CS_Create_Room_Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CS_Create_Room_Request),
                                            alignof(CS_Create_Room_Request));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CS_Create_Room_Request::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CS_Create_Room_Request_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CS_Create_Room_Request::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CS_Create_Room_Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CS_Create_Room_Request::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CS_Create_Room_Request>(), &CS_Create_Room_Request::ByteSizeLong,
            &CS_Create_Room_Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CS_Create_Room_Request, _impl_._cached_size_),
        false,
    },
    &CS_Create_Room_Request::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CS_Create_Room_Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> CS_Create_Room_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::CS_Create_Room_Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string hostName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CS_Create_Room_Request, _impl_.hostname_)}},
    // string roomName = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CS_Create_Room_Request, _impl_.roomname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string roomName = 1;
    {PROTOBUF_FIELD_OFFSET(CS_Create_Room_Request, _impl_.roomname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hostName = 2;
    {PROTOBUF_FIELD_OFFSET(CS_Create_Room_Request, _impl_.hostname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\10\10\0\0\0\0\0"
    "msgTest.CS_Create_Room_Request"
    "roomName"
    "hostName"
  }},
};

PROTOBUF_NOINLINE void CS_Create_Room_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.CS_Create_Room_Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roomname_.ClearToEmpty();
  _impl_.hostname_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CS_Create_Room_Request::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CS_Create_Room_Request& this_ = static_cast<const CS_Create_Room_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CS_Create_Room_Request::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CS_Create_Room_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.CS_Create_Room_Request)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string roomName = 1;
          if (!this_._internal_roomname().empty()) {
            const std::string& _s = this_._internal_roomname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.CS_Create_Room_Request.roomName");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string hostName = 2;
          if (!this_._internal_hostname().empty()) {
            const std::string& _s = this_._internal_hostname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.CS_Create_Room_Request.hostName");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.CS_Create_Room_Request)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CS_Create_Room_Request::ByteSizeLong(const MessageLite& base) {
          const CS_Create_Room_Request& this_ = static_cast<const CS_Create_Room_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CS_Create_Room_Request::ByteSizeLong() const {
          const CS_Create_Room_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.CS_Create_Room_Request)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string roomName = 1;
            if (!this_._internal_roomname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_roomname());
            }
            // string hostName = 2;
            if (!this_._internal_hostname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hostname());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CS_Create_Room_Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CS_Create_Room_Request*>(&to_msg);
  auto& from = static_cast<const CS_Create_Room_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.CS_Create_Room_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_roomname().empty()) {
    _this->_internal_set_roomname(from._internal_roomname());
  }
  if (!from._internal_hostname().empty()) {
    _this->_internal_set_hostname(from._internal_hostname());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CS_Create_Room_Request::CopyFrom(const CS_Create_Room_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.CS_Create_Room_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CS_Create_Room_Request::InternalSwap(CS_Create_Room_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.roomname_, &other->_impl_.roomname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hostname_, &other->_impl_.hostname_, arena);
}

::google::protobuf::Metadata CS_Create_Room_Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Create_Room_Response::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC_Create_Room_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC_Create_Room_Response, _impl_._has_bits_);
};

SC_Create_Room_Response::SC_Create_Room_Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Create_Room_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_Create_Room_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Create_Room_Response& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        errormessage_(arena, from.errormessage_) {}

SC_Create_Room_Response::SC_Create_Room_Response(
    ::google::protobuf::Arena* arena,
    const SC_Create_Room_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Create_Room_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.room_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Room>(
                              arena, *from._impl_.room_)
                        : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Create_Room_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_Create_Room_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        errormessage_(arena) {}

inline void SC_Create_Room_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, room_) +
               sizeof(Impl_::success_));
}
SC_Create_Room_Response::~SC_Create_Room_Response() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Create_Room_Response)
  SharedDtor(*this);
}
inline void SC_Create_Room_Response::SharedDtor(MessageLite& self) {
  SC_Create_Room_Response& this_ = static_cast<SC_Create_Room_Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.errormessage_.Destroy();
  delete this_._impl_.room_;
  this_._impl_.~Impl_();
}

inline void* SC_Create_Room_Response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Create_Room_Response(arena);
}
constexpr auto SC_Create_Room_Response::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SC_Create_Room_Response),
                                            alignof(SC_Create_Room_Response));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_Create_Room_Response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_Create_Room_Response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_Create_Room_Response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_Create_Room_Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_Create_Room_Response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_Create_Room_Response>(), &SC_Create_Room_Response::ByteSizeLong,
            &SC_Create_Room_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_Create_Room_Response, _impl_._cached_size_),
        false,
    },
    &SC_Create_Room_Response::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_Create_Room_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 52, 2> SC_Create_Room_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC_Create_Room_Response, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Create_Room_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SC_Create_Room_Response, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Create_Room_Response, _impl_.success_)}},
    // string errorMessage = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Create_Room_Response, _impl_.errormessage_)}},
    // .msgTest.Room room = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SC_Create_Room_Response, _impl_.room_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Create_Room_Response, _impl_.success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string errorMessage = 2;
    {PROTOBUF_FIELD_OFFSET(SC_Create_Room_Response, _impl_.errormessage_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .msgTest.Room room = 3;
    {PROTOBUF_FIELD_OFFSET(SC_Create_Room_Response, _impl_.room_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::Room>()},
  }}, {{
    "\37\0\14\0\0\0\0\0"
    "msgTest.SC_Create_Room_Response"
    "errorMessage"
  }},
};

PROTOBUF_NOINLINE void SC_Create_Room_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Create_Room_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errormessage_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.room_ != nullptr);
    _impl_.room_->Clear();
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Create_Room_Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Create_Room_Response& this_ = static_cast<const SC_Create_Room_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Create_Room_Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Create_Room_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Create_Room_Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string errorMessage = 2;
          if (!this_._internal_errormessage().empty()) {
            const std::string& _s = this_._internal_errormessage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.SC_Create_Room_Response.errorMessage");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .msgTest.Room room = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.room_, this_._impl_.room_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Create_Room_Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Create_Room_Response::ByteSizeLong(const MessageLite& base) {
          const SC_Create_Room_Response& this_ = static_cast<const SC_Create_Room_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Create_Room_Response::ByteSizeLong() const {
          const SC_Create_Room_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Create_Room_Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string errorMessage = 2;
            if (!this_._internal_errormessage().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_errormessage());
            }
          }
           {
            // .msgTest.Room room = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_);
            }
          }
           {
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Create_Room_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Create_Room_Response*>(&to_msg);
  auto& from = static_cast<const SC_Create_Room_Response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Create_Room_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errormessage().empty()) {
    _this->_internal_set_errormessage(from._internal_errormessage());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.room_ != nullptr);
    if (_this->_impl_.room_ == nullptr) {
      _this->_impl_.room_ =
          ::google::protobuf::Message::CopyConstruct<::msgTest::Room>(arena, *from._impl_.room_);
    } else {
      _this->_impl_.room_->MergeFrom(*from._impl_.room_);
    }
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Create_Room_Response::CopyFrom(const SC_Create_Room_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Create_Room_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_Create_Room_Response::InternalSwap(SC_Create_Room_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errormessage_, &other->_impl_.errormessage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC_Create_Room_Response, _impl_.success_)
      + sizeof(SC_Create_Room_Response::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(SC_Create_Room_Response, _impl_.room_)>(
          reinterpret_cast<char*>(&_impl_.room_),
          reinterpret_cast<char*>(&other->_impl_.room_));
}

::google::protobuf::Metadata SC_Create_Room_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CS_Room_List_Request::_Internal {
 public:
};

CS_Room_List_Request::CS_Room_List_Request(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:msgTest.CS_Room_List_Request)
}
CS_Room_List_Request::CS_Room_List_Request(
    ::google::protobuf::Arena* arena,
    const CS_Room_List_Request& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CS_Room_List_Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:msgTest.CS_Room_List_Request)
}

inline void* CS_Room_List_Request::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CS_Room_List_Request(arena);
}
constexpr auto CS_Room_List_Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CS_Room_List_Request),
                                            alignof(CS_Room_List_Request));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CS_Room_List_Request::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CS_Room_List_Request_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CS_Room_List_Request::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<CS_Room_List_Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CS_Room_List_Request::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<CS_Room_List_Request>(), &CS_Room_List_Request::ByteSizeLong,
            &CS_Room_List_Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CS_Room_List_Request, _impl_._cached_size_),
        false,
    },
    &CS_Room_List_Request::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CS_Room_List_Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> CS_Room_List_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::CS_Room_List_Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata CS_Room_List_Request::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Room_List_Response::_Internal {
 public:
};

SC_Room_List_Response::SC_Room_List_Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Room_List_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_Room_List_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Room_List_Response& from_msg)
      : roomlist_{visibility, arena, from.roomlist_},
        _cached_size_{0} {}

SC_Room_List_Response::SC_Room_List_Response(
    ::google::protobuf::Arena* arena,
    const SC_Room_List_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Room_List_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Room_List_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_Room_List_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : roomlist_{visibility, arena},
        _cached_size_{0} {}

inline void SC_Room_List_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SC_Room_List_Response::~SC_Room_List_Response() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Room_List_Response)
  SharedDtor(*this);
}
inline void SC_Room_List_Response::SharedDtor(MessageLite& self) {
  SC_Room_List_Response& this_ = static_cast<SC_Room_List_Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SC_Room_List_Response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Room_List_Response(arena);
}
constexpr auto SC_Room_List_Response::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SC_Room_List_Response, _impl_.roomlist_) +
          decltype(SC_Room_List_Response::_impl_.roomlist_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SC_Room_List_Response), alignof(SC_Room_List_Response), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SC_Room_List_Response::PlacementNew_,
                                 sizeof(SC_Room_List_Response),
                                 alignof(SC_Room_List_Response));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_Room_List_Response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_Room_List_Response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_Room_List_Response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_Room_List_Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_Room_List_Response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_Room_List_Response>(), &SC_Room_List_Response::ByteSizeLong,
            &SC_Room_List_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_Room_List_Response, _impl_._cached_size_),
        false,
    },
    &SC_Room_List_Response::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_Room_List_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SC_Room_List_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Room_List_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .msgTest.Room roomList = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Room_List_Response, _impl_.roomlist_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .msgTest.Room roomList = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Room_List_Response, _impl_.roomlist_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::Room>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC_Room_List_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Room_List_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roomlist_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Room_List_Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Room_List_Response& this_ = static_cast<const SC_Room_List_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Room_List_Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Room_List_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Room_List_Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .msgTest.Room roomList = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_roomlist_size());
               i < n; i++) {
            const auto& repfield = this_._internal_roomlist().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Room_List_Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Room_List_Response::ByteSizeLong(const MessageLite& base) {
          const SC_Room_List_Response& this_ = static_cast<const SC_Room_List_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Room_List_Response::ByteSizeLong() const {
          const SC_Room_List_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Room_List_Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .msgTest.Room roomList = 1;
            {
              total_size += 1UL * this_._internal_roomlist_size();
              for (const auto& msg : this_._internal_roomlist()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Room_List_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Room_List_Response*>(&to_msg);
  auto& from = static_cast<const SC_Room_List_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Room_List_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_roomlist()->MergeFrom(
      from._internal_roomlist());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Room_List_Response::CopyFrom(const SC_Room_List_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Room_List_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_Room_List_Response::InternalSwap(SC_Room_List_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.roomlist_.InternalSwap(&other->_impl_.roomlist_);
}

::google::protobuf::Metadata SC_Room_List_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CS_Enter_Room_Request::_Internal {
 public:
};

CS_Enter_Room_Request::CS_Enter_Room_Request(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.CS_Enter_Room_Request)
}
CS_Enter_Room_Request::CS_Enter_Room_Request(
    ::google::protobuf::Arena* arena, const CS_Enter_Room_Request& from)
    : CS_Enter_Room_Request(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CS_Enter_Room_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CS_Enter_Room_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.roomid_ = {};
}
CS_Enter_Room_Request::~CS_Enter_Room_Request() {
  // @@protoc_insertion_point(destructor:msgTest.CS_Enter_Room_Request)
  SharedDtor(*this);
}
inline void CS_Enter_Room_Request::SharedDtor(MessageLite& self) {
  CS_Enter_Room_Request& this_ = static_cast<CS_Enter_Room_Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CS_Enter_Room_Request::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CS_Enter_Room_Request(arena);
}
constexpr auto CS_Enter_Room_Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CS_Enter_Room_Request),
                                            alignof(CS_Enter_Room_Request));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CS_Enter_Room_Request::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CS_Enter_Room_Request_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CS_Enter_Room_Request::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CS_Enter_Room_Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CS_Enter_Room_Request::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CS_Enter_Room_Request>(), &CS_Enter_Room_Request::ByteSizeLong,
            &CS_Enter_Room_Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CS_Enter_Room_Request, _impl_._cached_size_),
        false,
    },
    &CS_Enter_Room_Request::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CS_Enter_Room_Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CS_Enter_Room_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::CS_Enter_Room_Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 roomId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CS_Enter_Room_Request, _impl_.roomid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CS_Enter_Room_Request, _impl_.roomid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 roomId = 1;
    {PROTOBUF_FIELD_OFFSET(CS_Enter_Room_Request, _impl_.roomid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CS_Enter_Room_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.CS_Enter_Room_Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roomid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CS_Enter_Room_Request::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CS_Enter_Room_Request& this_ = static_cast<const CS_Enter_Room_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CS_Enter_Room_Request::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CS_Enter_Room_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.CS_Enter_Room_Request)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 roomId = 1;
          if (this_._internal_roomid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_roomid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.CS_Enter_Room_Request)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CS_Enter_Room_Request::ByteSizeLong(const MessageLite& base) {
          const CS_Enter_Room_Request& this_ = static_cast<const CS_Enter_Room_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CS_Enter_Room_Request::ByteSizeLong() const {
          const CS_Enter_Room_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.CS_Enter_Room_Request)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 roomId = 1;
            if (this_._internal_roomid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_roomid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CS_Enter_Room_Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CS_Enter_Room_Request*>(&to_msg);
  auto& from = static_cast<const CS_Enter_Room_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.CS_Enter_Room_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roomid() != 0) {
    _this->_impl_.roomid_ = from._impl_.roomid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CS_Enter_Room_Request::CopyFrom(const CS_Enter_Room_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.CS_Enter_Room_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CS_Enter_Room_Request::InternalSwap(CS_Enter_Room_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.roomid_, other->_impl_.roomid_);
}

::google::protobuf::Metadata CS_Enter_Room_Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Enter_Room_Response::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC_Enter_Room_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_._has_bits_);
};

SC_Enter_Room_Response::SC_Enter_Room_Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Enter_Room_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_Enter_Room_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Enter_Room_Response& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        playerlistingrid_{visibility, arena, from.playerlistingrid_},
        errormessage_(arena, from.errormessage_) {}

SC_Enter_Room_Response::SC_Enter_Room_Response(
    ::google::protobuf::Arena* arena,
    const SC_Enter_Room_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Enter_Room_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.room_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Room>(
                              arena, *from._impl_.room_)
                        : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Enter_Room_Response)
}
inline PROTOBUF_NDEBUG_INLINE SC_Enter_Room_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        playerlistingrid_{visibility, arena},
        errormessage_(arena) {}

inline void SC_Enter_Room_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, room_) +
               sizeof(Impl_::success_));
}
SC_Enter_Room_Response::~SC_Enter_Room_Response() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Enter_Room_Response)
  SharedDtor(*this);
}
inline void SC_Enter_Room_Response::SharedDtor(MessageLite& self) {
  SC_Enter_Room_Response& this_ = static_cast<SC_Enter_Room_Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.errormessage_.Destroy();
  delete this_._impl_.room_;
  this_._impl_.~Impl_();
}

inline void* SC_Enter_Room_Response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Enter_Room_Response(arena);
}
constexpr auto SC_Enter_Room_Response::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_.playerlistingrid_) +
          decltype(SC_Enter_Room_Response::_impl_.playerlistingrid_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SC_Enter_Room_Response), alignof(SC_Enter_Room_Response), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SC_Enter_Room_Response::PlacementNew_,
                                 sizeof(SC_Enter_Room_Response),
                                 alignof(SC_Enter_Room_Response));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_Enter_Room_Response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_Enter_Room_Response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_Enter_Room_Response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_Enter_Room_Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_Enter_Room_Response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_Enter_Room_Response>(), &SC_Enter_Room_Response::ByteSizeLong,
            &SC_Enter_Room_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_._cached_size_),
        false,
    },
    &SC_Enter_Room_Response::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_Enter_Room_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 51, 2> SC_Enter_Room_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Enter_Room_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .msgTest.Player playerListInGrid = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_.playerlistingrid_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SC_Enter_Room_Response, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_.success_)}},
    // string errorMessage = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_.errormessage_)}},
    // .msgTest.Room room = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_.room_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_.success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string errorMessage = 2;
    {PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_.errormessage_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .msgTest.Room room = 3;
    {PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_.room_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .msgTest.Player playerListInGrid = 4;
    {PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_.playerlistingrid_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::Room>()},
    {::_pbi::TcParser::GetTable<::msgTest::Player>()},
  }}, {{
    "\36\0\14\0\0\0\0\0"
    "msgTest.SC_Enter_Room_Response"
    "errorMessage"
  }},
};

PROTOBUF_NOINLINE void SC_Enter_Room_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Enter_Room_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playerlistingrid_.Clear();
  _impl_.errormessage_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.room_ != nullptr);
    _impl_.room_->Clear();
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Enter_Room_Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Enter_Room_Response& this_ = static_cast<const SC_Enter_Room_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Enter_Room_Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Enter_Room_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Enter_Room_Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string errorMessage = 2;
          if (!this_._internal_errormessage().empty()) {
            const std::string& _s = this_._internal_errormessage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.SC_Enter_Room_Response.errorMessage");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .msgTest.Room room = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.room_, this_._impl_.room_->GetCachedSize(), target,
                stream);
          }

          // repeated .msgTest.Player playerListInGrid = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_playerlistingrid_size());
               i < n; i++) {
            const auto& repfield = this_._internal_playerlistingrid().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Enter_Room_Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Enter_Room_Response::ByteSizeLong(const MessageLite& base) {
          const SC_Enter_Room_Response& this_ = static_cast<const SC_Enter_Room_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Enter_Room_Response::ByteSizeLong() const {
          const SC_Enter_Room_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Enter_Room_Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .msgTest.Player playerListInGrid = 4;
            {
              total_size += 1UL * this_._internal_playerlistingrid_size();
              for (const auto& msg : this_._internal_playerlistingrid()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string errorMessage = 2;
            if (!this_._internal_errormessage().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_errormessage());
            }
          }
           {
            // .msgTest.Room room = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_);
            }
          }
           {
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Enter_Room_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Enter_Room_Response*>(&to_msg);
  auto& from = static_cast<const SC_Enter_Room_Response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Enter_Room_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_playerlistingrid()->MergeFrom(
      from._internal_playerlistingrid());
  if (!from._internal_errormessage().empty()) {
    _this->_internal_set_errormessage(from._internal_errormessage());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.room_ != nullptr);
    if (_this->_impl_.room_ == nullptr) {
      _this->_impl_.room_ =
          ::google::protobuf::Message::CopyConstruct<::msgTest::Room>(arena, *from._impl_.room_);
    } else {
      _this->_impl_.room_->MergeFrom(*from._impl_.room_);
    }
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Enter_Room_Response::CopyFrom(const SC_Enter_Room_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Enter_Room_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_Enter_Room_Response::InternalSwap(SC_Enter_Room_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.playerlistingrid_.InternalSwap(&other->_impl_.playerlistingrid_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errormessage_, &other->_impl_.errormessage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_.success_)
      + sizeof(SC_Enter_Room_Response::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(SC_Enter_Room_Response, _impl_.room_)>(
          reinterpret_cast<char*>(&_impl_.room_),
          reinterpret_cast<char*>(&other->_impl_.room_));
}

::google::protobuf::Metadata SC_Enter_Room_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Player_Enter_Room_Notification::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC_Player_Enter_Room_Notification>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC_Player_Enter_Room_Notification, _impl_._has_bits_);
};

SC_Player_Enter_Room_Notification::SC_Player_Enter_Room_Notification(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Player_Enter_Room_Notification)
}
inline PROTOBUF_NDEBUG_INLINE SC_Player_Enter_Room_Notification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Player_Enter_Room_Notification& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC_Player_Enter_Room_Notification::SC_Player_Enter_Room_Notification(
    ::google::protobuf::Arena* arena,
    const SC_Player_Enter_Room_Notification& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Player_Enter_Room_Notification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Player_Enter_Room_Notification)
}
inline PROTOBUF_NDEBUG_INLINE SC_Player_Enter_Room_Notification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC_Player_Enter_Room_Notification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_ = {};
}
SC_Player_Enter_Room_Notification::~SC_Player_Enter_Room_Notification() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Player_Enter_Room_Notification)
  SharedDtor(*this);
}
inline void SC_Player_Enter_Room_Notification::SharedDtor(MessageLite& self) {
  SC_Player_Enter_Room_Notification& this_ = static_cast<SC_Player_Enter_Room_Notification&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.player_;
  this_._impl_.~Impl_();
}

inline void* SC_Player_Enter_Room_Notification::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Player_Enter_Room_Notification(arena);
}
constexpr auto SC_Player_Enter_Room_Notification::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SC_Player_Enter_Room_Notification),
                                            alignof(SC_Player_Enter_Room_Notification));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_Player_Enter_Room_Notification::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_Player_Enter_Room_Notification_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_Player_Enter_Room_Notification::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_Player_Enter_Room_Notification>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_Player_Enter_Room_Notification::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_Player_Enter_Room_Notification>(), &SC_Player_Enter_Room_Notification::ByteSizeLong,
            &SC_Player_Enter_Room_Notification::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_Player_Enter_Room_Notification, _impl_._cached_size_),
        false,
    },
    &SC_Player_Enter_Room_Notification::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_Player_Enter_Room_Notification::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SC_Player_Enter_Room_Notification::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC_Player_Enter_Room_Notification, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Player_Enter_Room_Notification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .msgTest.Player player = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SC_Player_Enter_Room_Notification, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .msgTest.Player player = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Player_Enter_Room_Notification, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::Player>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC_Player_Enter_Room_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Player_Enter_Room_Notification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Player_Enter_Room_Notification::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Player_Enter_Room_Notification& this_ = static_cast<const SC_Player_Enter_Room_Notification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Player_Enter_Room_Notification::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Player_Enter_Room_Notification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Player_Enter_Room_Notification)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .msgTest.Player player = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Player_Enter_Room_Notification)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Player_Enter_Room_Notification::ByteSizeLong(const MessageLite& base) {
          const SC_Player_Enter_Room_Notification& this_ = static_cast<const SC_Player_Enter_Room_Notification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Player_Enter_Room_Notification::ByteSizeLong() const {
          const SC_Player_Enter_Room_Notification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Player_Enter_Room_Notification)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .msgTest.Player player = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Player_Enter_Room_Notification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Player_Enter_Room_Notification*>(&to_msg);
  auto& from = static_cast<const SC_Player_Enter_Room_Notification&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Player_Enter_Room_Notification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::msgTest::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Player_Enter_Room_Notification::CopyFrom(const SC_Player_Enter_Room_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Player_Enter_Room_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_Player_Enter_Room_Notification::InternalSwap(SC_Player_Enter_Room_Notification* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_, other->_impl_.player_);
}

::google::protobuf::Metadata SC_Player_Enter_Room_Notification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CS_Player_Move_Request::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CS_Player_Move_Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CS_Player_Move_Request, _impl_._has_bits_);
};

CS_Player_Move_Request::CS_Player_Move_Request(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.CS_Player_Move_Request)
}
inline PROTOBUF_NDEBUG_INLINE CS_Player_Move_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::CS_Player_Move_Request& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CS_Player_Move_Request::CS_Player_Move_Request(
    ::google::protobuf::Arena* arena,
    const CS_Player_Move_Request& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CS_Player_Move_Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.movestate_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::MoveState>(
                              arena, *from._impl_.movestate_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:msgTest.CS_Player_Move_Request)
}
inline PROTOBUF_NDEBUG_INLINE CS_Player_Move_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CS_Player_Move_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.movestate_ = {};
}
CS_Player_Move_Request::~CS_Player_Move_Request() {
  // @@protoc_insertion_point(destructor:msgTest.CS_Player_Move_Request)
  SharedDtor(*this);
}
inline void CS_Player_Move_Request::SharedDtor(MessageLite& self) {
  CS_Player_Move_Request& this_ = static_cast<CS_Player_Move_Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.movestate_;
  this_._impl_.~Impl_();
}

inline void* CS_Player_Move_Request::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CS_Player_Move_Request(arena);
}
constexpr auto CS_Player_Move_Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CS_Player_Move_Request),
                                            alignof(CS_Player_Move_Request));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CS_Player_Move_Request::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CS_Player_Move_Request_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CS_Player_Move_Request::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CS_Player_Move_Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CS_Player_Move_Request::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CS_Player_Move_Request>(), &CS_Player_Move_Request::ByteSizeLong,
            &CS_Player_Move_Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CS_Player_Move_Request, _impl_._cached_size_),
        false,
    },
    &CS_Player_Move_Request::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CS_Player_Move_Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CS_Player_Move_Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CS_Player_Move_Request, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::CS_Player_Move_Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .msgTest.MoveState moveState = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CS_Player_Move_Request, _impl_.movestate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .msgTest.MoveState moveState = 1;
    {PROTOBUF_FIELD_OFFSET(CS_Player_Move_Request, _impl_.movestate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::MoveState>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CS_Player_Move_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.CS_Player_Move_Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.movestate_ != nullptr);
    _impl_.movestate_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CS_Player_Move_Request::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CS_Player_Move_Request& this_ = static_cast<const CS_Player_Move_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CS_Player_Move_Request::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CS_Player_Move_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.CS_Player_Move_Request)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .msgTest.MoveState moveState = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.movestate_, this_._impl_.movestate_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.CS_Player_Move_Request)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CS_Player_Move_Request::ByteSizeLong(const MessageLite& base) {
          const CS_Player_Move_Request& this_ = static_cast<const CS_Player_Move_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CS_Player_Move_Request::ByteSizeLong() const {
          const CS_Player_Move_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.CS_Player_Move_Request)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .msgTest.MoveState moveState = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.movestate_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CS_Player_Move_Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CS_Player_Move_Request*>(&to_msg);
  auto& from = static_cast<const CS_Player_Move_Request&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.CS_Player_Move_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.movestate_ != nullptr);
    if (_this->_impl_.movestate_ == nullptr) {
      _this->_impl_.movestate_ =
          ::google::protobuf::Message::CopyConstruct<::msgTest::MoveState>(arena, *from._impl_.movestate_);
    } else {
      _this->_impl_.movestate_->MergeFrom(*from._impl_.movestate_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CS_Player_Move_Request::CopyFrom(const CS_Player_Move_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.CS_Player_Move_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CS_Player_Move_Request::InternalSwap(CS_Player_Move_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.movestate_, other->_impl_.movestate_);
}

::google::protobuf::Metadata CS_Player_Move_Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Player_Move_Notification::_Internal {
 public:
};

SC_Player_Move_Notification::SC_Player_Move_Notification(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Player_Move_Notification)
}
inline PROTOBUF_NDEBUG_INLINE SC_Player_Move_Notification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Player_Move_Notification& from_msg)
      : movestates_{visibility, arena, from.movestates_},
        _cached_size_{0} {}

SC_Player_Move_Notification::SC_Player_Move_Notification(
    ::google::protobuf::Arena* arena,
    const SC_Player_Move_Notification& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Player_Move_Notification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Player_Move_Notification)
}
inline PROTOBUF_NDEBUG_INLINE SC_Player_Move_Notification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : movestates_{visibility, arena},
        _cached_size_{0} {}

inline void SC_Player_Move_Notification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SC_Player_Move_Notification::~SC_Player_Move_Notification() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Player_Move_Notification)
  SharedDtor(*this);
}
inline void SC_Player_Move_Notification::SharedDtor(MessageLite& self) {
  SC_Player_Move_Notification& this_ = static_cast<SC_Player_Move_Notification&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SC_Player_Move_Notification::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Player_Move_Notification(arena);
}
constexpr auto SC_Player_Move_Notification::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SC_Player_Move_Notification, _impl_.movestates_) +
          decltype(SC_Player_Move_Notification::_impl_.movestates_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SC_Player_Move_Notification), alignof(SC_Player_Move_Notification), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SC_Player_Move_Notification::PlacementNew_,
                                 sizeof(SC_Player_Move_Notification),
                                 alignof(SC_Player_Move_Notification));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_Player_Move_Notification::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_Player_Move_Notification_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_Player_Move_Notification::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_Player_Move_Notification>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_Player_Move_Notification::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_Player_Move_Notification>(), &SC_Player_Move_Notification::ByteSizeLong,
            &SC_Player_Move_Notification::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_Player_Move_Notification, _impl_._cached_size_),
        false,
    },
    &SC_Player_Move_Notification::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_Player_Move_Notification::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SC_Player_Move_Notification::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Player_Move_Notification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .msgTest.MoveState moveStates = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Player_Move_Notification, _impl_.movestates_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .msgTest.MoveState moveStates = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Player_Move_Notification, _impl_.movestates_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::MoveState>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC_Player_Move_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Player_Move_Notification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.movestates_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Player_Move_Notification::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Player_Move_Notification& this_ = static_cast<const SC_Player_Move_Notification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Player_Move_Notification::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Player_Move_Notification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Player_Move_Notification)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .msgTest.MoveState moveStates = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_movestates_size());
               i < n; i++) {
            const auto& repfield = this_._internal_movestates().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Player_Move_Notification)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Player_Move_Notification::ByteSizeLong(const MessageLite& base) {
          const SC_Player_Move_Notification& this_ = static_cast<const SC_Player_Move_Notification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Player_Move_Notification::ByteSizeLong() const {
          const SC_Player_Move_Notification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Player_Move_Notification)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .msgTest.MoveState moveStates = 1;
            {
              total_size += 1UL * this_._internal_movestates_size();
              for (const auto& msg : this_._internal_movestates()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Player_Move_Notification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Player_Move_Notification*>(&to_msg);
  auto& from = static_cast<const SC_Player_Move_Notification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Player_Move_Notification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_movestates()->MergeFrom(
      from._internal_movestates());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Player_Move_Notification::CopyFrom(const SC_Player_Move_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Player_Move_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_Player_Move_Notification::InternalSwap(SC_Player_Move_Notification* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.movestates_.InternalSwap(&other->_impl_.movestates_);
}

::google::protobuf::Metadata SC_Player_Move_Notification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Player_List_In_Grid::_Internal {
 public:
};

SC_Player_List_In_Grid::SC_Player_List_In_Grid(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Player_List_In_Grid)
}
inline PROTOBUF_NDEBUG_INLINE SC_Player_List_In_Grid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Player_List_In_Grid& from_msg)
      : playernamelist_{visibility, arena, from.playernamelist_},
        _cached_size_{0} {}

SC_Player_List_In_Grid::SC_Player_List_In_Grid(
    ::google::protobuf::Arena* arena,
    const SC_Player_List_In_Grid& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Player_List_In_Grid* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Player_List_In_Grid)
}
inline PROTOBUF_NDEBUG_INLINE SC_Player_List_In_Grid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : playernamelist_{visibility, arena},
        _cached_size_{0} {}

inline void SC_Player_List_In_Grid::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SC_Player_List_In_Grid::~SC_Player_List_In_Grid() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Player_List_In_Grid)
  SharedDtor(*this);
}
inline void SC_Player_List_In_Grid::SharedDtor(MessageLite& self) {
  SC_Player_List_In_Grid& this_ = static_cast<SC_Player_List_In_Grid&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SC_Player_List_In_Grid::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Player_List_In_Grid(arena);
}
constexpr auto SC_Player_List_In_Grid::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SC_Player_List_In_Grid, _impl_.playernamelist_) +
          decltype(SC_Player_List_In_Grid::_impl_.playernamelist_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SC_Player_List_In_Grid), alignof(SC_Player_List_In_Grid), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SC_Player_List_In_Grid::PlacementNew_,
                                 sizeof(SC_Player_List_In_Grid),
                                 alignof(SC_Player_List_In_Grid));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_Player_List_In_Grid::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_Player_List_In_Grid_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_Player_List_In_Grid::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_Player_List_In_Grid>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_Player_List_In_Grid::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_Player_List_In_Grid>(), &SC_Player_List_In_Grid::ByteSizeLong,
            &SC_Player_List_In_Grid::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_Player_List_In_Grid, _impl_._cached_size_),
        false,
    },
    &SC_Player_List_In_Grid::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_Player_List_In_Grid::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 53, 2> SC_Player_List_In_Grid::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Player_List_In_Grid>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string playerNameList = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Player_List_In_Grid, _impl_.playernamelist_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string playerNameList = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Player_List_In_Grid, _impl_.playernamelist_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\36\16\0\0\0\0\0\0"
    "msgTest.SC_Player_List_In_Grid"
    "playerNameList"
  }},
};

PROTOBUF_NOINLINE void SC_Player_List_In_Grid::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Player_List_In_Grid)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playernamelist_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Player_List_In_Grid::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Player_List_In_Grid& this_ = static_cast<const SC_Player_List_In_Grid&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Player_List_In_Grid::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Player_List_In_Grid& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Player_List_In_Grid)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string playerNameList = 1;
          for (int i = 0, n = this_._internal_playernamelist_size(); i < n; ++i) {
            const auto& s = this_._internal_playernamelist().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msgTest.SC_Player_List_In_Grid.playerNameList");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Player_List_In_Grid)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Player_List_In_Grid::ByteSizeLong(const MessageLite& base) {
          const SC_Player_List_In_Grid& this_ = static_cast<const SC_Player_List_In_Grid&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Player_List_In_Grid::ByteSizeLong() const {
          const SC_Player_List_In_Grid& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Player_List_In_Grid)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string playerNameList = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_playernamelist().size());
              for (int i = 0, n = this_._internal_playernamelist().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_playernamelist().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Player_List_In_Grid::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Player_List_In_Grid*>(&to_msg);
  auto& from = static_cast<const SC_Player_List_In_Grid&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Player_List_In_Grid)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_playernamelist()->MergeFrom(from._internal_playernamelist());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Player_List_In_Grid::CopyFrom(const SC_Player_List_In_Grid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Player_List_In_Grid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_Player_List_In_Grid::InternalSwap(SC_Player_List_In_Grid* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.playernamelist_.InternalSwap(&other->_impl_.playernamelist_);
}

::google::protobuf::Metadata SC_Player_List_In_Grid::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CS_Skill_Use::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CS_Skill_Use>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_._has_bits_);
};

CS_Skill_Use::CS_Skill_Use(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.CS_Skill_Use)
}
inline PROTOBUF_NDEBUG_INLINE CS_Skill_Use::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::CS_Skill_Use& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CS_Skill_Use::CS_Skill_Use(
    ::google::protobuf::Arena* arena,
    const CS_Skill_Use& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CS_Skill_Use* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.direction_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(
                              arena, *from._impl_.direction_)
                        : nullptr;
  _impl_.targetpos_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(
                              arena, *from._impl_.targetpos_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, skillid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, skillid_),
           offsetof(Impl_, targetid_) -
               offsetof(Impl_, skillid_) +
               sizeof(Impl_::targetid_));

  // @@protoc_insertion_point(copy_constructor:msgTest.CS_Skill_Use)
}
inline PROTOBUF_NDEBUG_INLINE CS_Skill_Use::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CS_Skill_Use::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, direction_),
           0,
           offsetof(Impl_, targetid_) -
               offsetof(Impl_, direction_) +
               sizeof(Impl_::targetid_));
}
CS_Skill_Use::~CS_Skill_Use() {
  // @@protoc_insertion_point(destructor:msgTest.CS_Skill_Use)
  SharedDtor(*this);
}
inline void CS_Skill_Use::SharedDtor(MessageLite& self) {
  CS_Skill_Use& this_ = static_cast<CS_Skill_Use&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.direction_;
  delete this_._impl_.targetpos_;
  this_._impl_.~Impl_();
}

inline void* CS_Skill_Use::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CS_Skill_Use(arena);
}
constexpr auto CS_Skill_Use::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CS_Skill_Use),
                                            alignof(CS_Skill_Use));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CS_Skill_Use::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CS_Skill_Use_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CS_Skill_Use::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CS_Skill_Use>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CS_Skill_Use::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CS_Skill_Use>(), &CS_Skill_Use::ByteSizeLong,
            &CS_Skill_Use::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_._cached_size_),
        false,
    },
    &CS_Skill_Use::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CS_Skill_Use::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> CS_Skill_Use::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::CS_Skill_Use>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 skillId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CS_Skill_Use, _impl_.skillid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.skillid_)}},
    // .msgTest.SkillType skillType = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CS_Skill_Use, _impl_.skilltype_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.skilltype_)}},
    // .msgTest.Vector direction = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.direction_)}},
    // .msgTest.Vector targetPos = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.targetpos_)}},
    // int32 targetId = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CS_Skill_Use, _impl_.targetid_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.targetid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 skillId = 1;
    {PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.skillid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .msgTest.SkillType skillType = 2;
    {PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.skilltype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .msgTest.Vector direction = 3;
    {PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.direction_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msgTest.Vector targetPos = 4;
    {PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.targetpos_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 targetId = 5;
    {PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.targetid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::Vector>()},
    {::_pbi::TcParser::GetTable<::msgTest::Vector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CS_Skill_Use::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.CS_Skill_Use)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.direction_ != nullptr);
      _impl_.direction_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.targetpos_ != nullptr);
      _impl_.targetpos_->Clear();
    }
  }
  ::memset(&_impl_.skillid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.targetid_) -
      reinterpret_cast<char*>(&_impl_.skillid_)) + sizeof(_impl_.targetid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CS_Skill_Use::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CS_Skill_Use& this_ = static_cast<const CS_Skill_Use&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CS_Skill_Use::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CS_Skill_Use& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.CS_Skill_Use)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 skillId = 1;
          if (this_._internal_skillid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_skillid(), target);
          }

          // .msgTest.SkillType skillType = 2;
          if (this_._internal_skilltype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_skilltype(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .msgTest.Vector direction = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.direction_, this_._impl_.direction_->GetCachedSize(), target,
                stream);
          }

          // .msgTest.Vector targetPos = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.targetpos_, this_._impl_.targetpos_->GetCachedSize(), target,
                stream);
          }

          // int32 targetId = 5;
          if (this_._internal_targetid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_targetid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.CS_Skill_Use)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CS_Skill_Use::ByteSizeLong(const MessageLite& base) {
          const CS_Skill_Use& this_ = static_cast<const CS_Skill_Use&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CS_Skill_Use::ByteSizeLong() const {
          const CS_Skill_Use& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.CS_Skill_Use)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .msgTest.Vector direction = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.direction_);
            }
            // .msgTest.Vector targetPos = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.targetpos_);
            }
          }
           {
            // int32 skillId = 1;
            if (this_._internal_skillid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_skillid());
            }
            // .msgTest.SkillType skillType = 2;
            if (this_._internal_skilltype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_skilltype());
            }
            // int32 targetId = 5;
            if (this_._internal_targetid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_targetid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CS_Skill_Use::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CS_Skill_Use*>(&to_msg);
  auto& from = static_cast<const CS_Skill_Use&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.CS_Skill_Use)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.direction_ != nullptr);
      if (_this->_impl_.direction_ == nullptr) {
        _this->_impl_.direction_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(arena, *from._impl_.direction_);
      } else {
        _this->_impl_.direction_->MergeFrom(*from._impl_.direction_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.targetpos_ != nullptr);
      if (_this->_impl_.targetpos_ == nullptr) {
        _this->_impl_.targetpos_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(arena, *from._impl_.targetpos_);
      } else {
        _this->_impl_.targetpos_->MergeFrom(*from._impl_.targetpos_);
      }
    }
  }
  if (from._internal_skillid() != 0) {
    _this->_impl_.skillid_ = from._impl_.skillid_;
  }
  if (from._internal_skilltype() != 0) {
    _this->_impl_.skilltype_ = from._impl_.skilltype_;
  }
  if (from._internal_targetid() != 0) {
    _this->_impl_.targetid_ = from._impl_.targetid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CS_Skill_Use::CopyFrom(const CS_Skill_Use& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.CS_Skill_Use)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CS_Skill_Use::InternalSwap(CS_Skill_Use* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.targetid_)
      + sizeof(CS_Skill_Use::_impl_.targetid_)
      - PROTOBUF_FIELD_OFFSET(CS_Skill_Use, _impl_.direction_)>(
          reinterpret_cast<char*>(&_impl_.direction_),
          reinterpret_cast<char*>(&other->_impl_.direction_));
}

::google::protobuf::Metadata CS_Skill_Use::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Skill_Result::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC_Skill_Result>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_._has_bits_);
};

SC_Skill_Result::SC_Skill_Result(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Skill_Result)
}
inline PROTOBUF_NDEBUG_INLINE SC_Skill_Result::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Skill_Result& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC_Skill_Result::SC_Skill_Result(
    ::google::protobuf::Arena* arena,
    const SC_Skill_Result& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Skill_Result* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.direction_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(
                              arena, *from._impl_.direction_)
                        : nullptr;
  _impl_.targetpos_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(
                              arena, *from._impl_.targetpos_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, success_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::timestamp_));

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Skill_Result)
}
inline PROTOBUF_NDEBUG_INLINE SC_Skill_Result::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC_Skill_Result::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, direction_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, direction_) +
               sizeof(Impl_::timestamp_));
}
SC_Skill_Result::~SC_Skill_Result() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Skill_Result)
  SharedDtor(*this);
}
inline void SC_Skill_Result::SharedDtor(MessageLite& self) {
  SC_Skill_Result& this_ = static_cast<SC_Skill_Result&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.direction_;
  delete this_._impl_.targetpos_;
  this_._impl_.~Impl_();
}

inline void* SC_Skill_Result::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Skill_Result(arena);
}
constexpr auto SC_Skill_Result::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SC_Skill_Result),
                                            alignof(SC_Skill_Result));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_Skill_Result::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_Skill_Result_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_Skill_Result::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_Skill_Result>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_Skill_Result::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_Skill_Result>(), &SC_Skill_Result::ByteSizeLong,
            &SC_Skill_Result::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_._cached_size_),
        false,
    },
    &SC_Skill_Result::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_Skill_Result::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 0, 2> SC_Skill_Result::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Skill_Result>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SC_Skill_Result, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.success_)}},
    // .msgTest.SkillFailType skillFailType = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC_Skill_Result, _impl_.skillfailtype_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.skillfailtype_)}},
    // int32 skillId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC_Skill_Result, _impl_.skillid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.skillid_)}},
    // .msgTest.Vector direction = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.direction_)}},
    // .msgTest.Vector targetPos = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.targetpos_)}},
    // int32 targetId = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC_Skill_Result, _impl_.targetid_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.targetid_)}},
    // int64 timestamp = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SC_Skill_Result, _impl_.timestamp_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .msgTest.SkillFailType skillFailType = 2;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.skillfailtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 skillId = 3;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.skillid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .msgTest.Vector direction = 4;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.direction_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msgTest.Vector targetPos = 5;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.targetpos_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 targetId = 6;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.targetid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 timestamp = 7;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::Vector>()},
    {::_pbi::TcParser::GetTable<::msgTest::Vector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC_Skill_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Skill_Result)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.direction_ != nullptr);
      _impl_.direction_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.targetpos_ != nullptr);
      _impl_.targetpos_->Clear();
    }
  }
  ::memset(&_impl_.success_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.timestamp_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Skill_Result::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Skill_Result& this_ = static_cast<const SC_Skill_Result&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Skill_Result::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Skill_Result& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Skill_Result)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // .msgTest.SkillFailType skillFailType = 2;
          if (this_._internal_skillfailtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_skillfailtype(), target);
          }

          // int32 skillId = 3;
          if (this_._internal_skillid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_skillid(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .msgTest.Vector direction = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.direction_, this_._impl_.direction_->GetCachedSize(), target,
                stream);
          }

          // .msgTest.Vector targetPos = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.targetpos_, this_._impl_.targetpos_->GetCachedSize(), target,
                stream);
          }

          // int32 targetId = 6;
          if (this_._internal_targetid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_targetid(), target);
          }

          // int64 timestamp = 7;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Skill_Result)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Skill_Result::ByteSizeLong(const MessageLite& base) {
          const SC_Skill_Result& this_ = static_cast<const SC_Skill_Result&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Skill_Result::ByteSizeLong() const {
          const SC_Skill_Result& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Skill_Result)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .msgTest.Vector direction = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.direction_);
            }
            // .msgTest.Vector targetPos = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.targetpos_);
            }
          }
           {
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
            // .msgTest.SkillFailType skillFailType = 2;
            if (this_._internal_skillfailtype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_skillfailtype());
            }
            // int32 skillId = 3;
            if (this_._internal_skillid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_skillid());
            }
            // int32 targetId = 6;
            if (this_._internal_targetid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_targetid());
            }
            // int64 timestamp = 7;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Skill_Result::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Skill_Result*>(&to_msg);
  auto& from = static_cast<const SC_Skill_Result&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Skill_Result)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.direction_ != nullptr);
      if (_this->_impl_.direction_ == nullptr) {
        _this->_impl_.direction_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(arena, *from._impl_.direction_);
      } else {
        _this->_impl_.direction_->MergeFrom(*from._impl_.direction_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.targetpos_ != nullptr);
      if (_this->_impl_.targetpos_ == nullptr) {
        _this->_impl_.targetpos_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(arena, *from._impl_.targetpos_);
      } else {
        _this->_impl_.targetpos_->MergeFrom(*from._impl_.targetpos_);
      }
    }
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  if (from._internal_skillfailtype() != 0) {
    _this->_impl_.skillfailtype_ = from._impl_.skillfailtype_;
  }
  if (from._internal_skillid() != 0) {
    _this->_impl_.skillid_ = from._impl_.skillid_;
  }
  if (from._internal_targetid() != 0) {
    _this->_impl_.targetid_ = from._impl_.targetid_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Skill_Result::CopyFrom(const SC_Skill_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Skill_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_Skill_Result::InternalSwap(SC_Skill_Result* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.timestamp_)
      + sizeof(SC_Skill_Result::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(SC_Skill_Result, _impl_.direction_)>(
          reinterpret_cast<char*>(&_impl_.direction_),
          reinterpret_cast<char*>(&other->_impl_.direction_));
}

::google::protobuf::Metadata SC_Skill_Result::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC_Skill_Cast::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC_Skill_Cast>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_._has_bits_);
};

SC_Skill_Cast::SC_Skill_Cast(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msgTest.SC_Skill_Cast)
}
inline PROTOBUF_NDEBUG_INLINE SC_Skill_Cast::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::msgTest::SC_Skill_Cast& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC_Skill_Cast::SC_Skill_Cast(
    ::google::protobuf::Arena* arena,
    const SC_Skill_Cast& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC_Skill_Cast* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.startpos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(
                              arena, *from._impl_.startpos_)
                        : nullptr;
  _impl_.direction_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(
                              arena, *from._impl_.direction_)
                        : nullptr;
  _impl_.targetpos_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(
                              arena, *from._impl_.targetpos_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, casterid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, casterid_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, casterid_) +
               sizeof(Impl_::timestamp_));

  // @@protoc_insertion_point(copy_constructor:msgTest.SC_Skill_Cast)
}
inline PROTOBUF_NDEBUG_INLINE SC_Skill_Cast::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC_Skill_Cast::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, startpos_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, startpos_) +
               sizeof(Impl_::timestamp_));
}
SC_Skill_Cast::~SC_Skill_Cast() {
  // @@protoc_insertion_point(destructor:msgTest.SC_Skill_Cast)
  SharedDtor(*this);
}
inline void SC_Skill_Cast::SharedDtor(MessageLite& self) {
  SC_Skill_Cast& this_ = static_cast<SC_Skill_Cast&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.startpos_;
  delete this_._impl_.direction_;
  delete this_._impl_.targetpos_;
  this_._impl_.~Impl_();
}

inline void* SC_Skill_Cast::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SC_Skill_Cast(arena);
}
constexpr auto SC_Skill_Cast::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SC_Skill_Cast),
                                            alignof(SC_Skill_Cast));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SC_Skill_Cast::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SC_Skill_Cast_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SC_Skill_Cast::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SC_Skill_Cast>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SC_Skill_Cast::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SC_Skill_Cast>(), &SC_Skill_Cast::ByteSizeLong,
            &SC_Skill_Cast::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_._cached_size_),
        false,
    },
    &SC_Skill_Cast::kDescriptorMethods,
    &descriptor_table_messageTest_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SC_Skill_Cast::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 0, 2> SC_Skill_Cast::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msgTest::SC_Skill_Cast>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 timestamp = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SC_Skill_Cast, _impl_.timestamp_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.timestamp_)}},
    // int32 casterId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC_Skill_Cast, _impl_.casterid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.casterid_)}},
    // int32 skillId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC_Skill_Cast, _impl_.skillid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.skillid_)}},
    // .msgTest.SkillType skillType = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC_Skill_Cast, _impl_.skilltype_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.skilltype_)}},
    // .msgTest.Vector startPos = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.startpos_)}},
    // .msgTest.Vector direction = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.direction_)}},
    // .msgTest.Vector targetPos = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 2, PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.targetpos_)}},
    // int32 targetId = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC_Skill_Cast, _impl_.targetid_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.targetid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 casterId = 1;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.casterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 skillId = 2;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.skillid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .msgTest.SkillType skillType = 3;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.skilltype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .msgTest.Vector startPos = 4;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.startpos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msgTest.Vector direction = 5;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.direction_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msgTest.Vector targetPos = 6;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.targetpos_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 targetId = 7;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.targetid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 timestamp = 8;
    {PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msgTest::Vector>()},
    {::_pbi::TcParser::GetTable<::msgTest::Vector>()},
    {::_pbi::TcParser::GetTable<::msgTest::Vector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC_Skill_Cast::Clear() {
// @@protoc_insertion_point(message_clear_start:msgTest.SC_Skill_Cast)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.startpos_ != nullptr);
      _impl_.startpos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.direction_ != nullptr);
      _impl_.direction_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.targetpos_ != nullptr);
      _impl_.targetpos_->Clear();
    }
  }
  ::memset(&_impl_.casterid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.casterid_)) + sizeof(_impl_.timestamp_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC_Skill_Cast::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC_Skill_Cast& this_ = static_cast<const SC_Skill_Cast&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC_Skill_Cast::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC_Skill_Cast& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:msgTest.SC_Skill_Cast)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 casterId = 1;
          if (this_._internal_casterid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_casterid(), target);
          }

          // int32 skillId = 2;
          if (this_._internal_skillid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_skillid(), target);
          }

          // .msgTest.SkillType skillType = 3;
          if (this_._internal_skilltype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_skilltype(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .msgTest.Vector startPos = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.startpos_, this_._impl_.startpos_->GetCachedSize(), target,
                stream);
          }

          // .msgTest.Vector direction = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.direction_, this_._impl_.direction_->GetCachedSize(), target,
                stream);
          }

          // .msgTest.Vector targetPos = 6;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.targetpos_, this_._impl_.targetpos_->GetCachedSize(), target,
                stream);
          }

          // int32 targetId = 7;
          if (this_._internal_targetid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_targetid(), target);
          }

          // int64 timestamp = 8;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:msgTest.SC_Skill_Cast)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC_Skill_Cast::ByteSizeLong(const MessageLite& base) {
          const SC_Skill_Cast& this_ = static_cast<const SC_Skill_Cast&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC_Skill_Cast::ByteSizeLong() const {
          const SC_Skill_Cast& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:msgTest.SC_Skill_Cast)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .msgTest.Vector startPos = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.startpos_);
            }
            // .msgTest.Vector direction = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.direction_);
            }
            // .msgTest.Vector targetPos = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.targetpos_);
            }
          }
           {
            // int32 casterId = 1;
            if (this_._internal_casterid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_casterid());
            }
            // int32 skillId = 2;
            if (this_._internal_skillid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_skillid());
            }
            // .msgTest.SkillType skillType = 3;
            if (this_._internal_skilltype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_skilltype());
            }
            // int32 targetId = 7;
            if (this_._internal_targetid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_targetid());
            }
            // int64 timestamp = 8;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC_Skill_Cast::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC_Skill_Cast*>(&to_msg);
  auto& from = static_cast<const SC_Skill_Cast&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msgTest.SC_Skill_Cast)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.startpos_ != nullptr);
      if (_this->_impl_.startpos_ == nullptr) {
        _this->_impl_.startpos_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(arena, *from._impl_.startpos_);
      } else {
        _this->_impl_.startpos_->MergeFrom(*from._impl_.startpos_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.direction_ != nullptr);
      if (_this->_impl_.direction_ == nullptr) {
        _this->_impl_.direction_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(arena, *from._impl_.direction_);
      } else {
        _this->_impl_.direction_->MergeFrom(*from._impl_.direction_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.targetpos_ != nullptr);
      if (_this->_impl_.targetpos_ == nullptr) {
        _this->_impl_.targetpos_ =
            ::google::protobuf::Message::CopyConstruct<::msgTest::Vector>(arena, *from._impl_.targetpos_);
      } else {
        _this->_impl_.targetpos_->MergeFrom(*from._impl_.targetpos_);
      }
    }
  }
  if (from._internal_casterid() != 0) {
    _this->_impl_.casterid_ = from._impl_.casterid_;
  }
  if (from._internal_skillid() != 0) {
    _this->_impl_.skillid_ = from._impl_.skillid_;
  }
  if (from._internal_skilltype() != 0) {
    _this->_impl_.skilltype_ = from._impl_.skilltype_;
  }
  if (from._internal_targetid() != 0) {
    _this->_impl_.targetid_ = from._impl_.targetid_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC_Skill_Cast::CopyFrom(const SC_Skill_Cast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgTest.SC_Skill_Cast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC_Skill_Cast::InternalSwap(SC_Skill_Cast* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.timestamp_)
      + sizeof(SC_Skill_Cast::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(SC_Skill_Cast, _impl_.startpos_)>(
          reinterpret_cast<char*>(&_impl_.startpos_),
          reinterpret_cast<char*>(&other->_impl_.startpos_));
}

::google::protobuf::Metadata SC_Skill_Cast::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace msgTest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_messageTest_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
